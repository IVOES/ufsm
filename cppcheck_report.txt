compose/src/controller.c:1828:13: warning: Either the condition 'state' is redundant or there is possible null pointer dereference: state. [nullPointerRedundantCheck]
        if (state->selected) {
            ^
compose/src/controller.c:1817:12: note: Assuming that condition 'state' is not redundant
    while (state) {
           ^
compose/src/controller.c:1828:13: note: Null pointer dereference
        if (state->selected) {
            ^
compose/src/controller.c:1851:13: warning: Either the condition 'region' is redundant or there is possible null pointer dereference: region. [nullPointerRedundantCheck]
        if (region->selected) {
            ^
compose/src/controller.c:1840:12: note: Assuming that condition 'region' is not redundant
    while (region) {
           ^
compose/src/controller.c:1851:13: note: Null pointer dereference
        if (region->selected) {
            ^
compose/src/controller.c:928:25: style: Variable 'vsx' is reassigned a value before the old one has been used. [redundantAssignment]
                    vsx = vex;
                        ^
compose/src/controller.c:925:29: note: vsx is assigned
                        vsx = v->x + ox;
                            ^
compose/src/controller.c:928:25: note: vsx is overwritten
                    vsx = vex;
                        ^
compose/src/controller.c:929:25: style: Variable 'vsy' is reassigned a value before the old one has been used. [redundantAssignment]
                    vsy = vey;
                        ^
compose/src/controller.c:926:29: note: vsy is assigned
                        vsy = v->y + oy;
                            ^
compose/src/controller.c:929:25: note: vsy is overwritten
                    vsy = vey;
                        ^
compose/src/controller.c:3950:33: style: Variable 's2' is reassigned a value before the old one has been used. [redundantAssignment]
                        for (s2 = t->dest.state; s2; s2 = s2->parent_region->parent_state) {
                                ^
compose/src/controller.c:3948:28: note: s2 is assigned
                        s2 = t->dest.state;
                           ^
compose/src/controller.c:3950:33: note: s2 is overwritten
                        for (s2 = t->dest.state; s2; s2 = s2->parent_region->parent_state) {
                                ^
compose/src/controller.c:2119:29: style: The scope of the variable 'next' can be reduced. [variableScope]
    struct ufsmm_guard_ref *next, *prev;
                            ^
compose/src/controller.c:2192:30: style: The scope of the variable 'next' can be reduced. [variableScope]
    struct ufsmm_action_ref *next, *prev;
                             ^
compose/src/controller.c:2260:30: style: The scope of the variable 'next' can be reduced. [variableScope]
    struct ufsmm_action_ref *next, *prev;
                             ^
compose/src/controller.c:2330:30: style: The scope of the variable 'next' can be reduced. [variableScope]
    struct ufsmm_action_ref *next, *prev;
                             ^
compose/src/controller.c:2980:30: style: The scope of the variable 'aref' can be reduced. [variableScope]
    struct ufsmm_action_ref *aref;
                             ^
compose/src/controller.c:3639:12: style: The scope of the variable 'min_dist' can be reduced. [variableScope]
    double min_dist = 10000;
           ^
compose/src/controller.c:3996:9: style: The scope of the variable 'rc' can be reduced. [variableScope]
    int rc;
        ^
compose/src/controller.c:4643:12: style: The scope of the variable 'px' can be reduced. [variableScope]
    double px;
           ^
compose/src/controller.c:4644:12: style: The scope of the variable 'py' can be reduced. [variableScope]
    double py;
           ^
compose/src/controller.c:29:38: style:inconclusive: Function 'canvas_snap_enable_global' argument 1 names different: declaration 'user' definition 'context'. [funcArgNamesDifferent]
void canvas_snap_enable_global(void *context)
                                     ^
compose/src/logic/canvas.h:223:38: note: Function 'canvas_snap_enable_global' argument 1 names different: declaration 'user' definition 'context'.
void canvas_snap_enable_global(void *user);
                                     ^
compose/src/controller.c:29:38: note: Function 'canvas_snap_enable_global' argument 1 names different: declaration 'user' definition 'context'.
void canvas_snap_enable_global(void *context)
                                     ^
compose/src/controller.c:35:39: style:inconclusive: Function 'canvas_snap_disable_global' argument 1 names different: declaration 'user' definition 'context'. [funcArgNamesDifferent]
void canvas_snap_disable_global(void *context)
                                      ^
compose/src/logic/canvas.h:224:39: note: Function 'canvas_snap_disable_global' argument 1 names different: declaration 'user' definition 'context'.
void canvas_snap_disable_global(void *user);
                                      ^
compose/src/controller.c:35:39: note: Function 'canvas_snap_disable_global' argument 1 names different: declaration 'user' definition 'context'.
void canvas_snap_disable_global(void *context)
                                      ^
compose/src/controller.c:196:33: style:inconclusive: Function 'canvas_state_selected' argument 1 names different: declaration 'user' definition 'context'. [funcArgNamesDifferent]
int canvas_state_selected(void *context)
                                ^
compose/src/logic/canvas.h:54:33: note: Function 'canvas_state_selected' argument 1 names different: declaration 'user' definition 'context'.
int canvas_state_selected(void *user);
                                ^
compose/src/controller.c:196:33: note: Function 'canvas_state_selected' argument 1 names different: declaration 'user' definition 'context'.
int canvas_state_selected(void *context)
                                ^
compose/src/controller.c:205:40: style:inconclusive: Function 'canvas_state_resize_selected' argument 1 names different: declaration 'user' definition 'context'. [funcArgNamesDifferent]
int canvas_state_resize_selected(void *context)
                                       ^
compose/src/logic/canvas.h:55:40: note: Function 'canvas_state_resize_selected' argument 1 names different: declaration 'user' definition 'context'.
int canvas_state_resize_selected(void *user);
                                       ^
compose/src/controller.c:205:40: note: Function 'canvas_state_resize_selected' argument 1 names different: declaration 'user' definition 'context'.
int canvas_state_resize_selected(void *context)
                                       ^
compose/src/controller.c:211:34: style:inconclusive: Function 'canvas_region_selected' argument 1 names different: declaration 'user' definition 'context'. [funcArgNamesDifferent]
int canvas_region_selected(void *context)
                                 ^
compose/src/logic/canvas.h:53:34: note: Function 'canvas_region_selected' argument 1 names different: declaration 'user' definition 'context'.
int canvas_region_selected(void *user);
                                 ^
compose/src/controller.c:211:34: note: Function 'canvas_region_selected' argument 1 names different: declaration 'user' definition 'context'.
int canvas_region_selected(void *context)
                                 ^
compose/src/controller.c:222:38: style:inconclusive: Function 'canvas_resize_state_begin' argument 1 names different: declaration 'user' definition 'context'. [funcArgNamesDifferent]
void canvas_resize_state_begin(void *context)
                                     ^
compose/src/logic/canvas.h:102:38: note: Function 'canvas_resize_state_begin' argument 1 names different: declaration 'user' definition 'context'.
void canvas_resize_state_begin(void *user);
                                     ^
compose/src/controller.c:222:38: note: Function 'canvas_resize_state_begin' argument 1 names different: declaration 'user' definition 'context'.
void canvas_resize_state_begin(void *context)
                                     ^
compose/src/controller.c:277:36: style:inconclusive: Function 'canvas_resize_state_end' argument 1 names different: declaration 'user' definition 'context'. [funcArgNamesDifferent]
void canvas_resize_state_end(void *context)
                                   ^
compose/src/logic/canvas.h:133:36: note: Function 'canvas_resize_state_end' argument 1 names different: declaration 'user' definition 'context'.
void canvas_resize_state_end(void *user);
                                   ^
compose/src/controller.c:277:36: note: Function 'canvas_resize_state_end' argument 1 names different: declaration 'user' definition 'context'.
void canvas_resize_state_end(void *context)
                                   ^
compose/src/controller.c:310:32: style:inconclusive: Function 'canvas_resize_state' argument 1 names different: declaration 'user' definition 'context'. [funcArgNamesDifferent]
void canvas_resize_state(void *context)
                               ^
compose/src/logic/canvas.h:75:32: note: Function 'canvas_resize_state' argument 1 names different: declaration 'user' definition 'context'.
void canvas_resize_state(void *user);
                               ^
compose/src/controller.c:310:32: note: Function 'canvas_resize_state' argument 1 names different: declaration 'user' definition 'context'.
void canvas_resize_state(void *context)
                               ^
compose/src/controller.c:504:41: style:inconclusive: Function 'canvas_region_resize_selected' argument 1 names different: declaration 'user' definition 'context'. [funcArgNamesDifferent]
int canvas_region_resize_selected(void *context)
                                        ^
compose/src/logic/canvas.h:56:41: note: Function 'canvas_region_resize_selected' argument 1 names different: declaration 'user' definition 'context'.
int canvas_region_resize_selected(void *user);
                                        ^
compose/src/controller.c:504:41: note: Function 'canvas_region_resize_selected' argument 1 names different: declaration 'user' definition 'context'.
int canvas_region_resize_selected(void *context)
                                        ^
compose/src/controller.c:510:39: style:inconclusive: Function 'canvas_state_entry_selected' argument 1 names different: declaration 'user' definition 'context'. [funcArgNamesDifferent]
int canvas_state_entry_selected(void *context)
                                      ^
compose/src/logic/canvas.h:57:39: note: Function 'canvas_state_entry_selected' argument 1 names different: declaration 'user' definition 'context'.
int canvas_state_entry_selected(void *user);
                                      ^
compose/src/controller.c:510:39: note: Function 'canvas_state_entry_selected' argument 1 names different: declaration 'user' definition 'context'.
int canvas_state_entry_selected(void *context)
                                      ^
compose/src/controller.c:516:38: style:inconclusive: Function 'canvas_transition_selected' argument 1 names different: declaration 'user' definition 'context'. [funcArgNamesDifferent]
int canvas_transition_selected(void *context)
                                     ^
compose/src/logic/canvas.h:58:38: note: Function 'canvas_transition_selected' argument 1 names different: declaration 'user' definition 'context'.
int canvas_transition_selected(void *user);
                                     ^
compose/src/controller.c:516:38: note: Function 'canvas_transition_selected' argument 1 names different: declaration 'user' definition 'context'.
int canvas_transition_selected(void *context)
                                     ^
compose/src/controller.c:523:39: style:inconclusive: Function 'canvas_transition_selected2' argument 1 names different: declaration 'user' definition 'context'. [funcArgNamesDifferent]
int canvas_transition_selected2(void *context)
                                      ^
compose/src/logic/canvas.h:66:39: note: Function 'canvas_transition_selected2' argument 1 names different: declaration 'user' definition 'context'.
int canvas_transition_selected2(void *user);
                                      ^
compose/src/controller.c:523:39: note: Function 'canvas_transition_selected2' argument 1 names different: declaration 'user' definition 'context'.
int canvas_transition_selected2(void *context)
                                      ^
compose/src/controller.c:531:46: style:inconclusive: Function 'canvas_transition_vertice_selected' argument 1 names different: declaration 'user' definition 'context'. [funcArgNamesDifferent]
int canvas_transition_vertice_selected(void *context)
                                             ^
compose/src/logic/canvas.h:65:46: note: Function 'canvas_transition_vertice_selected' argument 1 names different: declaration 'user' definition 'context'.
int canvas_transition_vertice_selected(void *user);
                                             ^
compose/src/controller.c:531:46: note: Function 'canvas_transition_vertice_selected' argument 1 names different: declaration 'user' definition 'context'.
int canvas_transition_vertice_selected(void *context)
                                             ^
compose/src/controller.c:584:49: style:inconclusive: Function 'canvas_transition_text_block_selected' argument 1 names different: declaration 'user' definition 'context'. [funcArgNamesDifferent]
int canvas_transition_text_block_selected(void *context)
                                                ^
compose/src/logic/canvas.h:60:49: note: Function 'canvas_transition_text_block_selected' argument 1 names different: declaration 'user' definition 'context'.
int canvas_transition_text_block_selected(void *user);
                                                ^
compose/src/controller.c:584:49: note: Function 'canvas_transition_text_block_selected' argument 1 names different: declaration 'user' definition 'context'.
int canvas_transition_text_block_selected(void *context)
                                                ^
compose/src/controller.c:629:36: style:inconclusive: Function 'canvas_reset_selection2' argument 1 names different: declaration 'user' definition 'context'. [funcArgNamesDifferent]
void canvas_reset_selection2(void *context)
                                   ^
compose/src/logic/canvas.h:185:36: note: Function 'canvas_reset_selection2' argument 1 names different: declaration 'user' definition 'context'.
void canvas_reset_selection2(void *user);
                                   ^
compose/src/controller.c:629:36: note: Function 'canvas_reset_selection2' argument 1 names different: declaration 'user' definition 'context'.
void canvas_reset_selection2(void *context)
                                   ^
compose/src/controller.c:654:35: style:inconclusive: Function 'canvas_reset_selection' argument 1 names different: declaration 'user' definition 'context'. [funcArgNamesDifferent]
void canvas_reset_selection(void *context)
                                  ^
compose/src/logic/canvas.h:181:35: note: Function 'canvas_reset_selection' argument 1 names different: declaration 'user' definition 'context'.
void canvas_reset_selection(void *user);
                                  ^
compose/src/controller.c:654:35: note: Function 'canvas_reset_selection' argument 1 names different: declaration 'user' definition 'context'.
void canvas_reset_selection(void *context)
                                  ^
compose/src/controller.c:694:34: style:inconclusive: Function 'canvas_selection_count' argument 1 names different: declaration 'user' definition 'context'. [funcArgNamesDifferent]
int canvas_selection_count(void *context)
                                 ^
compose/src/logic/canvas.h:68:34: note: Function 'canvas_selection_count' argument 1 names different: declaration 'user' definition 'context'.
int canvas_selection_count(void *user);
                                 ^
compose/src/controller.c:694:34: note: Function 'canvas_selection_count' argument 1 names different: declaration 'user' definition 'context'.
int canvas_selection_count(void *context)
                                 ^
compose/src/controller.c:701:38: style:inconclusive: Function 'canvas_clicked_on_selected' argument 1 names different: declaration 'user' definition 'context'. [funcArgNamesDifferent]
int canvas_clicked_on_selected(void *context)
                                     ^
compose/src/logic/canvas.h:67:38: note: Function 'canvas_clicked_on_selected' argument 1 names different: declaration 'user' definition 'context'.
int canvas_clicked_on_selected(void *user);
                                     ^
compose/src/controller.c:701:38: note: Function 'canvas_clicked_on_selected' argument 1 names different: declaration 'user' definition 'context'.
int canvas_clicked_on_selected(void *context)
                                     ^
compose/src/controller.c:758:37: style:inconclusive: Function 'canvas_process_selection' argument 1 names different: declaration 'user' definition 'context'. [funcArgNamesDifferent]
void canvas_process_selection(void *context)
                                    ^
compose/src/logic/canvas.h:104:37: note: Function 'canvas_process_selection' argument 1 names different: declaration 'user' definition 'context'.
void canvas_process_selection(void *user);
                                    ^
compose/src/controller.c:758:37: note: Function 'canvas_process_selection' argument 1 names different: declaration 'user' definition 'context'.
void canvas_process_selection(void *context)
                                    ^
compose/src/controller.c:967:35: style:inconclusive: Function 'canvas_focus_selection' argument 1 names different: declaration 'user' definition 'context'. [funcArgNamesDifferent]
void canvas_focus_selection(void *context)
                                  ^
compose/src/logic/canvas.h:186:35: note: Function 'canvas_focus_selection' argument 1 names different: declaration 'user' definition 'context'.
void canvas_focus_selection(void *user);
                                  ^
compose/src/controller.c:967:35: note: Function 'canvas_focus_selection' argument 1 names different: declaration 'user' definition 'context'.
void canvas_focus_selection(void *context)
                                  ^
compose/src/controller.c:1056:24: style:inconclusive: Function 'canvas_save' argument 1 names different: declaration 'user' definition 'context'. [funcArgNamesDifferent]
void canvas_save(void *context)
                       ^
compose/src/logic/canvas.h:103:24: note: Function 'canvas_save' argument 1 names different: declaration 'user' definition 'context'.
void canvas_save(void *user);
                       ^
compose/src/controller.c:1056:24: note: Function 'canvas_save' argument 1 names different: declaration 'user' definition 'context'.
void canvas_save(void *context)
                       ^
compose/src/controller.c:1070:32: style:inconclusive: Function 'canvas_rotate_state' argument 1 names different: declaration 'user' definition 'context'. [funcArgNamesDifferent]
void canvas_rotate_state(void *context)
                               ^
compose/src/logic/canvas.h:134:32: note: Function 'canvas_rotate_state' argument 1 names different: declaration 'user' definition 'context'.
void canvas_rotate_state(void *user);
                               ^
compose/src/controller.c:1070:32: note: Function 'canvas_rotate_state' argument 1 names different: declaration 'user' definition 'context'.
void canvas_rotate_state(void *context)
                               ^
compose/src/controller.c:1113:39: style:inconclusive: Function 'canvas_check_sresize_boxes' argument 1 names different: declaration 'user' definition 'context'. [funcArgNamesDifferent]
void canvas_check_sresize_boxes(void *context)
                                      ^
compose/src/logic/canvas.h:105:39: note: Function 'canvas_check_sresize_boxes' argument 1 names different: declaration 'user' definition 'context'.
void canvas_check_sresize_boxes(void *user);
                                      ^
compose/src/controller.c:1113:39: note: Function 'canvas_check_sresize_boxes' argument 1 names different: declaration 'user' definition 'context'.
void canvas_check_sresize_boxes(void *context)
                                      ^
compose/src/controller.c:1187:39: style:inconclusive: Function 'canvas_check_rresize_boxes' argument 1 names different: declaration 'user' definition 'context'. [funcArgNamesDifferent]
void canvas_check_rresize_boxes(void *context)
                                      ^
compose/src/logic/canvas.h:106:39: note: Function 'canvas_check_rresize_boxes' argument 1 names different: declaration 'user' definition 'context'.
void canvas_check_rresize_boxes(void *user);
                                      ^
compose/src/controller.c:1187:39: note: Function 'canvas_check_rresize_boxes' argument 1 names different: declaration 'user' definition 'context'.
void canvas_check_rresize_boxes(void *context)
                                      ^
compose/src/controller.c:1212:37: style:inconclusive: Function 'canvas_check_action_func' argument 1 names different: declaration 'user' definition 'context'. [funcArgNamesDifferent]
void canvas_check_action_func(void *context)
                                    ^
compose/src/logic/canvas.h:107:37: note: Function 'canvas_check_action_func' argument 1 names different: declaration 'user' definition 'context'.
void canvas_check_action_func(void *user);
                                    ^
compose/src/controller.c:1212:37: note: Function 'canvas_check_action_func' argument 1 names different: declaration 'user' definition 'context'.
void canvas_check_action_func(void *context)
                                    ^
compose/src/controller.c:1255:38: style:inconclusive: Function 'canvas_move_vertice_begin' argument 1 names different: declaration 'user' definition 'context'. [funcArgNamesDifferent]
void canvas_move_vertice_begin(void *context)
                                     ^
compose/src/logic/canvas.h:177:38: note: Function 'canvas_move_vertice_begin' argument 1 names different: declaration 'user' definition 'context'.
void canvas_move_vertice_begin(void *user);
                                     ^
compose/src/controller.c:1255:38: note: Function 'canvas_move_vertice_begin' argument 1 names different: declaration 'user' definition 'context'.
void canvas_move_vertice_begin(void *context)
                                     ^
compose/src/controller.c:1280:36: style:inconclusive: Function 'canvas_move_vertice_end' argument 1 names different: declaration 'user' definition 'context'. [funcArgNamesDifferent]
void canvas_move_vertice_end(void *context)
                                   ^
compose/src/logic/canvas.h:178:36: note: Function 'canvas_move_vertice_end' argument 1 names different: declaration 'user' definition 'context'.
void canvas_move_vertice_end(void *user);
                                   ^
compose/src/controller.c:1280:36: note: Function 'canvas_move_vertice_end' argument 1 names different: declaration 'user' definition 'context'.
void canvas_move_vertice_end(void *context)
                                   ^
compose/src/controller.c:1311:32: style:inconclusive: Function 'canvas_move_vertice' argument 1 names different: declaration 'user' definition 'context'. [funcArgNamesDifferent]
void canvas_move_vertice(void *context)
                               ^
compose/src/logic/canvas.h:80:32: note: Function 'canvas_move_vertice' argument 1 names different: declaration 'user' definition 'context'.
void canvas_move_vertice(void *user);
                               ^
compose/src/controller.c:1311:32: note: Function 'canvas_move_vertice' argument 1 names different: declaration 'user' definition 'context'.
void canvas_move_vertice(void *context)
                               ^
compose/src/controller.c:1425:31: style:inconclusive: Function 'canvas_check_guard' argument 1 names different: declaration 'user' definition 'context'. [funcArgNamesDifferent]
void canvas_check_guard(void *context)
                              ^
compose/src/logic/canvas.h:108:31: note: Function 'canvas_check_guard' argument 1 names different: declaration 'user' definition 'context'.
void canvas_check_guard(void *user);
                              ^
compose/src/controller.c:1425:31: note: Function 'canvas_check_guard' argument 1 names different: declaration 'user' definition 'context'.
void canvas_check_guard(void *context)
                              ^
compose/src/controller.c:1448:32: style:inconclusive: Function 'canvas_check_action' argument 1 names different: declaration 'user' definition 'context'. [funcArgNamesDifferent]
void canvas_check_action(void *context)
                               ^
compose/src/logic/canvas.h:109:32: note: Function 'canvas_check_action' argument 1 names different: declaration 'user' definition 'context'.
void canvas_check_action(void *user);
                               ^
compose/src/controller.c:1448:32: note: Function 'canvas_check_action' argument 1 names different: declaration 'user' definition 'context'.
void canvas_check_action(void *context)
                               ^
compose/src/controller.c:1471:31: style:inconclusive: Function 'canvas_focus_guard' argument 1 names different: declaration 'user' definition 'context'. [funcArgNamesDifferent]
void canvas_focus_guard(void *context)
                              ^
compose/src/logic/canvas.h:110:31: note: Function 'canvas_focus_guard' argument 1 names different: declaration 'user' definition 'context'.
void canvas_focus_guard(void *user);
                              ^
compose/src/controller.c:1471:31: note: Function 'canvas_focus_guard' argument 1 names different: declaration 'user' definition 'context'.
void canvas_focus_guard(void *context)
                              ^
compose/src/controller.c:1477:32: style:inconclusive: Function 'canvas_focus_action' argument 1 names different: declaration 'user' definition 'context'. [funcArgNamesDifferent]
void canvas_focus_action(void *context)
                               ^
compose/src/logic/canvas.h:111:32: note: Function 'canvas_focus_action' argument 1 names different: declaration 'user' definition 'context'.
void canvas_focus_action(void *user);
                               ^
compose/src/controller.c:1477:32: note: Function 'canvas_focus_action' argument 1 names different: declaration 'user' definition 'context'.
void canvas_focus_action(void *context)
                               ^
compose/src/controller.c:1483:31: style:inconclusive: Function 'canvas_focus_entry' argument 1 names different: declaration 'user' definition 'context'. [funcArgNamesDifferent]
void canvas_focus_entry(void *context)
                              ^
compose/src/logic/canvas.h:112:31: note: Function 'canvas_focus_entry' argument 1 names different: declaration 'user' definition 'context'.
void canvas_focus_entry(void *user);
                              ^
compose/src/controller.c:1483:31: note: Function 'canvas_focus_entry' argument 1 names different: declaration 'user' definition 'context'.
void canvas_focus_entry(void *context)
                              ^
compose/src/controller.c:1489:30: style:inconclusive: Function 'canvas_focus_exit' argument 1 names different: declaration 'user' definition 'context'. [funcArgNamesDifferent]
void canvas_focus_exit(void *context)
                             ^
compose/src/logic/canvas.h:113:30: note: Function 'canvas_focus_exit' argument 1 names different: declaration 'user' definition 'context'.
void canvas_focus_exit(void *user);
                             ^
compose/src/controller.c:1489:30: note: Function 'canvas_focus_exit' argument 1 names different: declaration 'user' definition 'context'.
void canvas_focus_exit(void *context)
                             ^
compose/src/controller.c:1495:36: style:inconclusive: Function 'canvas_check_text_block' argument 1 names different: declaration 'user' definition 'context'. [funcArgNamesDifferent]
void canvas_check_text_block(void *context)
                                   ^
compose/src/logic/canvas.h:114:36: note: Function 'canvas_check_text_block' argument 1 names different: declaration 'user' definition 'context'.
void canvas_check_text_block(void *user);
                                   ^
compose/src/controller.c:1495:36: note: Function 'canvas_check_text_block' argument 1 names different: declaration 'user' definition 'context'.
void canvas_check_text_block(void *context)
                                   ^
compose/src/controller.c:1500:33: style:inconclusive: Function 'canvas_guard_selected' argument 1 names different: declaration 'user' definition 'context'. [funcArgNamesDifferent]
int canvas_guard_selected(void *context)
                                ^
compose/src/logic/canvas.h:61:33: note: Function 'canvas_guard_selected' argument 1 names different: declaration 'user' definition 'context'.
int canvas_guard_selected(void *user);
                                ^
compose/src/controller.c:1500:33: note: Function 'canvas_guard_selected' argument 1 names different: declaration 'user' definition 'context'.
int canvas_guard_selected(void *context)
                                ^
compose/src/controller.c:1506:34: style:inconclusive: Function 'canvas_action_selected' argument 1 names different: declaration 'user' definition 'context'. [funcArgNamesDifferent]
int canvas_action_selected(void *context)
                                 ^
compose/src/logic/canvas.h:62:34: note: Function 'canvas_action_selected' argument 1 names different: declaration 'user' definition 'context'.
int canvas_action_selected(void *user);
                                 ^
compose/src/controller.c:1506:34: note: Function 'canvas_action_selected' argument 1 names different: declaration 'user' definition 'context'.
int canvas_action_selected(void *context)
                                 ^
compose/src/controller.c:1512:38: style:inconclusive: Function 'canvas_state_exit_selected' argument 1 names different: declaration 'user' definition 'context'. [funcArgNamesDifferent]
int canvas_state_exit_selected(void *context)
                                     ^
compose/src/logic/canvas.h:63:38: note: Function 'canvas_state_exit_selected' argument 1 names different: declaration 'user' definition 'context'.
int canvas_state_exit_selected(void *user);
                                     ^
compose/src/controller.c:1512:38: note: Function 'canvas_state_exit_selected' argument 1 names different: declaration 'user' definition 'context'.
int canvas_state_exit_selected(void *context)
                                     ^
compose/src/controller.c:1518:44: style:inconclusive: Function 'canvas_textblock_resize_selected' argument 1 names different: declaration 'user' definition 'context'. [funcArgNamesDifferent]
int canvas_textblock_resize_selected(void *context)
                                           ^
compose/src/logic/canvas.h:64:44: note: Function 'canvas_textblock_resize_selected' argument 1 names different: declaration 'user' definition 'context'.
int canvas_textblock_resize_selected(void *user);
                                           ^
compose/src/controller.c:1518:44: note: Function 'canvas_textblock_resize_selected' argument 1 names different: declaration 'user' definition 'context'.
int canvas_textblock_resize_selected(void *context)
                                           ^
compose/src/controller.c:1525:38: style:inconclusive: Function 'canvas_select_root_region' argument 1 names different: declaration 'user' definition 'context'. [funcArgNamesDifferent]
void canvas_select_root_region(void *context)
                                     ^
compose/src/logic/canvas.h:72:38: note: Function 'canvas_select_root_region' argument 1 names different: declaration 'user' definition 'context'.
void canvas_select_root_region(void *user);
                                     ^
compose/src/controller.c:1525:38: note: Function 'canvas_select_root_region' argument 1 names different: declaration 'user' definition 'context'.
void canvas_select_root_region(void *context)
                                     ^
compose/src/controller.c:1530:36: style:inconclusive: Function 'canvas_move_state_begin' argument 1 names different: declaration 'user' definition 'context'. [funcArgNamesDifferent]
void canvas_move_state_begin(void *context)
                                   ^
compose/src/logic/canvas.h:115:36: note: Function 'canvas_move_state_begin' argument 1 names different: declaration 'user' definition 'context'.
void canvas_move_state_begin(void *user);
                                   ^
compose/src/controller.c:1530:36: note: Function 'canvas_move_state_begin' argument 1 names different: declaration 'user' definition 'context'.
void canvas_move_state_begin(void *context)
                                   ^
compose/src/controller.c:1613:34: style:inconclusive: Function 'canvas_move_state_end' argument 1 names different: declaration 'user' definition 'context'. [funcArgNamesDifferent]
void canvas_move_state_end(void *context)
                                 ^
compose/src/logic/canvas.h:117:34: note: Function 'canvas_move_state_end' argument 1 names different: declaration 'user' definition 'context'.
void canvas_move_state_end(void *user);
                                 ^
compose/src/controller.c:1613:34: note: Function 'canvas_move_state_end' argument 1 names different: declaration 'user' definition 'context'.
void canvas_move_state_end(void *context)
                                 ^
compose/src/controller.c:1681:30: style:inconclusive: Function 'canvas_move_state' argument 1 names different: declaration 'user' definition 'context'. [funcArgNamesDifferent]
void canvas_move_state(void *context)
                             ^
compose/src/logic/canvas.h:74:30: note: Function 'canvas_move_state' argument 1 names different: declaration 'user' definition 'context'.
void canvas_move_state(void *user);
                             ^
compose/src/controller.c:1681:30: note: Function 'canvas_move_state' argument 1 names different: declaration 'user' definition 'context'.
void canvas_move_state(void *context)
                             ^
compose/src/controller.c:1772:39: style:inconclusive: Function 'canvas_resize_region_begin' argument 1 names different: declaration 'user' definition 'context'. [funcArgNamesDifferent]
void canvas_resize_region_begin(void *context)
                                      ^
compose/src/logic/canvas.h:116:39: note: Function 'canvas_resize_region_begin' argument 1 names different: declaration 'user' definition 'context'.
void canvas_resize_region_begin(void *user);
                                      ^
compose/src/controller.c:1772:39: note: Function 'canvas_resize_region_begin' argument 1 names different: declaration 'user' definition 'context'.
void canvas_resize_region_begin(void *context)
                                      ^
compose/src/controller.c:1779:33: style:inconclusive: Function 'canvas_resize_region' argument 1 names different: declaration 'user' definition 'context'. [funcArgNamesDifferent]
void canvas_resize_region(void *context)
                                ^
compose/src/logic/canvas.h:76:33: note: Function 'canvas_resize_region' argument 1 names different: declaration 'user' definition 'context'.
void canvas_resize_region(void *user);
                                ^
compose/src/controller.c:1779:33: note: Function 'canvas_resize_region' argument 1 names different: declaration 'user' definition 'context'.
void canvas_resize_region(void *context)
                                ^
compose/src/controller.c:1807:31: style:inconclusive: Function 'canvas_reset_delta' argument 1 names different: declaration 'user' definition 'context'. [funcArgNamesDifferent]
void canvas_reset_delta(void *context)
                              ^
compose/src/logic/canvas.h:194:31: note: Function 'canvas_reset_delta' argument 1 names different: declaration 'user' definition 'context'.
void canvas_reset_delta(void *user);
                              ^
compose/src/controller.c:1807:31: note: Function 'canvas_reset_delta' argument 1 names different: declaration 'user' definition 'context'.
void canvas_reset_delta(void *context)
                              ^
compose/src/controller.c:1973:34: style:inconclusive: Function 'canvas_mselect_delete' argument 1 names different: declaration 'user' definition 'context'. [funcArgNamesDifferent]
void canvas_mselect_delete(void *context)
                                 ^
compose/src/logic/canvas.h:195:34: note: Function 'canvas_mselect_delete' argument 1 names different: declaration 'user' definition 'context'.
void canvas_mselect_delete(void *user);
                                 ^
compose/src/controller.c:1973:34: note: Function 'canvas_mselect_delete' argument 1 names different: declaration 'user' definition 'context'.
void canvas_mselect_delete(void *context)
                                 ^
compose/src/controller.c:2034:37: style:inconclusive: Function 'canvas_resize_region_end' argument 1 names different: declaration 'user' definition 'context'. [funcArgNamesDifferent]
void canvas_resize_region_end(void *context)
                                    ^
compose/src/logic/canvas.h:118:37: note: Function 'canvas_resize_region_end' argument 1 names different: declaration 'user' definition 'context'.
void canvas_resize_region_end(void *user);
                                    ^
compose/src/controller.c:2034:37: note: Function 'canvas_resize_region_end' argument 1 names different: declaration 'user' definition 'context'.
void canvas_resize_region_end(void *context)
                                    ^
compose/src/controller.c:2042:41: style:inconclusive: Function 'canvas_move_text_block_begin' argument 1 names different: declaration 'user' definition 'context'. [funcArgNamesDifferent]
void canvas_move_text_block_begin(void *context)
                                        ^
compose/src/logic/canvas.h:171:41: note: Function 'canvas_move_text_block_begin' argument 1 names different: declaration 'user' definition 'context'.
void canvas_move_text_block_begin(void *user);
                                        ^
compose/src/controller.c:2042:41: note: Function 'canvas_move_text_block_begin' argument 1 names different: declaration 'user' definition 'context'.
void canvas_move_text_block_begin(void *context)
                                        ^
compose/src/controller.c:2047:39: style:inconclusive: Function 'canvas_move_text_block_end' argument 1 names different: declaration 'user' definition 'context'. [funcArgNamesDifferent]
void canvas_move_text_block_end(void *context)
                                      ^
compose/src/logic/canvas.h:172:39: note: Function 'canvas_move_text_block_end' argument 1 names different: declaration 'user' definition 'context'.
void canvas_move_text_block_end(void *user);
                                      ^
compose/src/controller.c:2047:39: note: Function 'canvas_move_text_block_end' argument 1 names different: declaration 'user' definition 'context'.
void canvas_move_text_block_end(void *context)
                                      ^
compose/src/controller.c:2057:35: style:inconclusive: Function 'canvas_move_text_block' argument 1 names different: declaration 'user' definition 'context'. [funcArgNamesDifferent]
void canvas_move_text_block(void *context)
                                  ^
compose/src/logic/canvas.h:79:35: note: Function 'canvas_move_text_block' argument 1 names different: declaration 'user' definition 'context'.
void canvas_move_text_block(void *user);
                                  ^
compose/src/controller.c:2057:35: note: Function 'canvas_move_text_block' argument 1 names different: declaration 'user' definition 'context'.
void canvas_move_text_block(void *context)
                                  ^
compose/src/controller.c:2073:39: style:inconclusive: Function 'canvas_reorder_guard_begin' argument 1 names different: declaration 'user' definition 'context'. [funcArgNamesDifferent]
void canvas_reorder_guard_begin(void *context)
                                      ^
compose/src/logic/canvas.h:201:39: note: Function 'canvas_reorder_guard_begin' argument 1 names different: declaration 'user' definition 'context'.
void canvas_reorder_guard_begin(void *user);
                                      ^
compose/src/controller.c:2073:39: note: Function 'canvas_reorder_guard_begin' argument 1 names different: declaration 'user' definition 'context'.
void canvas_reorder_guard_begin(void *context)
                                      ^
compose/src/controller.c:2094:37: style:inconclusive: Function 'canvas_reorder_guard_end' argument 1 names different: declaration 'user' definition 'context'. [funcArgNamesDifferent]
void canvas_reorder_guard_end(void *context)
                                    ^
compose/src/logic/canvas.h:202:37: note: Function 'canvas_reorder_guard_end' argument 1 names different: declaration 'user' definition 'context'.
void canvas_reorder_guard_end(void *user);
                                    ^
compose/src/controller.c:2094:37: note: Function 'canvas_reorder_guard_end' argument 1 names different: declaration 'user' definition 'context'.
void canvas_reorder_guard_end(void *context)
                                    ^
compose/src/controller.c:2114:38: style:inconclusive: Function 'canvas_reorder_guard_func' argument 1 names different: declaration 'user' definition 'context'. [funcArgNamesDifferent]
void canvas_reorder_guard_func(void *context)
                                     ^
compose/src/logic/canvas.h:82:38: note: Function 'canvas_reorder_guard_func' argument 1 names different: declaration 'user' definition 'context'.
void canvas_reorder_guard_func(void *user);
                                     ^
compose/src/controller.c:2114:38: note: Function 'canvas_reorder_guard_func' argument 1 names different: declaration 'user' definition 'context'.
void canvas_reorder_guard_func(void *context)
                                     ^
compose/src/controller.c:2146:40: style:inconclusive: Function 'canvas_reorder_action_begin' argument 1 names different: declaration 'user' definition 'context'. [funcArgNamesDifferent]
void canvas_reorder_action_begin(void *context)
                                       ^
compose/src/logic/canvas.h:199:40: note: Function 'canvas_reorder_action_begin' argument 1 names different: declaration 'user' definition 'context'.
void canvas_reorder_action_begin(void *user);
                                       ^
compose/src/controller.c:2146:40: note: Function 'canvas_reorder_action_begin' argument 1 names different: declaration 'user' definition 'context'.
void canvas_reorder_action_begin(void *context)
                                       ^
compose/src/controller.c:2167:38: style:inconclusive: Function 'canvas_reorder_action_end' argument 1 names different: declaration 'user' definition 'context'. [funcArgNamesDifferent]
void canvas_reorder_action_end(void *context)
                                     ^
compose/src/logic/canvas.h:200:38: note: Function 'canvas_reorder_action_end' argument 1 names different: declaration 'user' definition 'context'.
void canvas_reorder_action_end(void *user);
                                     ^
compose/src/controller.c:2167:38: note: Function 'canvas_reorder_action_end' argument 1 names different: declaration 'user' definition 'context'.
void canvas_reorder_action_end(void *context)
                                     ^
compose/src/controller.c:2187:39: style:inconclusive: Function 'canvas_reorder_action_func' argument 1 names different: declaration 'user' definition 'context'. [funcArgNamesDifferent]
void canvas_reorder_action_func(void *context)
                                      ^
compose/src/logic/canvas.h:83:39: note: Function 'canvas_reorder_action_func' argument 1 names different: declaration 'user' definition 'context'.
void canvas_reorder_action_func(void *user);
                                      ^
compose/src/controller.c:2187:39: note: Function 'canvas_reorder_action_func' argument 1 names different: declaration 'user' definition 'context'.
void canvas_reorder_action_func(void *context)
                                      ^
compose/src/controller.c:2214:39: style:inconclusive: Function 'canvas_reorder_entry_begin' argument 1 names different: declaration 'user' definition 'context'. [funcArgNamesDifferent]
void canvas_reorder_entry_begin(void *context)
                                      ^
compose/src/logic/canvas.h:205:39: note: Function 'canvas_reorder_entry_begin' argument 1 names different: declaration 'user' definition 'context'.
void canvas_reorder_entry_begin(void *user);
                                      ^
compose/src/controller.c:2214:39: note: Function 'canvas_reorder_entry_begin' argument 1 names different: declaration 'user' definition 'context'.
void canvas_reorder_entry_begin(void *context)
                                      ^
compose/src/controller.c:2235:37: style:inconclusive: Function 'canvas_reorder_entry_end' argument 1 names different: declaration 'user' definition 'context'. [funcArgNamesDifferent]
void canvas_reorder_entry_end(void *context)
                                    ^
compose/src/logic/canvas.h:206:37: note: Function 'canvas_reorder_entry_end' argument 1 names different: declaration 'user' definition 'context'.
void canvas_reorder_entry_end(void *user);
                                    ^
compose/src/controller.c:2235:37: note: Function 'canvas_reorder_entry_end' argument 1 names different: declaration 'user' definition 'context'.
void canvas_reorder_entry_end(void *context)
                                    ^
compose/src/controller.c:2255:38: style:inconclusive: Function 'canvas_reorder_entry_func' argument 1 names different: declaration 'user' definition 'context'. [funcArgNamesDifferent]
void canvas_reorder_entry_func(void *context)
                                     ^
compose/src/logic/canvas.h:77:38: note: Function 'canvas_reorder_entry_func' argument 1 names different: declaration 'user' definition 'context'.
void canvas_reorder_entry_func(void *user);
                                     ^
compose/src/controller.c:2255:38: note: Function 'canvas_reorder_entry_func' argument 1 names different: declaration 'user' definition 'context'.
void canvas_reorder_entry_func(void *context)
                                     ^
compose/src/controller.c:2284:38: style:inconclusive: Function 'canvas_reorder_exit_begin' argument 1 names different: declaration 'user' definition 'context'. [funcArgNamesDifferent]
void canvas_reorder_exit_begin(void *context)
                                     ^
compose/src/logic/canvas.h:203:38: note: Function 'canvas_reorder_exit_begin' argument 1 names different: declaration 'user' definition 'context'.
void canvas_reorder_exit_begin(void *user);
                                     ^
compose/src/controller.c:2284:38: note: Function 'canvas_reorder_exit_begin' argument 1 names different: declaration 'user' definition 'context'.
void canvas_reorder_exit_begin(void *context)
                                     ^
compose/src/controller.c:2305:36: style:inconclusive: Function 'canvas_reorder_exit_end' argument 1 names different: declaration 'user' definition 'context'. [funcArgNamesDifferent]
void canvas_reorder_exit_end(void *context)
                                   ^
compose/src/logic/canvas.h:204:36: note: Function 'canvas_reorder_exit_end' argument 1 names different: declaration 'user' definition 'context'.
void canvas_reorder_exit_end(void *user);
                                   ^
compose/src/controller.c:2305:36: note: Function 'canvas_reorder_exit_end' argument 1 names different: declaration 'user' definition 'context'.
void canvas_reorder_exit_end(void *context)
                                   ^
compose/src/controller.c:2325:37: style:inconclusive: Function 'canvas_reorder_exit_func' argument 1 names different: declaration 'user' definition 'context'. [funcArgNamesDifferent]
void canvas_reorder_exit_func(void *context)
                                    ^
compose/src/logic/canvas.h:81:37: note: Function 'canvas_reorder_exit_func' argument 1 names different: declaration 'user' definition 'context'.
void canvas_reorder_exit_func(void *user);
                                    ^
compose/src/controller.c:2325:37: note: Function 'canvas_reorder_exit_func' argument 1 names different: declaration 'user' definition 'context'.
void canvas_reorder_exit_func(void *context)
                                    ^
compose/src/controller.c:2352:43: style:inconclusive: Function 'canvas_resize_text_block_begin' argument 1 names different: declaration 'user' definition 'context'. [funcArgNamesDifferent]
void canvas_resize_text_block_begin(void *context)
                                          ^
compose/src/logic/canvas.h:175:43: note: Function 'canvas_resize_text_block_begin' argument 1 names different: declaration 'user' definition 'context'.
void canvas_resize_text_block_begin(void *user);
                                          ^
compose/src/controller.c:2352:43: note: Function 'canvas_resize_text_block_begin' argument 1 names different: declaration 'user' definition 'context'.
void canvas_resize_text_block_begin(void *context)
                                          ^
compose/src/controller.c:2357:41: style:inconclusive: Function 'canvas_resize_text_block_end' argument 1 names different: declaration 'user' definition 'context'. [funcArgNamesDifferent]
void canvas_resize_text_block_end(void *context)
                                        ^
compose/src/logic/canvas.h:176:41: note: Function 'canvas_resize_text_block_end' argument 1 names different: declaration 'user' definition 'context'.
void canvas_resize_text_block_end(void *user);
                                        ^
compose/src/controller.c:2357:41: note: Function 'canvas_resize_text_block_end' argument 1 names different: declaration 'user' definition 'context'.
void canvas_resize_text_block_end(void *context)
                                        ^
compose/src/controller.c:2367:36: style:inconclusive: Function 'canvas_resize_textblock' argument 1 names different: declaration 'user' definition 'context'. [funcArgNamesDifferent]
void canvas_resize_textblock(void *context)
                                   ^
compose/src/logic/canvas.h:84:36: note: Function 'canvas_resize_textblock' argument 1 names different: declaration 'user' definition 'context'.
void canvas_resize_textblock(void *user);
                                   ^
compose/src/controller.c:2367:36: note: Function 'canvas_resize_textblock' argument 1 names different: declaration 'user' definition 'context'.
void canvas_resize_textblock(void *context)
                                   ^
compose/src/controller.c:2434:30: style:inconclusive: Function 'canvas_add_region' argument 1 names different: declaration 'user' definition 'context'. [funcArgNamesDifferent]
void canvas_add_region(void *context)
                             ^
compose/src/logic/canvas.h:85:30: note: Function 'canvas_add_region' argument 1 names different: declaration 'user' definition 'context'.
void canvas_add_region(void *user);
                             ^
compose/src/controller.c:2434:30: note: Function 'canvas_add_region' argument 1 names different: declaration 'user' definition 'context'.
void canvas_add_region(void *context)
                             ^
compose/src/controller.c:2502:29: style:inconclusive: Function 'canvas_add_entry' argument 1 names different: declaration 'user' definition 'context'. [funcArgNamesDifferent]
void canvas_add_entry(void *context)
                            ^
compose/src/logic/canvas.h:86:29: note: Function 'canvas_add_entry' argument 1 names different: declaration 'user' definition 'context'.
void canvas_add_entry(void *user);
                            ^
compose/src/controller.c:2502:29: note: Function 'canvas_add_entry' argument 1 names different: declaration 'user' definition 'context'.
void canvas_add_entry(void *context)
                            ^
compose/src/controller.c:2542:28: style:inconclusive: Function 'canvas_add_exit' argument 1 names different: declaration 'user' definition 'context'. [funcArgNamesDifferent]
void canvas_add_exit(void *context)
                           ^
compose/src/logic/canvas.h:87:28: note: Function 'canvas_add_exit' argument 1 names different: declaration 'user' definition 'context'.
void canvas_add_exit(void *user);
                           ^
compose/src/controller.c:2542:28: note: Function 'canvas_add_exit' argument 1 names different: declaration 'user' definition 'context'.
void canvas_add_exit(void *context)
                           ^
compose/src/controller.c:2581:35: style:inconclusive: Function 'canvas_edit_state_name' argument 1 names different: declaration 'user' definition 'context'. [funcArgNamesDifferent]
void canvas_edit_state_name(void *context)
                                  ^
compose/src/logic/canvas.h:88:35: note: Function 'canvas_edit_state_name' argument 1 names different: declaration 'user' definition 'context'.
void canvas_edit_state_name(void *user);
                                  ^
compose/src/controller.c:2581:35: note: Function 'canvas_edit_state_name' argument 1 names different: declaration 'user' definition 'context'.
void canvas_edit_state_name(void *context)
                                  ^
compose/src/controller.c:2599:36: style:inconclusive: Function 'canvas_edit_region_name' argument 1 names different: declaration 'user' definition 'context'. [funcArgNamesDifferent]
void canvas_edit_region_name(void *context)
                                   ^
compose/src/logic/canvas.h:123:36: note: Function 'canvas_edit_region_name' argument 1 names different: declaration 'user' definition 'context'.
void canvas_edit_region_name(void *user);
                                   ^
compose/src/controller.c:2599:36: note: Function 'canvas_edit_region_name' argument 1 names different: declaration 'user' definition 'context'.
void canvas_edit_region_name(void *context)
                                   ^
compose/src/controller.c:2615:29: style:inconclusive: Function 'canvas_add_guard' argument 1 names different: declaration 'user' definition 'context'. [funcArgNamesDifferent]
void canvas_add_guard(void *context)
                            ^
compose/src/logic/canvas.h:119:29: note: Function 'canvas_add_guard' argument 1 names different: declaration 'user' definition 'context'.
void canvas_add_guard(void *user);
                            ^
compose/src/controller.c:2615:29: note: Function 'canvas_add_guard' argument 1 names different: declaration 'user' definition 'context'.
void canvas_add_guard(void *context)
                            ^
compose/src/controller.c:2647:36: style:inconclusive: Function 'canvas_edit_state_entry' argument 1 names different: declaration 'user' definition 'context'. [funcArgNamesDifferent]
void canvas_edit_state_entry(void *context)
                                   ^
compose/src/logic/canvas.h:89:36: note: Function 'canvas_edit_state_entry' argument 1 names different: declaration 'user' definition 'context'.
void canvas_edit_state_entry(void *user);
                                   ^
compose/src/controller.c:2647:36: note: Function 'canvas_edit_state_entry' argument 1 names different: declaration 'user' definition 'context'.
void canvas_edit_state_entry(void *context)
                                   ^
compose/src/controller.c:2652:35: style:inconclusive: Function 'canvas_edit_state_exit' argument 1 names different: declaration 'user' definition 'context'. [funcArgNamesDifferent]
void canvas_edit_state_exit(void *context)
                                  ^
compose/src/logic/canvas.h:90:35: note: Function 'canvas_edit_state_exit' argument 1 names different: declaration 'user' definition 'context'.
void canvas_edit_state_exit(void *user);
                                  ^
compose/src/controller.c:2652:35: note: Function 'canvas_edit_state_exit' argument 1 names different: declaration 'user' definition 'context'.
void canvas_edit_state_exit(void *context)
                                  ^
compose/src/controller.c:2657:33: style:inconclusive: Function 'canvas_delete_region' argument 1 names different: declaration 'user' definition 'context'. [funcArgNamesDifferent]
void canvas_delete_region(void *context)
                                ^
compose/src/logic/canvas.h:127:33: note: Function 'canvas_delete_region' argument 1 names different: declaration 'user' definition 'context'.
void canvas_delete_region(void *user);
                                ^
compose/src/controller.c:2657:33: note: Function 'canvas_delete_region' argument 1 names different: declaration 'user' definition 'context'.
void canvas_delete_region(void *context)
                                ^
compose/src/controller.c:2681:32: style:inconclusive: Function 'canvas_delete_guard' argument 1 names different: declaration 'user' definition 'context'. [funcArgNamesDifferent]
void canvas_delete_guard(void *context)
                               ^
compose/src/logic/canvas.h:125:32: note: Function 'canvas_delete_guard' argument 1 names different: declaration 'user' definition 'context'.
void canvas_delete_guard(void *user);
                               ^
compose/src/controller.c:2681:32: note: Function 'canvas_delete_guard' argument 1 names different: declaration 'user' definition 'context'.
void canvas_delete_guard(void *context)
                               ^
compose/src/controller.c:2701:33: style:inconclusive: Function 'canvas_delete_action' argument 1 names different: declaration 'user' definition 'context'. [funcArgNamesDifferent]
void canvas_delete_action(void *context)
                                ^
compose/src/logic/canvas.h:126:33: note: Function 'canvas_delete_action' argument 1 names different: declaration 'user' definition 'context'.
void canvas_delete_action(void *user);
                                ^
compose/src/controller.c:2701:33: note: Function 'canvas_delete_action' argument 1 names different: declaration 'user' definition 'context'.
void canvas_delete_action(void *context)
                                ^
compose/src/controller.c:2715:37: style:inconclusive: Function 'canvas_delete_transition' argument 1 names different: declaration 'user' definition 'context'. [funcArgNamesDifferent]
void canvas_delete_transition(void *context)
                                    ^
compose/src/logic/canvas.h:124:37: note: Function 'canvas_delete_transition' argument 1 names different: declaration 'user' definition 'context'.
void canvas_delete_transition(void *user);
                                    ^
compose/src/controller.c:2715:37: note: Function 'canvas_delete_transition' argument 1 names different: declaration 'user' definition 'context'.
void canvas_delete_transition(void *context)
                                    ^
compose/src/controller.c:2728:32: style:inconclusive: Function 'canvas_delete_entry' argument 1 names different: declaration 'user' definition 'context'. [funcArgNamesDifferent]
void canvas_delete_entry(void *context)
                               ^
compose/src/logic/canvas.h:91:32: note: Function 'canvas_delete_entry' argument 1 names different: declaration 'user' definition 'context'.
void canvas_delete_entry(void *user);
                               ^
compose/src/controller.c:2728:32: note: Function 'canvas_delete_entry' argument 1 names different: declaration 'user' definition 'context'.
void canvas_delete_entry(void *context)
                               ^
compose/src/controller.c:2748:31: style:inconclusive: Function 'canvas_delete_exit' argument 1 names different: declaration 'user' definition 'context'. [funcArgNamesDifferent]
void canvas_delete_exit(void *context)
                              ^
compose/src/logic/canvas.h:92:31: note: Function 'canvas_delete_exit' argument 1 names different: declaration 'user' definition 'context'.
void canvas_delete_exit(void *user);
                              ^
compose/src/controller.c:2748:31: note: Function 'canvas_delete_exit' argument 1 names different: declaration 'user' definition 'context'.
void canvas_delete_exit(void *context)
                              ^
compose/src/controller.c:2770:32: style:inconclusive: Function 'canvas_delete_state' argument 1 names different: declaration 'user' definition 'context'. [funcArgNamesDifferent]
void canvas_delete_state(void *context)
                               ^
compose/src/logic/canvas.h:93:32: note: Function 'canvas_delete_state' argument 1 names different: declaration 'user' definition 'context'.
void canvas_delete_state(void *user);
                               ^
compose/src/controller.c:2770:32: note: Function 'canvas_delete_state' argument 1 names different: declaration 'user' definition 'context'.
void canvas_delete_state(void *context)
                               ^
compose/src/controller.c:2789:38: style:inconclusive: Function 'canvas_create_state_begin' argument 1 names different: declaration 'user' definition 'context'. [funcArgNamesDifferent]
void canvas_create_state_begin(void *context)
                                     ^
compose/src/logic/canvas.h:142:38: note: Function 'canvas_create_state_begin' argument 1 names different: declaration 'user' definition 'context'.
void canvas_create_state_begin(void *user);
                                     ^
compose/src/controller.c:2789:38: note: Function 'canvas_create_state_begin' argument 1 names different: declaration 'user' definition 'context'.
void canvas_create_state_begin(void *context)
                                     ^
compose/src/controller.c:2806:36: style:inconclusive: Function 'canvas_create_state_end' argument 1 names different: declaration 'user' definition 'context'. [funcArgNamesDifferent]
void canvas_create_state_end(void *context)
                                   ^
compose/src/logic/canvas.h:143:36: note: Function 'canvas_create_state_end' argument 1 names different: declaration 'user' definition 'context'.
void canvas_create_state_end(void *user);
                                   ^
compose/src/controller.c:2806:36: note: Function 'canvas_create_state_end' argument 1 names different: declaration 'user' definition 'context'.
void canvas_create_state_end(void *context)
                                   ^
compose/src/controller.c:2826:39: style:inconclusive: Function 'canvas_new_state_set_start' argument 1 names different: declaration 'user' definition 'context'. [funcArgNamesDifferent]
void canvas_new_state_set_start(void *context)
                                      ^
compose/src/logic/canvas.h:148:39: note: Function 'canvas_new_state_set_start' argument 1 names different: declaration 'user' definition 'context'.
void canvas_new_state_set_start(void *user);
                                      ^
compose/src/controller.c:2826:39: note: Function 'canvas_new_state_set_start' argument 1 names different: declaration 'user' definition 'context'.
void canvas_new_state_set_start(void *context)
                                      ^
compose/src/controller.c:2845:37: style:inconclusive: Function 'canvas_new_state_set_end' argument 1 names different: declaration 'user' definition 'context'. [funcArgNamesDifferent]
void canvas_new_state_set_end(void *context)
                                    ^
compose/src/logic/canvas.h:149:37: note: Function 'canvas_new_state_set_end' argument 1 names different: declaration 'user' definition 'context'.
void canvas_new_state_set_end(void *user);
                                    ^
compose/src/controller.c:2845:37: note: Function 'canvas_new_state_set_end' argument 1 names different: declaration 'user' definition 'context'.
void canvas_new_state_set_end(void *context)
                                    ^
compose/src/controller.c:2869:36: style:inconclusive: Function 'canvas_create_new_state' argument 1 names different: declaration 'user' definition 'context'. [funcArgNamesDifferent]
void canvas_create_new_state(void *context)
                                   ^
compose/src/logic/canvas.h:94:36: note: Function 'canvas_create_new_state' argument 1 names different: declaration 'user' definition 'context'.
void canvas_create_new_state(void *user);
                                   ^
compose/src/controller.c:2869:36: note: Function 'canvas_create_new_state' argument 1 names different: declaration 'user' definition 'context'.
void canvas_create_new_state(void *context)
                                   ^
compose/src/controller.c:2881:41: style:inconclusive: Function 'canvas_toggle_region_offpage' argument 1 names different: declaration 'user' definition 'context'. [funcArgNamesDifferent]
void canvas_toggle_region_offpage(void *context)
                                        ^
compose/src/logic/canvas.h:122:41: note: Function 'canvas_toggle_region_offpage' argument 1 names different: declaration 'user' definition 'context'.
void canvas_toggle_region_offpage(void *user);
                                        ^
compose/src/controller.c:2881:41: note: Function 'canvas_toggle_region_offpage' argument 1 names different: declaration 'user' definition 'context'.
void canvas_toggle_region_offpage(void *context)
                                        ^
compose/src/controller.c:2938:42: style:inconclusive: Function 'canvas_set_transition_trigger' argument 1 names different: declaration 'user' definition 'context'. [funcArgNamesDifferent]
void canvas_set_transition_trigger(void *context)
                                         ^
compose/src/logic/canvas.h:120:42: note: Function 'canvas_set_transition_trigger' argument 1 names different: declaration 'user' definition 'context'.
void canvas_set_transition_trigger(void *user);
                                         ^
compose/src/controller.c:2938:42: note: Function 'canvas_set_transition_trigger' argument 1 names different: declaration 'user' definition 'context'.
void canvas_set_transition_trigger(void *context)
                                         ^
compose/src/controller.c:2977:41: style:inconclusive: Function 'canvas_add_transition_action' argument 1 names different: declaration 'user' definition 'context'. [funcArgNamesDifferent]
void canvas_add_transition_action(void *context)
                                        ^
compose/src/logic/canvas.h:121:41: note: Function 'canvas_add_transition_action' argument 1 names different: declaration 'user' definition 'context'.
void canvas_add_transition_action(void *user);
                                        ^
compose/src/controller.c:2977:41: note: Function 'canvas_add_transition_action' argument 1 names different: declaration 'user' definition 'context'.
void canvas_add_transition_action(void *context)
                                        ^
compose/src/controller.c:3004:43: style:inconclusive: Function 'canvas_create_transition_begin' argument 1 names different: declaration 'user' definition 'context'. [funcArgNamesDifferent]
void canvas_create_transition_begin(void *context)
                                          ^
compose/src/logic/canvas.h:140:43: note: Function 'canvas_create_transition_begin' argument 1 names different: declaration 'user' definition 'context'.
void canvas_create_transition_begin(void *user);
                                          ^
compose/src/controller.c:3004:43: note: Function 'canvas_create_transition_begin' argument 1 names different: declaration 'user' definition 'context'.
void canvas_create_transition_begin(void *context)
                                          ^
compose/src/controller.c:3019:41: style:inconclusive: Function 'canvas_create_transition_end' argument 1 names different: declaration 'user' definition 'context'. [funcArgNamesDifferent]
void canvas_create_transition_end(void *context)
                                        ^
compose/src/logic/canvas.h:141:41: note: Function 'canvas_create_transition_end' argument 1 names different: declaration 'user' definition 'context'.
void canvas_create_transition_end(void *user);
                                        ^
compose/src/controller.c:3019:41: note: Function 'canvas_create_transition_end' argument 1 names different: declaration 'user' definition 'context'.
void canvas_create_transition_end(void *context)
                                        ^
compose/src/controller.c:3042:41: style:inconclusive: Function 'canvas_check_transition_start' argument 1 names different: declaration 'user' definition 'context'. [funcArgNamesDifferent]
int canvas_check_transition_start(void *context)
                                        ^
compose/src/logic/canvas.h:69:41: note: Function 'canvas_check_transition_start' argument 1 names different: declaration 'user' definition 'context'.
int canvas_check_transition_start(void *user);
                                        ^
compose/src/controller.c:3042:41: note: Function 'canvas_check_transition_start' argument 1 names different: declaration 'user' definition 'context'.
int canvas_check_transition_start(void *context)
                                        ^
compose/src/controller.c:3071:43: style:inconclusive: Function 'canvas_create_transition_start' argument 1 names different: declaration 'user' definition 'context'. [funcArgNamesDifferent]
void canvas_create_transition_start(void *context)
                                          ^
compose/src/logic/canvas.h:95:43: note: Function 'canvas_create_transition_start' argument 1 names different: declaration 'user' definition 'context'.
void canvas_create_transition_start(void *user);
                                          ^
compose/src/controller.c:3071:43: note: Function 'canvas_create_transition_start' argument 1 names different: declaration 'user' definition 'context'.
void canvas_create_transition_start(void *context)
                                          ^
compose/src/controller.c:3107:45: style:inconclusive: Function 'canvas_transition_update_preview' argument 1 names different: declaration 'user' definition 'context'. [funcArgNamesDifferent]
void canvas_transition_update_preview(void *context)
                                            ^
compose/src/logic/canvas.h:170:45: note: Function 'canvas_transition_update_preview' argument 1 names different: declaration 'user' definition 'context'.
void canvas_transition_update_preview(void *user);
                                            ^
compose/src/controller.c:3107:45: note: Function 'canvas_transition_update_preview' argument 1 names different: declaration 'user' definition 'context'.
void canvas_transition_update_preview(void *context)
                                            ^
compose/src/controller.c:3113:37: style:inconclusive: Function 'canvas_create_transition' argument 1 names different: declaration 'user' definition 'context'. [funcArgNamesDifferent]
void canvas_create_transition(void *context)
                                    ^
compose/src/logic/canvas.h:96:37: note: Function 'canvas_create_transition' argument 1 names different: declaration 'user' definition 'context'.
void canvas_create_transition(void *user);
                                    ^
compose/src/controller.c:3113:37: note: Function 'canvas_create_transition' argument 1 names different: declaration 'user' definition 'context'.
void canvas_create_transition(void *context)
                                    ^
compose/src/controller.c:3168:40: style:inconclusive: Function 'canvas_transition_vdel_last' argument 1 names different: declaration 'user' definition 'context'. [funcArgNamesDifferent]
void canvas_transition_vdel_last(void *context)
                                       ^
compose/src/logic/canvas.h:97:40: note: Function 'canvas_transition_vdel_last' argument 1 names different: declaration 'user' definition 'context'.
void canvas_transition_vdel_last(void *user);
                                       ^
compose/src/controller.c:3168:40: note: Function 'canvas_transition_vdel_last' argument 1 names different: declaration 'user' definition 'context'.
void canvas_transition_vdel_last(void *context)
                                       ^
compose/src/controller.c:3179:42: style:inconclusive: Function 'canvas_add_transition_vertice' argument 1 names different: declaration 'user' definition 'context'. [funcArgNamesDifferent]
void canvas_add_transition_vertice(void *context)
                                         ^
compose/src/logic/canvas.h:98:42: note: Function 'canvas_add_transition_vertice' argument 1 names different: declaration 'user' definition 'context'.
void canvas_add_transition_vertice(void *user);
                                         ^
compose/src/controller.c:3179:42: note: Function 'canvas_add_transition_vertice' argument 1 names different: declaration 'user' definition 'context'.
void canvas_add_transition_vertice(void *context)
                                         ^
compose/src/controller.c:3266:42: style:inconclusive: Function 'canvas_create_terminate_begin' argument 1 names different: declaration 'user' definition 'context'. [funcArgNamesDifferent]
void canvas_create_terminate_begin(void *context)
                                         ^
compose/src/logic/canvas.h:144:42: note: Function 'canvas_create_terminate_begin' argument 1 names different: declaration 'user' definition 'context'.
void canvas_create_terminate_begin(void *user);
                                         ^
compose/src/controller.c:3266:42: note: Function 'canvas_create_terminate_begin' argument 1 names different: declaration 'user' definition 'context'.
void canvas_create_terminate_begin(void *context)
                                         ^
compose/src/controller.c:3273:40: style:inconclusive: Function 'canvas_create_terminate_end' argument 1 names different: declaration 'user' definition 'context'. [funcArgNamesDifferent]
void canvas_create_terminate_end(void *context)
                                       ^
compose/src/logic/canvas.h:145:40: note: Function 'canvas_create_terminate_end' argument 1 names different: declaration 'user' definition 'context'.
void canvas_create_terminate_end(void *user);
                                       ^
compose/src/controller.c:3273:40: note: Function 'canvas_create_terminate_end' argument 1 names different: declaration 'user' definition 'context'.
void canvas_create_terminate_end(void *context)
                                       ^
compose/src/controller.c:3278:43: style:inconclusive: Function 'canvas_add_terminate_to_region' argument 1 names different: declaration 'user' definition 'context'. [funcArgNamesDifferent]
void canvas_add_terminate_to_region(void *context)
                                          ^
compose/src/logic/canvas.h:147:43: note: Function 'canvas_add_terminate_to_region' argument 1 names different: declaration 'user' definition 'context'.
void canvas_add_terminate_to_region(void *user);
                                          ^
compose/src/controller.c:3278:43: note: Function 'canvas_add_terminate_to_region' argument 1 names different: declaration 'user' definition 'context'.
void canvas_add_terminate_to_region(void *context)
                                          ^
compose/src/controller.c:3283:44: style:inconclusive: Function 'canvas_terminate_update_preview' argument 1 names different: declaration 'user' definition 'context'. [funcArgNamesDifferent]
void canvas_terminate_update_preview(void *context)
                                           ^
compose/src/logic/canvas.h:146:44: note: Function 'canvas_terminate_update_preview' argument 1 names different: declaration 'user' definition 'context'.
void canvas_terminate_update_preview(void *user);
                                           ^
compose/src/controller.c:3283:44: note: Function 'canvas_terminate_update_preview' argument 1 names different: declaration 'user' definition 'context'.
void canvas_terminate_update_preview(void *context)
                                           ^
compose/src/controller.c:3290:40: style:inconclusive: Function 'canvas_create_history_begin' argument 1 names different: declaration 'user' definition 'context'. [funcArgNamesDifferent]
void canvas_create_history_begin(void *context)
                                       ^
compose/src/logic/canvas.h:150:40: note: Function 'canvas_create_history_begin' argument 1 names different: declaration 'user' definition 'context'.
void canvas_create_history_begin(void *user);
                                       ^
compose/src/controller.c:3290:40: note: Function 'canvas_create_history_begin' argument 1 names different: declaration 'user' definition 'context'.
void canvas_create_history_begin(void *context)
                                       ^
compose/src/controller.c:3297:38: style:inconclusive: Function 'canvas_create_history_end' argument 1 names different: declaration 'user' definition 'context'. [funcArgNamesDifferent]
void canvas_create_history_end(void *context)
                                     ^
compose/src/logic/canvas.h:151:38: note: Function 'canvas_create_history_end' argument 1 names different: declaration 'user' definition 'context'.
void canvas_create_history_end(void *user);
                                     ^
compose/src/controller.c:3297:38: note: Function 'canvas_create_history_end' argument 1 names different: declaration 'user' definition 'context'.
void canvas_create_history_end(void *context)
                                     ^
compose/src/controller.c:3302:42: style:inconclusive: Function 'canvas_history_update_preview' argument 1 names different: declaration 'user' definition 'context'. [funcArgNamesDifferent]
void canvas_history_update_preview(void *context)
                                         ^
compose/src/logic/canvas.h:152:42: note: Function 'canvas_history_update_preview' argument 1 names different: declaration 'user' definition 'context'.
void canvas_history_update_preview(void *user);
                                         ^
compose/src/controller.c:3302:42: note: Function 'canvas_history_update_preview' argument 1 names different: declaration 'user' definition 'context'.
void canvas_history_update_preview(void *context)
                                         ^
compose/src/controller.c:3307:41: style:inconclusive: Function 'canvas_add_history_to_region' argument 1 names different: declaration 'user' definition 'context'. [funcArgNamesDifferent]
void canvas_add_history_to_region(void *context)
                                        ^
compose/src/logic/canvas.h:153:41: note: Function 'canvas_add_history_to_region' argument 1 names different: declaration 'user' definition 'context'.
void canvas_add_history_to_region(void *user);
                                        ^
compose/src/controller.c:3307:41: note: Function 'canvas_add_history_to_region' argument 1 names different: declaration 'user' definition 'context'.
void canvas_add_history_to_region(void *context)
                                        ^
compose/src/controller.c:3314:41: style:inconclusive: Function 'canvas_create_dhistory_begin' argument 1 names different: declaration 'user' definition 'context'. [funcArgNamesDifferent]
void canvas_create_dhistory_begin(void *context)
                                        ^
compose/src/logic/canvas.h:154:41: note: Function 'canvas_create_dhistory_begin' argument 1 names different: declaration 'user' definition 'context'.
void canvas_create_dhistory_begin(void *user);
                                        ^
compose/src/controller.c:3314:41: note: Function 'canvas_create_dhistory_begin' argument 1 names different: declaration 'user' definition 'context'.
void canvas_create_dhistory_begin(void *context)
                                        ^
compose/src/controller.c:3321:39: style:inconclusive: Function 'canvas_create_dhistory_end' argument 1 names different: declaration 'user' definition 'context'. [funcArgNamesDifferent]
void canvas_create_dhistory_end(void *context)
                                      ^
compose/src/logic/canvas.h:155:39: note: Function 'canvas_create_dhistory_end' argument 1 names different: declaration 'user' definition 'context'.
void canvas_create_dhistory_end(void *user);
                                      ^
compose/src/controller.c:3321:39: note: Function 'canvas_create_dhistory_end' argument 1 names different: declaration 'user' definition 'context'.
void canvas_create_dhistory_end(void *context)
                                      ^
compose/src/controller.c:3326:43: style:inconclusive: Function 'canvas_dhistory_update_preview' argument 1 names different: declaration 'user' definition 'context'. [funcArgNamesDifferent]
void canvas_dhistory_update_preview(void *context)
                                          ^
compose/src/logic/canvas.h:156:43: note: Function 'canvas_dhistory_update_preview' argument 1 names different: declaration 'user' definition 'context'.
void canvas_dhistory_update_preview(void *user);
                                          ^
compose/src/controller.c:3326:43: note: Function 'canvas_dhistory_update_preview' argument 1 names different: declaration 'user' definition 'context'.
void canvas_dhistory_update_preview(void *context)
                                          ^
compose/src/controller.c:3331:42: style:inconclusive: Function 'canvas_add_dhistory_to_region' argument 1 names different: declaration 'user' definition 'context'. [funcArgNamesDifferent]
void canvas_add_dhistory_to_region(void *context)
                                         ^
compose/src/logic/canvas.h:157:42: note: Function 'canvas_add_dhistory_to_region' argument 1 names different: declaration 'user' definition 'context'.
void canvas_add_dhistory_to_region(void *user);
                                         ^
compose/src/controller.c:3331:42: note: Function 'canvas_add_dhistory_to_region' argument 1 names different: declaration 'user' definition 'context'.
void canvas_add_dhistory_to_region(void *context)
                                         ^
compose/src/controller.c:3338:37: style:inconclusive: Function 'canvas_create_init_begin' argument 1 names different: declaration 'user' definition 'context'. [funcArgNamesDifferent]
void canvas_create_init_begin(void *context)
                                    ^
compose/src/logic/canvas.h:158:37: note: Function 'canvas_create_init_begin' argument 1 names different: declaration 'user' definition 'context'.
void canvas_create_init_begin(void *user);
                                    ^
compose/src/controller.c:3338:37: note: Function 'canvas_create_init_begin' argument 1 names different: declaration 'user' definition 'context'.
void canvas_create_init_begin(void *context)
                                    ^
compose/src/controller.c:3345:35: style:inconclusive: Function 'canvas_create_init_end' argument 1 names different: declaration 'user' definition 'context'. [funcArgNamesDifferent]
void canvas_create_init_end(void *context)
                                  ^
compose/src/logic/canvas.h:159:35: note: Function 'canvas_create_init_end' argument 1 names different: declaration 'user' definition 'context'.
void canvas_create_init_end(void *user);
                                  ^
compose/src/controller.c:3345:35: note: Function 'canvas_create_init_end' argument 1 names different: declaration 'user' definition 'context'.
void canvas_create_init_end(void *context)
                                  ^
compose/src/controller.c:3350:39: style:inconclusive: Function 'canvas_update_init_preview' argument 1 names different: declaration 'user' definition 'context'. [funcArgNamesDifferent]
void canvas_update_init_preview(void *context)
                                      ^
compose/src/logic/canvas.h:162:39: note: Function 'canvas_update_init_preview' argument 1 names different: declaration 'user' definition 'context'.
void canvas_update_init_preview(void *user);
                                      ^
compose/src/controller.c:3350:39: note: Function 'canvas_update_init_preview' argument 1 names different: declaration 'user' definition 'context'.
void canvas_update_init_preview(void *context)
                                      ^
compose/src/controller.c:3355:38: style:inconclusive: Function 'canvas_add_init_to_region' argument 1 names different: declaration 'user' definition 'context'. [funcArgNamesDifferent]
void canvas_add_init_to_region(void *context)
                                     ^
compose/src/logic/canvas.h:163:38: note: Function 'canvas_add_init_to_region' argument 1 names different: declaration 'user' definition 'context'.
void canvas_add_init_to_region(void *user);
                                     ^
compose/src/controller.c:3355:38: note: Function 'canvas_add_init_to_region' argument 1 names different: declaration 'user' definition 'context'.
void canvas_add_init_to_region(void *context)
                                     ^
compose/src/controller.c:3362:38: style:inconclusive: Function 'canvas_create_final_begin' argument 1 names different: declaration 'user' definition 'context'. [funcArgNamesDifferent]
void canvas_create_final_begin(void *context)
                                     ^
compose/src/logic/canvas.h:160:38: note: Function 'canvas_create_final_begin' argument 1 names different: declaration 'user' definition 'context'.
void canvas_create_final_begin(void *user);
                                     ^
compose/src/controller.c:3362:38: note: Function 'canvas_create_final_begin' argument 1 names different: declaration 'user' definition 'context'.
void canvas_create_final_begin(void *context)
                                     ^
compose/src/controller.c:3369:36: style:inconclusive: Function 'canvas_create_final_end' argument 1 names different: declaration 'user' definition 'context'. [funcArgNamesDifferent]
void canvas_create_final_end(void *context)
                                   ^
compose/src/logic/canvas.h:161:36: note: Function 'canvas_create_final_end' argument 1 names different: declaration 'user' definition 'context'.
void canvas_create_final_end(void *user);
                                   ^
compose/src/controller.c:3369:36: note: Function 'canvas_create_final_end' argument 1 names different: declaration 'user' definition 'context'.
void canvas_create_final_end(void *context)
                                   ^
compose/src/controller.c:3376:40: style:inconclusive: Function 'canvas_update_final_preview' argument 1 names different: declaration 'user' definition 'context'. [funcArgNamesDifferent]
void canvas_update_final_preview(void *context)
                                       ^
compose/src/logic/canvas.h:164:40: note: Function 'canvas_update_final_preview' argument 1 names different: declaration 'user' definition 'context'.
void canvas_update_final_preview(void *user);
                                       ^
compose/src/controller.c:3376:40: note: Function 'canvas_update_final_preview' argument 1 names different: declaration 'user' definition 'context'.
void canvas_update_final_preview(void *context)
                                       ^
compose/src/controller.c:3381:39: style:inconclusive: Function 'canvas_add_final_to_region' argument 1 names different: declaration 'user' definition 'context'. [funcArgNamesDifferent]
void canvas_add_final_to_region(void *context)
                                      ^
compose/src/logic/canvas.h:165:39: note: Function 'canvas_add_final_to_region' argument 1 names different: declaration 'user' definition 'context'.
void canvas_add_final_to_region(void *user);
                                      ^
compose/src/controller.c:3381:39: note: Function 'canvas_add_final_to_region' argument 1 names different: declaration 'user' definition 'context'.
void canvas_add_final_to_region(void *context)
                                      ^
compose/src/controller.c:3514:37: style:inconclusive: Function 'canvas_create_fork_begin' argument 1 names different: declaration 'user' definition 'context'. [funcArgNamesDifferent]
void canvas_create_fork_begin(void *context)
                                    ^
compose/src/logic/canvas.h:135:37: note: Function 'canvas_create_fork_begin' argument 1 names different: declaration 'user' definition 'context'.
void canvas_create_fork_begin(void *user);
                                    ^
compose/src/controller.c:3514:37: note: Function 'canvas_create_fork_begin' argument 1 names different: declaration 'user' definition 'context'.
void canvas_create_fork_begin(void *context)
                                    ^
compose/src/controller.c:3521:35: style:inconclusive: Function 'canvas_create_fork_end' argument 1 names different: declaration 'user' definition 'context'. [funcArgNamesDifferent]
void canvas_create_fork_end(void *context)
                                  ^
compose/src/logic/canvas.h:136:35: note: Function 'canvas_create_fork_end' argument 1 names different: declaration 'user' definition 'context'.
void canvas_create_fork_end(void *user);
                                  ^
compose/src/controller.c:3521:35: note: Function 'canvas_create_fork_end' argument 1 names different: declaration 'user' definition 'context'.
void canvas_create_fork_end(void *context)
                                  ^
compose/src/controller.c:3526:37: style:inconclusive: Function 'canvas_create_fork_start' argument 1 names different: declaration 'user' definition 'context'. [funcArgNamesDifferent]
void canvas_create_fork_start(void *context)
                                    ^
compose/src/logic/canvas.h:137:37: note: Function 'canvas_create_fork_start' argument 1 names different: declaration 'user' definition 'context'.
void canvas_create_fork_start(void *user);
                                    ^
compose/src/controller.c:3526:37: note: Function 'canvas_create_fork_start' argument 1 names different: declaration 'user' definition 'context'.
void canvas_create_fork_start(void *context)
                                    ^
compose/src/controller.c:3533:39: style:inconclusive: Function 'canvas_update_fork_preview' argument 1 names different: declaration 'user' definition 'context'. [funcArgNamesDifferent]
void canvas_update_fork_preview(void *context)
                                      ^
compose/src/logic/canvas.h:138:39: note: Function 'canvas_update_fork_preview' argument 1 names different: declaration 'user' definition 'context'.
void canvas_update_fork_preview(void *user);
                                      ^
compose/src/controller.c:3533:39: note: Function 'canvas_update_fork_preview' argument 1 names different: declaration 'user' definition 'context'.
void canvas_update_fork_preview(void *context)
                                      ^
compose/src/controller.c:3538:38: style:inconclusive: Function 'canvas_add_fork_to_region' argument 1 names different: declaration 'user' definition 'context'. [funcArgNamesDifferent]
void canvas_add_fork_to_region(void *context)
                                     ^
compose/src/logic/canvas.h:139:38: note: Function 'canvas_add_fork_to_region' argument 1 names different: declaration 'user' definition 'context'.
void canvas_add_fork_to_region(void *user);
                                     ^
compose/src/controller.c:3538:38: note: Function 'canvas_add_fork_to_region' argument 1 names different: declaration 'user' definition 'context'.
void canvas_add_fork_to_region(void *context)
                                     ^
compose/src/controller.c:3543:43: style:inconclusive: Function 'canvas_toggle_fork_orientation' argument 1 names different: declaration 'user' definition 'context'. [funcArgNamesDifferent]
void canvas_toggle_fork_orientation(void *context)
                                          ^
compose/src/logic/canvas.h:167:43: note: Function 'canvas_toggle_fork_orientation' argument 1 names different: declaration 'user' definition 'context'.
void canvas_toggle_fork_orientation(void *user);
                                          ^
compose/src/controller.c:3543:43: note: Function 'canvas_toggle_fork_orientation' argument 1 names different: declaration 'user' definition 'context'.
void canvas_toggle_fork_orientation(void *context)
                                          ^
compose/src/controller.c:3548:37: style:inconclusive: Function 'canvas_update_fork_start' argument 1 names different: declaration 'user' definition 'context'. [funcArgNamesDifferent]
void canvas_update_fork_start(void *context)
                                    ^
compose/src/logic/canvas.h:166:37: note: Function 'canvas_update_fork_start' argument 1 names different: declaration 'user' definition 'context'.
void canvas_update_fork_start(void *user);
                                    ^
compose/src/controller.c:3548:37: note: Function 'canvas_update_fork_start' argument 1 names different: declaration 'user' definition 'context'.
void canvas_update_fork_start(void *context)
                                    ^
compose/src/controller.c:3555:37: style:inconclusive: Function 'canvas_create_join_begin' argument 1 names different: declaration 'user' definition 'context'. [funcArgNamesDifferent]
void canvas_create_join_begin(void *context)
                                    ^
compose/src/logic/canvas.h:128:37: note: Function 'canvas_create_join_begin' argument 1 names different: declaration 'user' definition 'context'.
void canvas_create_join_begin(void *user);
                                    ^
compose/src/controller.c:3555:37: note: Function 'canvas_create_join_begin' argument 1 names different: declaration 'user' definition 'context'.
void canvas_create_join_begin(void *context)
                                    ^
compose/src/controller.c:3562:35: style:inconclusive: Function 'canvas_create_join_end' argument 1 names different: declaration 'user' definition 'context'. [funcArgNamesDifferent]
void canvas_create_join_end(void *context)
                                  ^
compose/src/logic/canvas.h:129:35: note: Function 'canvas_create_join_end' argument 1 names different: declaration 'user' definition 'context'.
void canvas_create_join_end(void *user);
                                  ^
compose/src/controller.c:3562:35: note: Function 'canvas_create_join_end' argument 1 names different: declaration 'user' definition 'context'.
void canvas_create_join_end(void *context)
                                  ^
compose/src/controller.c:3567:37: style:inconclusive: Function 'canvas_create_join_start' argument 1 names different: declaration 'user' definition 'context'. [funcArgNamesDifferent]
void canvas_create_join_start(void *context)
                                    ^
compose/src/logic/canvas.h:130:37: note: Function 'canvas_create_join_start' argument 1 names different: declaration 'user' definition 'context'.
void canvas_create_join_start(void *user);
                                    ^
compose/src/controller.c:3567:37: note: Function 'canvas_create_join_start' argument 1 names different: declaration 'user' definition 'context'.
void canvas_create_join_start(void *context)
                                    ^
compose/src/controller.c:3574:39: style:inconclusive: Function 'canvas_update_join_preview' argument 1 names different: declaration 'user' definition 'context'. [funcArgNamesDifferent]
void canvas_update_join_preview(void *context)
                                      ^
compose/src/logic/canvas.h:131:39: note: Function 'canvas_update_join_preview' argument 1 names different: declaration 'user' definition 'context'.
void canvas_update_join_preview(void *user);
                                      ^
compose/src/controller.c:3574:39: note: Function 'canvas_update_join_preview' argument 1 names different: declaration 'user' definition 'context'.
void canvas_update_join_preview(void *context)
                                      ^
compose/src/controller.c:3579:38: style:inconclusive: Function 'canvas_add_join_to_region' argument 1 names different: declaration 'user' definition 'context'. [funcArgNamesDifferent]
void canvas_add_join_to_region(void *context)
                                     ^
compose/src/logic/canvas.h:132:38: note: Function 'canvas_add_join_to_region' argument 1 names different: declaration 'user' definition 'context'.
void canvas_add_join_to_region(void *user);
                                     ^
compose/src/controller.c:3579:38: note: Function 'canvas_add_join_to_region' argument 1 names different: declaration 'user' definition 'context'.
void canvas_add_join_to_region(void *context)
                                     ^
compose/src/controller.c:3584:43: style:inconclusive: Function 'canvas_toggle_join_orientation' argument 1 names different: declaration 'user' definition 'context'. [funcArgNamesDifferent]
void canvas_toggle_join_orientation(void *context)
                                          ^
compose/src/logic/canvas.h:169:43: note: Function 'canvas_toggle_join_orientation' argument 1 names different: declaration 'user' definition 'context'.
void canvas_toggle_join_orientation(void *user);
                                          ^
compose/src/controller.c:3584:43: note: Function 'canvas_toggle_join_orientation' argument 1 names different: declaration 'user' definition 'context'.
void canvas_toggle_join_orientation(void *context)
                                          ^
compose/src/controller.c:3589:37: style:inconclusive: Function 'canvas_update_join_start' argument 1 names different: declaration 'user' definition 'context'. [funcArgNamesDifferent]
void canvas_update_join_start(void *context)
                                    ^
compose/src/logic/canvas.h:168:37: note: Function 'canvas_update_join_start' argument 1 names different: declaration 'user' definition 'context'.
void canvas_update_join_start(void *user);
                                    ^
compose/src/controller.c:3589:37: note: Function 'canvas_update_join_start' argument 1 names different: declaration 'user' definition 'context'.
void canvas_update_join_start(void *context)
                                    ^
compose/src/controller.c:3594:46: style:inconclusive: Function 'canvas_delete_transition_tvertice' argument 1 names different: declaration 'user' definition 'context'. [funcArgNamesDifferent]
void canvas_delete_transition_tvertice(void *context)
                                             ^
compose/src/logic/canvas.h:173:46: note: Function 'canvas_delete_transition_tvertice' argument 1 names different: declaration 'user' definition 'context'.
void canvas_delete_transition_tvertice(void *user);
                                             ^
compose/src/controller.c:3594:46: note: Function 'canvas_delete_transition_tvertice' argument 1 names different: declaration 'user' definition 'context'.
void canvas_delete_transition_tvertice(void *context)
                                             ^
compose/src/controller.c:3607:47: style:inconclusive: Function 'canvas_transition_tvertice_selected' argument 1 names different: declaration 'user' definition 'context'. [funcArgNamesDifferent]
int canvas_transition_tvertice_selected(void *context)
                                              ^
compose/src/logic/canvas.h:59:47: note: Function 'canvas_transition_tvertice_selected' argument 1 names different: declaration 'user' definition 'context'.
int canvas_transition_tvertice_selected(void *user);
                                              ^
compose/src/controller.c:3607:47: note: Function 'canvas_transition_tvertice_selected' argument 1 names different: declaration 'user' definition 'context'.
int canvas_transition_tvertice_selected(void *context)
                                              ^
compose/src/controller.c:3613:37: style:inconclusive: Function 'canvas_add_vertice_begin' argument 1 names different: declaration 'user' definition 'context'. [funcArgNamesDifferent]
void canvas_add_vertice_begin(void *context)
                                    ^
compose/src/logic/canvas.h:210:37: note: Function 'canvas_add_vertice_begin' argument 1 names different: declaration 'user' definition 'context'.
void canvas_add_vertice_begin(void *user);
                                    ^
compose/src/controller.c:3613:37: note: Function 'canvas_add_vertice_begin' argument 1 names different: declaration 'user' definition 'context'.
void canvas_add_vertice_begin(void *context)
                                    ^
compose/src/controller.c:3619:35: style:inconclusive: Function 'canvas_add_vertice_end' argument 1 names different: declaration 'user' definition 'context'. [funcArgNamesDifferent]
void canvas_add_vertice_end(void *context)
                                  ^
compose/src/logic/canvas.h:211:35: note: Function 'canvas_add_vertice_end' argument 1 names different: declaration 'user' definition 'context'.
void canvas_add_vertice_end(void *user);
                                  ^
compose/src/controller.c:3619:35: note: Function 'canvas_add_vertice_end' argument 1 names different: declaration 'user' definition 'context'.
void canvas_add_vertice_end(void *context)
                                  ^
compose/src/controller.c:3624:38: style:inconclusive: Function 'canvas_add_vertice_cancel' argument 1 names different: declaration 'user' definition 'context'. [funcArgNamesDifferent]
void canvas_add_vertice_cancel(void *context)
                                     ^
compose/src/logic/canvas.h:212:38: note: Function 'canvas_add_vertice_cancel' argument 1 names different: declaration 'user' definition 'context'.
void canvas_add_vertice_cancel(void *user);
                                     ^
compose/src/controller.c:3624:38: note: Function 'canvas_add_vertice_cancel' argument 1 names different: declaration 'user' definition 'context'.
void canvas_add_vertice_cancel(void *context)
                                     ^
compose/src/controller.c:3633:31: style:inconclusive: Function 'canvas_add_vertice' argument 1 names different: declaration 'user' definition 'context'. [funcArgNamesDifferent]
void canvas_add_vertice(void *context)
                              ^
compose/src/logic/canvas.h:174:31: note: Function 'canvas_add_vertice' argument 1 names different: declaration 'user' definition 'context'.
void canvas_add_vertice(void *user);
                              ^
compose/src/controller.c:3633:31: note: Function 'canvas_add_vertice' argument 1 names different: declaration 'user' definition 'context'.
void canvas_add_vertice(void *context)
                              ^
compose/src/controller.c:3705:33: style:inconclusive: Function 'canvas_mselect_begin' argument 1 names different: declaration 'user' definition 'context'. [funcArgNamesDifferent]
void canvas_mselect_begin(void *context)
                                ^
compose/src/logic/canvas.h:179:33: note: Function 'canvas_mselect_begin' argument 1 names different: declaration 'user' definition 'context'.
void canvas_mselect_begin(void *user);
                                ^
compose/src/controller.c:3705:33: note: Function 'canvas_mselect_begin' argument 1 names different: declaration 'user' definition 'context'.
void canvas_mselect_begin(void *context)
                                ^
compose/src/controller.c:3724:31: style:inconclusive: Function 'canvas_mselect_end' argument 1 names different: declaration 'user' definition 'context'. [funcArgNamesDifferent]
void canvas_mselect_end(void *context)
                              ^
compose/src/logic/canvas.h:180:31: note: Function 'canvas_mselect_end' argument 1 names different: declaration 'user' definition 'context'.
void canvas_mselect_end(void *user);
                              ^
compose/src/controller.c:3724:31: note: Function 'canvas_mselect_end' argument 1 names different: declaration 'user' definition 'context'.
void canvas_mselect_end(void *context)
                              ^
compose/src/controller.c:3813:34: style:inconclusive: Function 'canvas_mselect_update' argument 1 names different: declaration 'user' definition 'context'. [funcArgNamesDifferent]
void canvas_mselect_update(void *context)
                                 ^
compose/src/logic/canvas.h:78:34: note: Function 'canvas_mselect_update' argument 1 names different: declaration 'user' definition 'context'.
void canvas_mselect_update(void *user);
                                 ^
compose/src/controller.c:3813:34: note: Function 'canvas_mselect_update' argument 1 names different: declaration 'user' definition 'context'.
void canvas_mselect_update(void *context)
                                 ^
compose/src/controller.c:3889:38: style:inconclusive: Function 'canvas_mselect_move_begin' argument 1 names different: declaration 'user' definition 'context'. [funcArgNamesDifferent]
void canvas_mselect_move_begin(void *context)
                                     ^
compose/src/logic/canvas.h:182:38: note: Function 'canvas_mselect_move_begin' argument 1 names different: declaration 'user' definition 'context'.
void canvas_mselect_move_begin(void *user);
                                     ^
compose/src/controller.c:3889:38: note: Function 'canvas_mselect_move_begin' argument 1 names different: declaration 'user' definition 'context'.
void canvas_mselect_move_begin(void *context)
                                     ^
compose/src/controller.c:3975:32: style:inconclusive: Function 'canvas_toggle_theme' argument 1 names different: declaration 'user' definition 'context'. [funcArgNamesDifferent]
void canvas_toggle_theme(void *context)
                               ^
compose/src/logic/canvas.h:196:32: note: Function 'canvas_toggle_theme' argument 1 names different: declaration 'user' definition 'context'.
void canvas_toggle_theme(void *user);
                               ^
compose/src/controller.c:3975:32: note: Function 'canvas_toggle_theme' argument 1 names different: declaration 'user' definition 'context'.
void canvas_toggle_theme(void *context)
                               ^
compose/src/controller.c:4046:37: style:inconclusive: Function 'canvas_mselect_move_end2' argument 1 names different: declaration 'user' definition 'context'. [funcArgNamesDifferent]
void canvas_mselect_move_end2(void *context)
                                    ^
compose/src/logic/canvas.h:207:37: note: Function 'canvas_mselect_move_end2' argument 1 names different: declaration 'user' definition 'context'.
void canvas_mselect_move_end2(void *user);
                                    ^
compose/src/controller.c:4046:37: note: Function 'canvas_mselect_move_end2' argument 1 names different: declaration 'user' definition 'context'.
void canvas_mselect_move_end2(void *context)
                                    ^
compose/src/controller.c:4052:36: style:inconclusive: Function 'canvas_mselect_move_end' argument 1 names different: declaration 'user' definition 'context'. [funcArgNamesDifferent]
void canvas_mselect_move_end(void *context)
                                   ^
compose/src/logic/canvas.h:183:36: note: Function 'canvas_mselect_move_end' argument 1 names different: declaration 'user' definition 'context'.
void canvas_mselect_move_end(void *user);
                                   ^
compose/src/controller.c:4052:36: note: Function 'canvas_mselect_move_end' argument 1 names different: declaration 'user' definition 'context'.
void canvas_mselect_move_end(void *context)
                                   ^
compose/src/controller.c:4057:32: style:inconclusive: Function 'canvas_mselect_move' argument 1 names different: declaration 'user' definition 'context'. [funcArgNamesDifferent]
void canvas_mselect_move(void *context)
                               ^
compose/src/logic/canvas.h:184:32: note: Function 'canvas_mselect_move' argument 1 names different: declaration 'user' definition 'context'.
void canvas_mselect_move(void *user);
                               ^
compose/src/controller.c:4057:32: note: Function 'canvas_mselect_move' argument 1 names different: declaration 'user' definition 'context'.
void canvas_mselect_move(void *context)
                               ^
compose/src/controller.c:4091:24: style:inconclusive: Function 'canvas_undo' argument 1 names different: declaration 'user' definition 'context'. [funcArgNamesDifferent]
void canvas_undo(void *context)
                       ^
compose/src/logic/canvas.h:197:24: note: Function 'canvas_undo' argument 1 names different: declaration 'user' definition 'context'.
void canvas_undo(void *user);
                       ^
compose/src/controller.c:4091:24: note: Function 'canvas_undo' argument 1 names different: declaration 'user' definition 'context'.
void canvas_undo(void *context)
                       ^
compose/src/controller.c:4101:24: style:inconclusive: Function 'canvas_redo' argument 1 names different: declaration 'user' definition 'context'. [funcArgNamesDifferent]
void canvas_redo(void *context)
                       ^
compose/src/logic/canvas.h:198:24: note: Function 'canvas_redo' argument 1 names different: declaration 'user' definition 'context'.
void canvas_redo(void *user);
                       ^
compose/src/controller.c:4101:24: note: Function 'canvas_redo' argument 1 names different: declaration 'user' definition 'context'.
void canvas_redo(void *context)
                       ^
compose/src/controller.c:4111:27: style:inconclusive: Function 'canvas_save_as' argument 1 names different: declaration 'user' definition 'context'. [funcArgNamesDifferent]
void canvas_save_as(void *context)
                          ^
compose/src/logic/canvas.h:208:27: note: Function 'canvas_save_as' argument 1 names different: declaration 'user' definition 'context'.
void canvas_save_as(void *user);
                          ^
compose/src/controller.c:4111:27: note: Function 'canvas_save_as' argument 1 names different: declaration 'user' definition 'context'.
void canvas_save_as(void *context)
                          ^
compose/src/controller.c:4131:30: style:inconclusive: Function 'canvas_select_all' argument 1 names different: declaration 'user' definition 'context'. [funcArgNamesDifferent]
void canvas_select_all(void *context)
                             ^
compose/src/logic/canvas.h:209:30: note: Function 'canvas_select_all' argument 1 names different: declaration 'user' definition 'context'.
void canvas_select_all(void *user);
                             ^
compose/src/controller.c:4131:30: note: Function 'canvas_select_all' argument 1 names different: declaration 'user' definition 'context'.
void canvas_select_all(void *context)
                             ^
compose/src/controller.c:4184:31: style:inconclusive: Function 'canvas_zoom_normal' argument 1 names different: declaration 'user' definition 'context'. [funcArgNamesDifferent]
void canvas_zoom_normal(void *context)
                              ^
compose/src/logic/canvas.h:215:31: note: Function 'canvas_zoom_normal' argument 1 names different: declaration 'user' definition 'context'.
void canvas_zoom_normal(void *user);
                              ^
compose/src/controller.c:4184:31: note: Function 'canvas_zoom_normal' argument 1 names different: declaration 'user' definition 'context'.
void canvas_zoom_normal(void *context)
                              ^
compose/src/controller.c:4198:28: style:inconclusive: Function 'canvas_zoom_fit' argument 1 names different: declaration 'user' definition 'context'. [funcArgNamesDifferent]
void canvas_zoom_fit(void *context)
                           ^
compose/src/logic/canvas.h:214:28: note: Function 'canvas_zoom_fit' argument 1 names different: declaration 'user' definition 'context'.
void canvas_zoom_fit(void *user);
                           ^
compose/src/controller.c:4198:28: note: Function 'canvas_zoom_fit' argument 1 names different: declaration 'user' definition 'context'.
void canvas_zoom_fit(void *context)
                           ^
compose/src/controller.c:4215:26: style:inconclusive: Function 'canvas_ascend' argument 1 names different: declaration 'user' definition 'context'. [funcArgNamesDifferent]
void canvas_ascend(void *context)
                         ^
compose/src/logic/canvas.h:216:26: note: Function 'canvas_ascend' argument 1 names different: declaration 'user' definition 'context'.
void canvas_ascend(void *user);
                         ^
compose/src/controller.c:4215:26: note: Function 'canvas_ascend' argument 1 names different: declaration 'user' definition 'context'.
void canvas_ascend(void *context)
                         ^
compose/src/controller.c:4238:29: style:inconclusive: Function 'canvas_show_root' argument 1 names different: declaration 'user' definition 'context'. [funcArgNamesDifferent]
void canvas_show_root(void *context)
                            ^
compose/src/logic/canvas.h:217:29: note: Function 'canvas_show_root' argument 1 names different: declaration 'user' definition 'context'.
void canvas_show_root(void *user);
                            ^
compose/src/controller.c:4238:29: note: Function 'canvas_show_root' argument 1 names different: declaration 'user' definition 'context'.
void canvas_show_root(void *context)
                            ^
compose/src/controller.c:4247:30: style:inconclusive: Function 'canvas_nav_toggle' argument 1 names different: declaration 'user' definition 'context'. [funcArgNamesDifferent]
void canvas_nav_toggle(void *context)
                             ^
compose/src/logic/canvas.h:213:30: note: Function 'canvas_nav_toggle' argument 1 names different: declaration 'user' definition 'context'.
void canvas_nav_toggle(void *user);
                             ^
compose/src/controller.c:4247:30: note: Function 'canvas_nav_toggle' argument 1 names different: declaration 'user' definition 'context'.
void canvas_nav_toggle(void *context)
                             ^
compose/src/controller.c:4252:43: style:inconclusive: Function 'canvas_create_annotation_begin' argument 1 names different: declaration 'user' definition 'context'. [funcArgNamesDifferent]
void canvas_create_annotation_begin(void *context)
                                          ^
compose/src/logic/canvas.h:218:43: note: Function 'canvas_create_annotation_begin' argument 1 names different: declaration 'user' definition 'context'.
void canvas_create_annotation_begin(void *user);
                                          ^
compose/src/controller.c:4252:43: note: Function 'canvas_create_annotation_begin' argument 1 names different: declaration 'user' definition 'context'.
void canvas_create_annotation_begin(void *context)
                                          ^
compose/src/controller.c:4257:41: style:inconclusive: Function 'canvas_create_annotation_end' argument 1 names different: declaration 'user' definition 'context'. [funcArgNamesDifferent]
void canvas_create_annotation_end(void *context)
                                        ^
compose/src/logic/canvas.h:219:41: note: Function 'canvas_create_annotation_end' argument 1 names different: declaration 'user' definition 'context'.
void canvas_create_annotation_end(void *user);
                                        ^
compose/src/controller.c:4257:41: note: Function 'canvas_create_annotation_end' argument 1 names different: declaration 'user' definition 'context'.
void canvas_create_annotation_end(void *context)
                                        ^
compose/src/controller.c:4262:42: style:inconclusive: Function 'canvas_show_annotation_dialog' argument 1 names different: declaration 'user' definition 'context'. [funcArgNamesDifferent]
void canvas_show_annotation_dialog(void *context)
                                         ^
compose/src/logic/canvas.h:220:42: note: Function 'canvas_show_annotation_dialog' argument 1 names different: declaration 'user' definition 'context'.
void canvas_show_annotation_dialog(void *user);
                                         ^
compose/src/controller.c:4262:42: note: Function 'canvas_show_annotation_dialog' argument 1 names different: declaration 'user' definition 'context'.
void canvas_show_annotation_dialog(void *context)
                                         ^
compose/src/controller.c:4267:43: style:inconclusive: Function 'canvas_annotation_select_start' argument 1 names different: declaration 'user' definition 'context'. [funcArgNamesDifferent]
void canvas_annotation_select_start(void *context)
                                          ^
compose/src/logic/canvas.h:221:43: note: Function 'canvas_annotation_select_start' argument 1 names different: declaration 'user' definition 'context'.
void canvas_annotation_select_start(void *user);
                                          ^
compose/src/controller.c:4267:43: note: Function 'canvas_annotation_select_start' argument 1 names different: declaration 'user' definition 'context'.
void canvas_annotation_select_start(void *context)
                                          ^
compose/src/controller.c:4272:41: style:inconclusive: Function 'canvas_annotation_select_end' argument 1 names different: declaration 'user' definition 'context'. [funcArgNamesDifferent]
void canvas_annotation_select_end(void *context)
                                        ^
compose/src/logic/canvas.h:222:41: note: Function 'canvas_annotation_select_end' argument 1 names different: declaration 'user' definition 'context'.
void canvas_annotation_select_end(void *user);
                                        ^
compose/src/controller.c:4272:41: note: Function 'canvas_annotation_select_end' argument 1 names different: declaration 'user' definition 'context'.
void canvas_annotation_select_end(void *context)
                                        ^
compose/src/controller.c:4277:42: style:inconclusive: Function 'canvas_state_select_end_begin' argument 1 names different: declaration 'user' definition 'context'. [funcArgNamesDifferent]
void canvas_state_select_end_begin(void *context)
                                         ^
compose/src/logic/canvas.h:232:42: note: Function 'canvas_state_select_end_begin' argument 1 names different: declaration 'user' definition 'context'.
void canvas_state_select_end_begin(void *user);
                                         ^
compose/src/controller.c:4277:42: note: Function 'canvas_state_select_end_begin' argument 1 names different: declaration 'user' definition 'context'.
void canvas_state_select_end_begin(void *context)
                                         ^
compose/src/controller.c:4284:40: style:inconclusive: Function 'canvas_state_select_end_end' argument 1 names different: declaration 'user' definition 'context'. [funcArgNamesDifferent]
void canvas_state_select_end_end(void *context)
                                       ^
compose/src/logic/canvas.h:233:40: note: Function 'canvas_state_select_end_end' argument 1 names different: declaration 'user' definition 'context'.
void canvas_state_select_end_end(void *user);
                                       ^
compose/src/controller.c:4284:40: note: Function 'canvas_state_select_end_end' argument 1 names different: declaration 'user' definition 'context'.
void canvas_state_select_end_end(void *context)
                                       ^
compose/src/controller.c:4292:44: style:inconclusive: Function 'canvas_state_select_start_begin' argument 1 names different: declaration 'user' definition 'context'. [funcArgNamesDifferent]
void canvas_state_select_start_begin(void *context)
                                           ^
compose/src/logic/canvas.h:230:44: note: Function 'canvas_state_select_start_begin' argument 1 names different: declaration 'user' definition 'context'.
void canvas_state_select_start_begin(void *user);
                                           ^
compose/src/controller.c:4292:44: note: Function 'canvas_state_select_start_begin' argument 1 names different: declaration 'user' definition 'context'.
void canvas_state_select_start_begin(void *context)
                                           ^
compose/src/controller.c:4300:42: style:inconclusive: Function 'canvas_state_select_start_end' argument 1 names different: declaration 'user' definition 'context'. [funcArgNamesDifferent]
void canvas_state_select_start_end(void *context)
                                         ^
compose/src/logic/canvas.h:231:42: note: Function 'canvas_state_select_start_end' argument 1 names different: declaration 'user' definition 'context'.
void canvas_state_select_start_end(void *user);
                                         ^
compose/src/controller.c:4300:42: note: Function 'canvas_state_select_start_end' argument 1 names different: declaration 'user' definition 'context'.
void canvas_state_select_start_end(void *context)
                                         ^
compose/src/controller.c:4308:36: style:inconclusive: Function 'canvas_project_settings' argument 1 names different: declaration 'user' definition 'context'. [funcArgNamesDifferent]
void canvas_project_settings(void *context)
                                   ^
compose/src/logic/canvas.h:225:36: note: Function 'canvas_project_settings' argument 1 names different: declaration 'user' definition 'context'.
void canvas_project_settings(void *user);
                                   ^
compose/src/controller.c:4308:36: note: Function 'canvas_project_settings' argument 1 names different: declaration 'user' definition 'context'.
void canvas_project_settings(void *context)
                                   ^
compose/src/controller.c:4316:29: style:inconclusive: Function 'canvas_add_begin' argument 1 names different: declaration 'user' definition 'context'. [funcArgNamesDifferent]
void canvas_add_begin(void *context)
                            ^
compose/src/logic/canvas.h:226:29: note: Function 'canvas_add_begin' argument 1 names different: declaration 'user' definition 'context'.
void canvas_add_begin(void *user);
                            ^
compose/src/controller.c:4316:29: note: Function 'canvas_add_begin' argument 1 names different: declaration 'user' definition 'context'.
void canvas_add_begin(void *context)
                            ^
compose/src/controller.c:4323:27: style:inconclusive: Function 'canvas_add_end' argument 1 names different: declaration 'user' definition 'context'. [funcArgNamesDifferent]
void canvas_add_end(void *context)
                          ^
compose/src/logic/canvas.h:227:27: note: Function 'canvas_add_end' argument 1 names different: declaration 'user' definition 'context'.
void canvas_add_end(void *user);
                          ^
compose/src/controller.c:4323:27: note: Function 'canvas_add_end' argument 1 names different: declaration 'user' definition 'context'.
void canvas_add_end(void *context)
                          ^
compose/src/controller.c:4330:31: style:inconclusive: Function 'canvas_tools_begin' argument 1 names different: declaration 'user' definition 'context'. [funcArgNamesDifferent]
void canvas_tools_begin(void *context)
                              ^
compose/src/logic/canvas.h:228:31: note: Function 'canvas_tools_begin' argument 1 names different: declaration 'user' definition 'context'.
void canvas_tools_begin(void *user);
                              ^
compose/src/controller.c:4330:31: note: Function 'canvas_tools_begin' argument 1 names different: declaration 'user' definition 'context'.
void canvas_tools_begin(void *context)
                              ^
compose/src/controller.c:4338:29: style:inconclusive: Function 'canvas_tools_end' argument 1 names different: declaration 'user' definition 'context'. [funcArgNamesDifferent]
void canvas_tools_end(void *context)
                            ^
compose/src/logic/canvas.h:229:29: note: Function 'canvas_tools_end' argument 1 names different: declaration 'user' definition 'context'.
void canvas_tools_end(void *user);
                            ^
compose/src/controller.c:4338:29: note: Function 'canvas_tools_end' argument 1 names different: declaration 'user' definition 'context'.
void canvas_tools_end(void *context)
                            ^
compose/src/controller.c:4348:32: style:inconclusive: Function 'canvas_select_begin' argument 1 names different: declaration 'user' definition 'context'. [funcArgNamesDifferent]
void canvas_select_begin(void *context)
                               ^
compose/src/logic/canvas.h:234:32: note: Function 'canvas_select_begin' argument 1 names different: declaration 'user' definition 'context'.
void canvas_select_begin(void *user);
                               ^
compose/src/controller.c:4348:32: note: Function 'canvas_select_begin' argument 1 names different: declaration 'user' definition 'context'.
void canvas_select_begin(void *context)
                               ^
compose/src/controller.c:4359:30: style:inconclusive: Function 'canvas_select_end' argument 1 names different: declaration 'user' definition 'context'. [funcArgNamesDifferent]
void canvas_select_end(void *context)
                             ^
compose/src/logic/canvas.h:235:30: note: Function 'canvas_select_end' argument 1 names different: declaration 'user' definition 'context'.
void canvas_select_end(void *user);
                             ^
compose/src/controller.c:4359:30: note: Function 'canvas_select_end' argument 1 names different: declaration 'user' definition 'context'.
void canvas_select_end(void *context)
                             ^
compose/src/controller.c:4366:30: style:inconclusive: Function 'canvas_jump_begin' argument 1 names different: declaration 'user' definition 'context'. [funcArgNamesDifferent]
void canvas_jump_begin(void *context)
                             ^
compose/src/logic/canvas.h:237:30: note: Function 'canvas_jump_begin' argument 1 names different: declaration 'user' definition 'context'.
void canvas_jump_begin(void *user);
                             ^
compose/src/controller.c:4366:30: note: Function 'canvas_jump_begin' argument 1 names different: declaration 'user' definition 'context'.
void canvas_jump_begin(void *context)
                             ^
compose/src/controller.c:4374:30: style:inconclusive: Function 'canvas_zoom_begin' argument 1 names different: declaration 'user' definition 'context'. [funcArgNamesDifferent]
void canvas_zoom_begin(void *context)
                             ^
compose/src/logic/canvas.h:236:30: note: Function 'canvas_zoom_begin' argument 1 names different: declaration 'user' definition 'context'.
void canvas_zoom_begin(void *user);
                             ^
compose/src/controller.c:4374:30: note: Function 'canvas_zoom_begin' argument 1 names different: declaration 'user' definition 'context'.
void canvas_zoom_begin(void *context)
                             ^
compose/src/controller.c:4382:30: style:inconclusive: Function 'canvas_edit_begin' argument 1 names different: declaration 'user' definition 'context'. [funcArgNamesDifferent]
void canvas_edit_begin(void *context)
                             ^
compose/src/logic/canvas.h:238:30: note: Function 'canvas_edit_begin' argument 1 names different: declaration 'user' definition 'context'.
void canvas_edit_begin(void *user);
                             ^
compose/src/controller.c:4382:30: note: Function 'canvas_edit_begin' argument 1 names different: declaration 'user' definition 'context'.
void canvas_edit_begin(void *context)
                             ^
compose/src/controller.c:4390:32: style:inconclusive: Function 'canvas_delete_begin' argument 1 names different: declaration 'user' definition 'context'. [funcArgNamesDifferent]
void canvas_delete_begin(void *context)
                               ^
compose/src/logic/canvas.h:239:32: note: Function 'canvas_delete_begin' argument 1 names different: declaration 'user' definition 'context'.
void canvas_delete_begin(void *user);
                               ^
compose/src/controller.c:4390:32: note: Function 'canvas_delete_begin' argument 1 names different: declaration 'user' definition 'context'.
void canvas_delete_begin(void *context)
                               ^
compose/src/controller.c:4398:47: style:inconclusive: Function 'canvas_add_transition_vertice_mode' argument 1 names different: declaration 'user' definition 'context'. [funcArgNamesDifferent]
void canvas_add_transition_vertice_mode(void *context)
                                              ^
compose/src/logic/canvas.h:242:47: note: Function 'canvas_add_transition_vertice_mode' argument 1 names different: declaration 'user' definition 'context'.
void canvas_add_transition_vertice_mode(void *user);
                                              ^
compose/src/controller.c:4398:47: note: Function 'canvas_add_transition_vertice_mode' argument 1 names different: declaration 'user' definition 'context'.
void canvas_add_transition_vertice_mode(void *context)
                                              ^
compose/src/controller.c:4406:44: style:inconclusive: Function 'canvas_transition_select_source' argument 1 names different: declaration 'user' definition 'context'. [funcArgNamesDifferent]
void canvas_transition_select_source(void *context)
                                           ^
compose/src/logic/canvas.h:240:44: note: Function 'canvas_transition_select_source' argument 1 names different: declaration 'user' definition 'context'.
void canvas_transition_select_source(void *user);
                                           ^
compose/src/controller.c:4406:44: note: Function 'canvas_transition_select_source' argument 1 names different: declaration 'user' definition 'context'.
void canvas_transition_select_source(void *context)
                                           ^
compose/src/controller.c:4413:42: style:inconclusive: Function 'canvas_transition_select_dest' argument 1 names different: declaration 'user' definition 'context'. [funcArgNamesDifferent]
void canvas_transition_select_dest(void *context)
                                         ^
compose/src/logic/canvas.h:241:42: note: Function 'canvas_transition_select_dest' argument 1 names different: declaration 'user' definition 'context'.
void canvas_transition_select_dest(void *user);
                                         ^
compose/src/controller.c:4413:42: note: Function 'canvas_transition_select_dest' argument 1 names different: declaration 'user' definition 'context'.
void canvas_transition_select_dest(void *context)
                                         ^
compose/src/controller.c:4421:24: style:inconclusive: Function 'canvas_open' argument 1 names different: declaration 'user' definition 'context'. [funcArgNamesDifferent]
void canvas_open(void *context)
                       ^
compose/src/logic/canvas.h:243:24: note: Function 'canvas_open' argument 1 names different: declaration 'user' definition 'context'.
void canvas_open(void *user);
                       ^
compose/src/controller.c:4421:24: note: Function 'canvas_open' argument 1 names different: declaration 'user' definition 'context'.
void canvas_open(void *context)
                       ^
compose/src/copypaste.c:55:37: style: The scope of the variable 'new_aref' can be reduced. [variableScope]
    struct ufsmm_action_ref *aref, *new_aref;
                                    ^
compose/src/copypaste.c:56:36: style: The scope of the variable 'new_gref' can be reduced. [variableScope]
    struct ufsmm_guard_ref *gref, *new_gref;
                                   ^
compose/src/copypaste.c:129:30: style:inconclusive: Function 'canvas_copy_begin' argument 1 names different: declaration 'user' definition 'context'. [funcArgNamesDifferent]
void canvas_copy_begin(void *context)
                             ^
compose/src/logic/canvas.h:188:30: note: Function 'canvas_copy_begin' argument 1 names different: declaration 'user' definition 'context'.
void canvas_copy_begin(void *user);
                             ^
compose/src/copypaste.c:129:30: note: Function 'canvas_copy_begin' argument 1 names different: declaration 'user' definition 'context'.
void canvas_copy_begin(void *context)
                             ^
compose/src/copypaste.c:270:37: style:inconclusive: Function 'canvas_paste_copy_buffer' argument 1 names different: declaration 'user' definition 'context'. [funcArgNamesDifferent]
void canvas_paste_copy_buffer(void *context)
                                    ^
compose/src/logic/canvas.h:190:37: note: Function 'canvas_paste_copy_buffer' argument 1 names different: declaration 'user' definition 'context'.
void canvas_paste_copy_buffer(void *user);
                                    ^
compose/src/copypaste.c:270:37: note: Function 'canvas_paste_copy_buffer' argument 1 names different: declaration 'user' definition 'context'.
void canvas_paste_copy_buffer(void *context)
                                    ^
compose/src/copypaste.c:394:28: style:inconclusive: Function 'canvas_copy_end' argument 1 names different: declaration 'user' definition 'context'. [funcArgNamesDifferent]
void canvas_copy_end(void *context)
                           ^
compose/src/logic/canvas.h:189:28: note: Function 'canvas_copy_end' argument 1 names different: declaration 'user' definition 'context'.
void canvas_copy_end(void *user);
                           ^
compose/src/copypaste.c:394:28: note: Function 'canvas_copy_end' argument 1 names different: declaration 'user' definition 'context'.
void canvas_copy_end(void *context)
                           ^
compose/src/copypaste.c:439:29: style:inconclusive: Function 'canvas_cut_begin' argument 1 names different: declaration 'user' definition 'context'. [funcArgNamesDifferent]
void canvas_cut_begin(void *context)
                            ^
compose/src/logic/canvas.h:191:29: note: Function 'canvas_cut_begin' argument 1 names different: declaration 'user' definition 'context'.
void canvas_cut_begin(void *user);
                            ^
compose/src/copypaste.c:439:29: note: Function 'canvas_cut_begin' argument 1 names different: declaration 'user' definition 'context'.
void canvas_cut_begin(void *context)
                            ^
compose/src/copypaste.c:447:36: style:inconclusive: Function 'canvas_paste_cut_buffer' argument 1 names different: declaration 'user' definition 'context'. [funcArgNamesDifferent]
void canvas_paste_cut_buffer(void *context)
                                   ^
compose/src/logic/canvas.h:193:36: note: Function 'canvas_paste_cut_buffer' argument 1 names different: declaration 'user' definition 'context'.
void canvas_paste_cut_buffer(void *user);
                                   ^
compose/src/copypaste.c:447:36: note: Function 'canvas_paste_cut_buffer' argument 1 names different: declaration 'user' definition 'context'.
void canvas_paste_cut_buffer(void *context)
                                   ^
compose/src/copypaste.c:452:27: style:inconclusive: Function 'canvas_cut_end' argument 1 names different: declaration 'user' definition 'context'. [funcArgNamesDifferent]
void canvas_cut_end(void *context)
                          ^
compose/src/logic/canvas.h:192:27: note: Function 'canvas_cut_end' argument 1 names different: declaration 'user' definition 'context'.
void canvas_cut_end(void *user);
                          ^
compose/src/copypaste.c:452:27: note: Function 'canvas_cut_end' argument 1 names different: declaration 'user' definition 'context'.
void canvas_cut_end(void *context)
                          ^
compose/src/dialogs/save.c:5:34: style:inconclusive: Function 'ufsmm_dialog_save' argument 1 names different: declaration 'parent' definition 'parent_window'. [funcArgNamesDifferent]
int ufsmm_dialog_save(GtkWindow *parent_window, char **out)
                                 ^
compose/src/dialogs/save.h:5:34: note: Function 'ufsmm_dialog_save' argument 1 names different: declaration 'parent' definition 'parent_window'.
int ufsmm_dialog_save(GtkWindow *parent, char **filename);
                                 ^
compose/src/dialogs/save.c:5:34: note: Function 'ufsmm_dialog_save' argument 1 names different: declaration 'parent' definition 'parent_window'.
int ufsmm_dialog_save(GtkWindow *parent_window, char **out)
                                 ^
compose/src/dialogs/save.c:5:56: style:inconclusive: Function 'ufsmm_dialog_save' argument 2 names different: declaration 'filename' definition 'out'. [funcArgNamesDifferent]
int ufsmm_dialog_save(GtkWindow *parent_window, char **out)
                                                       ^
compose/src/dialogs/save.h:5:49: note: Function 'ufsmm_dialog_save' argument 2 names different: declaration 'filename' definition 'out'.
int ufsmm_dialog_save(GtkWindow *parent, char **filename);
                                                ^
compose/src/dialogs/save.c:5:56: note: Function 'ufsmm_dialog_save' argument 2 names different: declaration 'filename' definition 'out'.
int ufsmm_dialog_save(GtkWindow *parent_window, char **out)
                                                       ^
compose/src/dialogs/set_trigger_dialog.c:45:17: style: The scope of the variable 'match_rating' can be reduced. [variableScope]
            int match_rating = 0;
                ^
compose/src/logic/canvas.c:19:14: warning: Either the condition 'm->head==16' is redundant or the array 'm->signal[16]' is accessed at index 16, which is out of bounds. [arrayIndexOutOfBoundsCond]
    m->signal[m->head++] = signal;
             ^
compose/src/logic/canvas.c:20:17: note: Assuming that condition 'm->head==16' is not redundant
    if (m->head == 16)
                ^
compose/src/logic/canvas.c:19:14: note: Array index out of bounds
    m->signal[m->head++] = signal;
             ^
compose/src/logic/canvas.c:89:32: style: Condition 'm->csv[2]==5' is always true [knownConditionTrueFalse]
                if ((m->csv[2] == 5) && (m->csv[1] == 3) && (m->csv[0] == 1)) {
                               ^
compose/src/logic/canvas.c:87:28: note: Assuming that condition 'm->csv[2]==5' is not redundant
            if ((m->csv[2] == 5) && (m->csv[1] == 3) && (m->csv[0] == 1)) {
                           ^
compose/src/logic/canvas.c:89:32: note: Condition 'm->csv[2]==5' is always true
                if ((m->csv[2] == 5) && (m->csv[1] == 3) && (m->csv[0] == 1)) {
                               ^
compose/src/logic/canvas.c:89:52: style: Condition 'm->csv[1]==3' is always true [knownConditionTrueFalse]
                if ((m->csv[2] == 5) && (m->csv[1] == 3) && (m->csv[0] == 1)) {
                                                   ^
compose/src/logic/canvas.c:87:48: note: Assuming that condition 'm->csv[1]==3' is not redundant
            if ((m->csv[2] == 5) && (m->csv[1] == 3) && (m->csv[0] == 1)) {
                                               ^
compose/src/logic/canvas.c:89:52: note: Condition 'm->csv[1]==3' is always true
                if ((m->csv[2] == 5) && (m->csv[1] == 3) && (m->csv[0] == 1)) {
                                                   ^
compose/src/logic/canvas.c:89:72: style: Condition 'm->csv[0]==1' is always true [knownConditionTrueFalse]
                if ((m->csv[2] == 5) && (m->csv[1] == 3) && (m->csv[0] == 1)) {
                                                                       ^
compose/src/logic/canvas.c:87:68: note: Assuming that condition 'm->csv[0]==1' is not redundant
            if ((m->csv[2] == 5) && (m->csv[1] == 3) && (m->csv[0] == 1)) {
                                                                   ^
compose/src/logic/canvas.c:89:72: note: Condition 'm->csv[0]==1' is always true
                if ((m->csv[2] == 5) && (m->csv[1] == 3) && (m->csv[0] == 1)) {
                                                                       ^
compose/src/logic/canvas.c:99:32: style: Condition 'm->csv[4]==9' is always true [knownConditionTrueFalse]
                if ((m->csv[4] == 9) && (m->csv[1] == 7) && (m->csv[0] == 1)) {
                               ^
compose/src/logic/canvas.c:97:28: note: Assuming that condition 'm->csv[4]==9' is not redundant
            if ((m->csv[4] == 9) && (m->csv[1] == 7) && (m->csv[0] == 1)) {
                           ^
compose/src/logic/canvas.c:99:32: note: Condition 'm->csv[4]==9' is always true
                if ((m->csv[4] == 9) && (m->csv[1] == 7) && (m->csv[0] == 1)) {
                               ^
compose/src/logic/canvas.c:99:52: style: Condition 'm->csv[1]==7' is always true [knownConditionTrueFalse]
                if ((m->csv[4] == 9) && (m->csv[1] == 7) && (m->csv[0] == 1)) {
                                                   ^
compose/src/logic/canvas.c:97:48: note: Assuming that condition 'm->csv[1]==7' is not redundant
            if ((m->csv[4] == 9) && (m->csv[1] == 7) && (m->csv[0] == 1)) {
                                               ^
compose/src/logic/canvas.c:99:52: note: Condition 'm->csv[1]==7' is always true
                if ((m->csv[4] == 9) && (m->csv[1] == 7) && (m->csv[0] == 1)) {
                                                   ^
compose/src/logic/canvas.c:99:72: style: Condition 'm->csv[0]==1' is always true [knownConditionTrueFalse]
                if ((m->csv[4] == 9) && (m->csv[1] == 7) && (m->csv[0] == 1)) {
                                                                       ^
compose/src/logic/canvas.c:97:68: note: Assuming that condition 'm->csv[0]==1' is not redundant
            if ((m->csv[4] == 9) && (m->csv[1] == 7) && (m->csv[0] == 1)) {
                                                                   ^
compose/src/logic/canvas.c:99:72: note: Condition 'm->csv[0]==1' is always true
                if ((m->csv[4] == 9) && (m->csv[1] == 7) && (m->csv[0] == 1)) {
                                                                       ^
compose/src/logic/canvas.c:108:55: style: Condition 'm->csv[13]==22' is always true [knownConditionTrueFalse]
                if ((m->csv[14] == 23) && (m->csv[13] == 22) && (m->csv[0] == 1)) {
                                                      ^
compose/src/logic/canvas.c:107:29: note: Assuming that condition 'm->csv[13]==22' is not redundant
            if ((m->csv[13] == 22) && (m->csv[0] == 1)) {
                            ^
compose/src/logic/canvas.c:108:55: note: Condition 'm->csv[13]==22' is always true
                if ((m->csv[14] == 23) && (m->csv[13] == 22) && (m->csv[0] == 1)) {
                                                      ^
compose/src/logic/canvas.c:108:76: style: Condition 'm->csv[0]==1' is always true [knownConditionTrueFalse]
                if ((m->csv[14] == 23) && (m->csv[13] == 22) && (m->csv[0] == 1)) {
                                                                           ^
compose/src/logic/canvas.c:107:50: note: Assuming that condition 'm->csv[0]==1' is not redundant
            if ((m->csv[13] == 22) && (m->csv[0] == 1)) {
                                                 ^
compose/src/logic/canvas.c:108:76: note: Condition 'm->csv[0]==1' is always true
                if ((m->csv[14] == 23) && (m->csv[13] == 22) && (m->csv[0] == 1)) {
                                                                           ^
compose/src/logic/canvas.c:110:81: style: Condition 'm->csv[14]==24' is always false [knownConditionTrueFalse]
                    if ((m->csv[31] == 67) && (m->csv[15] == 65) && (m->csv[14] == 24) && (m->csv[13] == 22) && (m->csv[0] == 1)) {
                                                                                ^
compose/src/logic/canvas.c:108:33: note: Assuming that condition 'm->csv[14]==23' is not redundant
                if ((m->csv[14] == 23) && (m->csv[13] == 22) && (m->csv[0] == 1)) {
                                ^
compose/src/logic/canvas.c:110:81: note: Condition 'm->csv[14]==24' is always false
                    if ((m->csv[31] == 67) && (m->csv[15] == 65) && (m->csv[14] == 24) && (m->csv[13] == 22) && (m->csv[0] == 1)) {
                                                                                ^
compose/src/logic/canvas.c:110:103: style: Condition 'm->csv[13]==22' is always true [knownConditionTrueFalse]
                    if ((m->csv[31] == 67) && (m->csv[15] == 65) && (m->csv[14] == 24) && (m->csv[13] == 22) && (m->csv[0] == 1)) {
                                                                                                      ^
compose/src/logic/canvas.c:107:29: note: Assuming that condition 'm->csv[13]==22' is not redundant
            if ((m->csv[13] == 22) && (m->csv[0] == 1)) {
                            ^
compose/src/logic/canvas.c:110:103: note: Condition 'm->csv[13]==22' is always true
                    if ((m->csv[31] == 67) && (m->csv[15] == 65) && (m->csv[14] == 24) && (m->csv[13] == 22) && (m->csv[0] == 1)) {
                                                                                                      ^
compose/src/logic/canvas.c:110:124: style: Condition 'm->csv[0]==1' is always true [knownConditionTrueFalse]
                    if ((m->csv[31] == 67) && (m->csv[15] == 65) && (m->csv[14] == 24) && (m->csv[13] == 22) && (m->csv[0] == 1)) {
                                                                                                                           ^
compose/src/logic/canvas.c:107:50: note: Assuming that condition 'm->csv[0]==1' is not redundant
            if ((m->csv[13] == 22) && (m->csv[0] == 1)) {
                                                 ^
compose/src/logic/canvas.c:110:124: note: Condition 'm->csv[0]==1' is always true
                    if ((m->csv[31] == 67) && (m->csv[15] == 65) && (m->csv[14] == 24) && (m->csv[13] == 22) && (m->csv[0] == 1)) {
                                                                                                                           ^
compose/src/logic/canvas.c:113:81: style: Condition 'm->csv[14]==24' is always false [knownConditionTrueFalse]
                    if ((m->csv[16] == 28) && (m->csv[15] == 25) && (m->csv[14] == 24) && (m->csv[13] == 22) && (m->csv[0] == 1)) {
                                                                                ^
compose/src/logic/canvas.c:108:33: note: Assuming that condition 'm->csv[14]==23' is not redundant
                if ((m->csv[14] == 23) && (m->csv[13] == 22) && (m->csv[0] == 1)) {
                                ^
compose/src/logic/canvas.c:113:81: note: Condition 'm->csv[14]==24' is always false
                    if ((m->csv[16] == 28) && (m->csv[15] == 25) && (m->csv[14] == 24) && (m->csv[13] == 22) && (m->csv[0] == 1)) {
                                                                                ^
compose/src/logic/canvas.c:116:81: style: Condition 'm->csv[14]==24' is always false [knownConditionTrueFalse]
                    if ((m->csv[16] == 26) && (m->csv[15] == 25) && (m->csv[14] == 24) && (m->csv[13] == 22) && (m->csv[0] == 1)) {
                                                                                ^
compose/src/logic/canvas.c:108:33: note: Assuming that condition 'm->csv[14]==23' is not redundant
                if ((m->csv[14] == 23) && (m->csv[13] == 22) && (m->csv[0] == 1)) {
                                ^
compose/src/logic/canvas.c:116:81: note: Condition 'm->csv[14]==24' is always false
                    if ((m->csv[16] == 26) && (m->csv[15] == 25) && (m->csv[14] == 24) && (m->csv[13] == 22) && (m->csv[0] == 1)) {
                                                                                ^
compose/src/logic/canvas.c:119:59: style: Condition 'm->csv[14]==24' is always false [knownConditionTrueFalse]
                    if ((m->csv[15] == 70) && (m->csv[14] == 24) && (m->csv[13] == 22) && (m->csv[0] == 1)) {
                                                          ^
compose/src/logic/canvas.c:108:33: note: Assuming that condition 'm->csv[14]==23' is not redundant
                if ((m->csv[14] == 23) && (m->csv[13] == 22) && (m->csv[0] == 1)) {
                                ^
compose/src/logic/canvas.c:119:59: note: Condition 'm->csv[14]==24' is always false
                    if ((m->csv[15] == 70) && (m->csv[14] == 24) && (m->csv[13] == 22) && (m->csv[0] == 1)) {
                                                          ^
compose/src/logic/canvas.c:122:59: style: Condition 'm->csv[14]==24' is always false [knownConditionTrueFalse]
                    if ((m->csv[15] == 65) && (m->csv[14] == 24) && (m->csv[13] == 22) && (m->csv[0] == 1)) {
                                                          ^
compose/src/logic/canvas.c:108:33: note: Assuming that condition 'm->csv[14]==23' is not redundant
                if ((m->csv[14] == 23) && (m->csv[13] == 22) && (m->csv[0] == 1)) {
                                ^
compose/src/logic/canvas.c:122:59: note: Condition 'm->csv[14]==24' is always false
                    if ((m->csv[15] == 65) && (m->csv[14] == 24) && (m->csv[13] == 22) && (m->csv[0] == 1)) {
                                                          ^
compose/src/logic/canvas.c:125:59: style: Condition 'm->csv[14]==24' is always false [knownConditionTrueFalse]
                    if ((m->csv[15] == 62) && (m->csv[14] == 24) && (m->csv[13] == 22) && (m->csv[0] == 1)) {
                                                          ^
compose/src/logic/canvas.c:108:33: note: Assuming that condition 'm->csv[14]==23' is not redundant
                if ((m->csv[14] == 23) && (m->csv[13] == 22) && (m->csv[0] == 1)) {
                                ^
compose/src/logic/canvas.c:125:59: note: Condition 'm->csv[14]==24' is always false
                    if ((m->csv[15] == 62) && (m->csv[14] == 24) && (m->csv[13] == 22) && (m->csv[0] == 1)) {
                                                          ^
compose/src/logic/canvas.c:128:59: style: Condition 'm->csv[14]==24' is always false [knownConditionTrueFalse]
                    if ((m->csv[15] == 59) && (m->csv[14] == 24) && (m->csv[13] == 22) && (m->csv[0] == 1)) {
                                                          ^
compose/src/logic/canvas.c:108:33: note: Assuming that condition 'm->csv[14]==23' is not redundant
                if ((m->csv[14] == 23) && (m->csv[13] == 22) && (m->csv[0] == 1)) {
                                ^
compose/src/logic/canvas.c:128:59: note: Condition 'm->csv[14]==24' is always false
                    if ((m->csv[15] == 59) && (m->csv[14] == 24) && (m->csv[13] == 22) && (m->csv[0] == 1)) {
                                                          ^
compose/src/logic/canvas.c:131:59: style: Condition 'm->csv[14]==24' is always false [knownConditionTrueFalse]
                    if ((m->csv[15] == 56) && (m->csv[14] == 24) && (m->csv[13] == 22) && (m->csv[0] == 1)) {
                                                          ^
compose/src/logic/canvas.c:108:33: note: Assuming that condition 'm->csv[14]==23' is not redundant
                if ((m->csv[14] == 23) && (m->csv[13] == 22) && (m->csv[0] == 1)) {
                                ^
compose/src/logic/canvas.c:131:59: note: Condition 'm->csv[14]==24' is always false
                    if ((m->csv[15] == 56) && (m->csv[14] == 24) && (m->csv[13] == 22) && (m->csv[0] == 1)) {
                                                          ^
compose/src/logic/canvas.c:134:59: style: Condition 'm->csv[14]==24' is always false [knownConditionTrueFalse]
                    if ((m->csv[15] == 52) && (m->csv[14] == 24) && (m->csv[13] == 22) && (m->csv[0] == 1)) {
                                                          ^
compose/src/logic/canvas.c:108:33: note: Assuming that condition 'm->csv[14]==23' is not redundant
                if ((m->csv[14] == 23) && (m->csv[13] == 22) && (m->csv[0] == 1)) {
                                ^
compose/src/logic/canvas.c:134:59: note: Condition 'm->csv[14]==24' is always false
                    if ((m->csv[15] == 52) && (m->csv[14] == 24) && (m->csv[13] == 22) && (m->csv[0] == 1)) {
                                                          ^
compose/src/logic/canvas.c:137:59: style: Condition 'm->csv[14]==24' is always false [knownConditionTrueFalse]
                    if ((m->csv[15] == 49) && (m->csv[14] == 24) && (m->csv[13] == 22) && (m->csv[0] == 1)) {
                                                          ^
compose/src/logic/canvas.c:108:33: note: Assuming that condition 'm->csv[14]==23' is not redundant
                if ((m->csv[14] == 23) && (m->csv[13] == 22) && (m->csv[0] == 1)) {
                                ^
compose/src/logic/canvas.c:137:59: note: Condition 'm->csv[14]==24' is always false
                    if ((m->csv[15] == 49) && (m->csv[14] == 24) && (m->csv[13] == 22) && (m->csv[0] == 1)) {
                                                          ^
compose/src/logic/canvas.c:140:59: style: Condition 'm->csv[14]==24' is always false [knownConditionTrueFalse]
                    if ((m->csv[15] == 44) && (m->csv[14] == 24) && (m->csv[13] == 22) && (m->csv[0] == 1)) {
                                                          ^
compose/src/logic/canvas.c:108:33: note: Assuming that condition 'm->csv[14]==23' is not redundant
                if ((m->csv[14] == 23) && (m->csv[13] == 22) && (m->csv[0] == 1)) {
                                ^
compose/src/logic/canvas.c:140:59: note: Condition 'm->csv[14]==24' is always false
                    if ((m->csv[15] == 44) && (m->csv[14] == 24) && (m->csv[13] == 22) && (m->csv[0] == 1)) {
                                                          ^
compose/src/logic/canvas.c:143:59: style: Condition 'm->csv[14]==24' is always false [knownConditionTrueFalse]
                    if ((m->csv[15] == 39) && (m->csv[14] == 24) && (m->csv[13] == 22) && (m->csv[0] == 1)) {
                                                          ^
compose/src/logic/canvas.c:108:33: note: Assuming that condition 'm->csv[14]==23' is not redundant
                if ((m->csv[14] == 23) && (m->csv[13] == 22) && (m->csv[0] == 1)) {
                                ^
compose/src/logic/canvas.c:143:59: note: Condition 'm->csv[14]==24' is always false
                    if ((m->csv[15] == 39) && (m->csv[14] == 24) && (m->csv[13] == 22) && (m->csv[0] == 1)) {
                                                          ^
compose/src/logic/canvas.c:146:59: style: Condition 'm->csv[14]==24' is always false [knownConditionTrueFalse]
                    if ((m->csv[15] == 31) && (m->csv[14] == 24) && (m->csv[13] == 22) && (m->csv[0] == 1)) {
                                                          ^
compose/src/logic/canvas.c:108:33: note: Assuming that condition 'm->csv[14]==23' is not redundant
                if ((m->csv[14] == 23) && (m->csv[13] == 22) && (m->csv[0] == 1)) {
                                ^
compose/src/logic/canvas.c:146:59: note: Condition 'm->csv[14]==24' is always false
                    if ((m->csv[15] == 31) && (m->csv[14] == 24) && (m->csv[13] == 22) && (m->csv[0] == 1)) {
                                                          ^
compose/src/logic/canvas.c:149:59: style: Condition 'm->csv[14]==24' is always false [knownConditionTrueFalse]
                    if ((m->csv[15] == 25) && (m->csv[14] == 24) && (m->csv[13] == 22) && (m->csv[0] == 1)) {
                                                          ^
compose/src/logic/canvas.c:108:33: note: Assuming that condition 'm->csv[14]==23' is not redundant
                if ((m->csv[14] == 23) && (m->csv[13] == 22) && (m->csv[0] == 1)) {
                                ^
compose/src/logic/canvas.c:149:59: note: Condition 'm->csv[14]==24' is always false
                    if ((m->csv[15] == 25) && (m->csv[14] == 24) && (m->csv[13] == 22) && (m->csv[0] == 1)) {
                                                          ^
compose/src/logic/canvas.c:152:37: style: Condition 'm->csv[14]==78' is always false [knownConditionTrueFalse]
                    if ((m->csv[14] == 78) && (m->csv[13] == 22) && (m->csv[0] == 1)) {
                                    ^
compose/src/logic/canvas.c:108:33: note: Assuming that condition 'm->csv[14]==23' is not redundant
                if ((m->csv[14] == 23) && (m->csv[13] == 22) && (m->csv[0] == 1)) {
                                ^
compose/src/logic/canvas.c:152:37: note: Condition 'm->csv[14]==78' is always false
                    if ((m->csv[14] == 78) && (m->csv[13] == 22) && (m->csv[0] == 1)) {
                                    ^
compose/src/logic/canvas.c:155:37: style: Condition 'm->csv[14]==24' is always false [knownConditionTrueFalse]
                    if ((m->csv[14] == 24) && (m->csv[13] == 22) && (m->csv[0] == 1)) {
                                    ^
compose/src/logic/canvas.c:108:33: note: Assuming that condition 'm->csv[14]==23' is not redundant
                if ((m->csv[14] == 23) && (m->csv[13] == 22) && (m->csv[0] == 1)) {
                                ^
compose/src/logic/canvas.c:155:37: note: Condition 'm->csv[14]==24' is always false
                    if ((m->csv[14] == 24) && (m->csv[13] == 22) && (m->csv[0] == 1)) {
                                    ^
compose/src/logic/canvas.c:158:37: style: Condition 'm->csv[14]==23' is always true [knownConditionTrueFalse]
                    if ((m->csv[14] == 23) && (m->csv[13] == 22) && (m->csv[0] == 1)) {
                                    ^
compose/src/logic/canvas.c:108:33: note: Assuming that condition 'm->csv[14]==23' is not redundant
                if ((m->csv[14] == 23) && (m->csv[13] == 22) && (m->csv[0] == 1)) {
                                ^
compose/src/logic/canvas.c:158:37: note: Condition 'm->csv[14]==23' is always true
                    if ((m->csv[14] == 23) && (m->csv[13] == 22) && (m->csv[0] == 1)) {
                                    ^
compose/src/logic/canvas.c:158:59: style: Condition 'm->csv[13]==22' is always true [knownConditionTrueFalse]
                    if ((m->csv[14] == 23) && (m->csv[13] == 22) && (m->csv[0] == 1)) {
                                                          ^
compose/src/logic/canvas.c:107:29: note: Assuming that condition 'm->csv[13]==22' is not redundant
            if ((m->csv[13] == 22) && (m->csv[0] == 1)) {
                            ^
compose/src/logic/canvas.c:158:59: note: Condition 'm->csv[13]==22' is always true
                    if ((m->csv[14] == 23) && (m->csv[13] == 22) && (m->csv[0] == 1)) {
                                                          ^
compose/src/logic/canvas.c:158:80: style: Condition 'm->csv[0]==1' is always true [knownConditionTrueFalse]
                    if ((m->csv[14] == 23) && (m->csv[13] == 22) && (m->csv[0] == 1)) {
                                                                               ^
compose/src/logic/canvas.c:107:50: note: Assuming that condition 'm->csv[0]==1' is not redundant
            if ((m->csv[13] == 22) && (m->csv[0] == 1)) {
                                                 ^
compose/src/logic/canvas.c:158:80: note: Condition 'm->csv[0]==1' is always true
                    if ((m->csv[14] == 23) && (m->csv[13] == 22) && (m->csv[0] == 1)) {
                                                                               ^
compose/src/logic/canvas.c:196:33: style: Condition 'm->csv[16]==26' is always true [knownConditionTrueFalse]
                if ((m->csv[16] == 26) && (m->csv[15] == 25) && (m->csv[14] == 24) && (m->csv[13] == 22) && (m->csv[0] == 1)) {
                                ^
compose/src/logic/canvas.c:194:51: note: Assuming that condition 'm->csv[16]==26' is not redundant
            if ((m->csv[17] == 27) && (m->csv[16] == 26) && (m->csv[15] == 25) && (m->csv[14] == 24) && (m->csv[13] == 22) && (m->csv[0] == 1)) {
                                                  ^
compose/src/logic/canvas.c:196:33: note: Condition 'm->csv[16]==26' is always true
                if ((m->csv[16] == 26) && (m->csv[15] == 25) && (m->csv[14] == 24) && (m->csv[13] == 22) && (m->csv[0] == 1)) {
                                ^
compose/src/logic/canvas.c:196:55: style: Condition 'm->csv[15]==25' is always true [knownConditionTrueFalse]
                if ((m->csv[16] == 26) && (m->csv[15] == 25) && (m->csv[14] == 24) && (m->csv[13] == 22) && (m->csv[0] == 1)) {
                                                      ^
compose/src/logic/canvas.c:194:73: note: Assuming that condition 'm->csv[15]==25' is not redundant
            if ((m->csv[17] == 27) && (m->csv[16] == 26) && (m->csv[15] == 25) && (m->csv[14] == 24) && (m->csv[13] == 22) && (m->csv[0] == 1)) {
                                                                        ^
compose/src/logic/canvas.c:196:55: note: Condition 'm->csv[15]==25' is always true
                if ((m->csv[16] == 26) && (m->csv[15] == 25) && (m->csv[14] == 24) && (m->csv[13] == 22) && (m->csv[0] == 1)) {
                                                      ^
compose/src/logic/canvas.c:196:77: style: Condition 'm->csv[14]==24' is always true [knownConditionTrueFalse]
                if ((m->csv[16] == 26) && (m->csv[15] == 25) && (m->csv[14] == 24) && (m->csv[13] == 22) && (m->csv[0] == 1)) {
                                                                            ^
compose/src/logic/canvas.c:194:95: note: Assuming that condition 'm->csv[14]==24' is not redundant
            if ((m->csv[17] == 27) && (m->csv[16] == 26) && (m->csv[15] == 25) && (m->csv[14] == 24) && (m->csv[13] == 22) && (m->csv[0] == 1)) {
                                                                                              ^
compose/src/logic/canvas.c:196:77: note: Condition 'm->csv[14]==24' is always true
                if ((m->csv[16] == 26) && (m->csv[15] == 25) && (m->csv[14] == 24) && (m->csv[13] == 22) && (m->csv[0] == 1)) {
                                                                            ^
compose/src/logic/canvas.c:196:99: style: Condition 'm->csv[13]==22' is always true [knownConditionTrueFalse]
                if ((m->csv[16] == 26) && (m->csv[15] == 25) && (m->csv[14] == 24) && (m->csv[13] == 22) && (m->csv[0] == 1)) {
                                                                                                  ^
compose/src/logic/canvas.c:194:117: note: Assuming that condition 'm->csv[13]==22' is not redundant
            if ((m->csv[17] == 27) && (m->csv[16] == 26) && (m->csv[15] == 25) && (m->csv[14] == 24) && (m->csv[13] == 22) && (m->csv[0] == 1)) {
                                                                                                                    ^
compose/src/logic/canvas.c:196:99: note: Condition 'm->csv[13]==22' is always true
                if ((m->csv[16] == 26) && (m->csv[15] == 25) && (m->csv[14] == 24) && (m->csv[13] == 22) && (m->csv[0] == 1)) {
                                                                                                  ^
compose/src/logic/canvas.c:196:120: style: Condition 'm->csv[0]==1' is always true [knownConditionTrueFalse]
                if ((m->csv[16] == 26) && (m->csv[15] == 25) && (m->csv[14] == 24) && (m->csv[13] == 22) && (m->csv[0] == 1)) {
                                                                                                                       ^
compose/src/logic/canvas.c:194:138: note: Assuming that condition 'm->csv[0]==1' is not redundant
            if ((m->csv[17] == 27) && (m->csv[16] == 26) && (m->csv[15] == 25) && (m->csv[14] == 24) && (m->csv[13] == 22) && (m->csv[0] == 1)) {
                                                                                                                                         ^
compose/src/logic/canvas.c:196:120: note: Condition 'm->csv[0]==1' is always true
                if ((m->csv[16] == 26) && (m->csv[15] == 25) && (m->csv[14] == 24) && (m->csv[13] == 22) && (m->csv[0] == 1)) {
                                                                                                                       ^
compose/src/logic/canvas.c:211:33: style: Condition 'm->csv[16]==28' is always true [knownConditionTrueFalse]
                if ((m->csv[16] == 28) && (m->csv[15] == 25) && (m->csv[14] == 24) && (m->csv[13] == 22) && (m->csv[0] == 1)) {
                                ^
compose/src/logic/canvas.c:209:51: note: Assuming that condition 'm->csv[16]==28' is not redundant
            if ((m->csv[18] == 29) && (m->csv[16] == 28) && (m->csv[15] == 25) && (m->csv[14] == 24) && (m->csv[13] == 22) && (m->csv[0] == 1)) {
                                                  ^
compose/src/logic/canvas.c:211:33: note: Condition 'm->csv[16]==28' is always true
                if ((m->csv[16] == 28) && (m->csv[15] == 25) && (m->csv[14] == 24) && (m->csv[13] == 22) && (m->csv[0] == 1)) {
                                ^
compose/src/logic/canvas.c:211:55: style: Condition 'm->csv[15]==25' is always true [knownConditionTrueFalse]
                if ((m->csv[16] == 28) && (m->csv[15] == 25) && (m->csv[14] == 24) && (m->csv[13] == 22) && (m->csv[0] == 1)) {
                                                      ^
compose/src/logic/canvas.c:209:73: note: Assuming that condition 'm->csv[15]==25' is not redundant
            if ((m->csv[18] == 29) && (m->csv[16] == 28) && (m->csv[15] == 25) && (m->csv[14] == 24) && (m->csv[13] == 22) && (m->csv[0] == 1)) {
                                                                        ^
compose/src/logic/canvas.c:211:55: note: Condition 'm->csv[15]==25' is always true
                if ((m->csv[16] == 28) && (m->csv[15] == 25) && (m->csv[14] == 24) && (m->csv[13] == 22) && (m->csv[0] == 1)) {
                                                      ^
compose/src/logic/canvas.c:211:77: style: Condition 'm->csv[14]==24' is always true [knownConditionTrueFalse]
                if ((m->csv[16] == 28) && (m->csv[15] == 25) && (m->csv[14] == 24) && (m->csv[13] == 22) && (m->csv[0] == 1)) {
                                                                            ^
compose/src/logic/canvas.c:209:95: note: Assuming that condition 'm->csv[14]==24' is not redundant
            if ((m->csv[18] == 29) && (m->csv[16] == 28) && (m->csv[15] == 25) && (m->csv[14] == 24) && (m->csv[13] == 22) && (m->csv[0] == 1)) {
                                                                                              ^
compose/src/logic/canvas.c:211:77: note: Condition 'm->csv[14]==24' is always true
                if ((m->csv[16] == 28) && (m->csv[15] == 25) && (m->csv[14] == 24) && (m->csv[13] == 22) && (m->csv[0] == 1)) {
                                                                            ^
compose/src/logic/canvas.c:211:99: style: Condition 'm->csv[13]==22' is always true [knownConditionTrueFalse]
                if ((m->csv[16] == 28) && (m->csv[15] == 25) && (m->csv[14] == 24) && (m->csv[13] == 22) && (m->csv[0] == 1)) {
                                                                                                  ^
compose/src/logic/canvas.c:209:117: note: Assuming that condition 'm->csv[13]==22' is not redundant
            if ((m->csv[18] == 29) && (m->csv[16] == 28) && (m->csv[15] == 25) && (m->csv[14] == 24) && (m->csv[13] == 22) && (m->csv[0] == 1)) {
                                                                                                                    ^
compose/src/logic/canvas.c:211:99: note: Condition 'm->csv[13]==22' is always true
                if ((m->csv[16] == 28) && (m->csv[15] == 25) && (m->csv[14] == 24) && (m->csv[13] == 22) && (m->csv[0] == 1)) {
                                                                                                  ^
compose/src/logic/canvas.c:211:120: style: Condition 'm->csv[0]==1' is always true [knownConditionTrueFalse]
                if ((m->csv[16] == 28) && (m->csv[15] == 25) && (m->csv[14] == 24) && (m->csv[13] == 22) && (m->csv[0] == 1)) {
                                                                                                                       ^
compose/src/logic/canvas.c:209:138: note: Assuming that condition 'm->csv[0]==1' is not redundant
            if ((m->csv[18] == 29) && (m->csv[16] == 28) && (m->csv[15] == 25) && (m->csv[14] == 24) && (m->csv[13] == 22) && (m->csv[0] == 1)) {
                                                                                                                                         ^
compose/src/logic/canvas.c:211:120: note: Condition 'm->csv[0]==1' is always true
                if ((m->csv[16] == 28) && (m->csv[15] == 25) && (m->csv[14] == 24) && (m->csv[13] == 22) && (m->csv[0] == 1)) {
                                                                                                                       ^
compose/src/logic/canvas.c:357:33: style: Condition 'm->csv[31]==67' is always true [knownConditionTrueFalse]
                if ((m->csv[31] == 67) && (m->csv[15] == 65) && (m->csv[14] == 24) && (m->csv[13] == 22) && (m->csv[0] == 1)) {
                                ^
compose/src/logic/canvas.c:355:29: note: Assuming that condition 'm->csv[31]==67' is not redundant
            if ((m->csv[31] == 67) && (m->csv[15] == 65) && (m->csv[14] == 24) && (m->csv[13] == 22) && (m->csv[0] == 1)) {
                            ^
compose/src/logic/canvas.c:357:33: note: Condition 'm->csv[31]==67' is always true
                if ((m->csv[31] == 67) && (m->csv[15] == 65) && (m->csv[14] == 24) && (m->csv[13] == 22) && (m->csv[0] == 1)) {
                                ^
compose/src/logic/canvas.c:357:55: style: Condition 'm->csv[15]==65' is always true [knownConditionTrueFalse]
                if ((m->csv[31] == 67) && (m->csv[15] == 65) && (m->csv[14] == 24) && (m->csv[13] == 22) && (m->csv[0] == 1)) {
                                                      ^
compose/src/logic/canvas.c:355:51: note: Assuming that condition 'm->csv[15]==65' is not redundant
            if ((m->csv[31] == 67) && (m->csv[15] == 65) && (m->csv[14] == 24) && (m->csv[13] == 22) && (m->csv[0] == 1)) {
                                                  ^
compose/src/logic/canvas.c:357:55: note: Condition 'm->csv[15]==65' is always true
                if ((m->csv[31] == 67) && (m->csv[15] == 65) && (m->csv[14] == 24) && (m->csv[13] == 22) && (m->csv[0] == 1)) {
                                                      ^
compose/src/logic/canvas.c:357:77: style: Condition 'm->csv[14]==24' is always true [knownConditionTrueFalse]
                if ((m->csv[31] == 67) && (m->csv[15] == 65) && (m->csv[14] == 24) && (m->csv[13] == 22) && (m->csv[0] == 1)) {
                                                                            ^
compose/src/logic/canvas.c:355:73: note: Assuming that condition 'm->csv[14]==24' is not redundant
            if ((m->csv[31] == 67) && (m->csv[15] == 65) && (m->csv[14] == 24) && (m->csv[13] == 22) && (m->csv[0] == 1)) {
                                                                        ^
compose/src/logic/canvas.c:357:77: note: Condition 'm->csv[14]==24' is always true
                if ((m->csv[31] == 67) && (m->csv[15] == 65) && (m->csv[14] == 24) && (m->csv[13] == 22) && (m->csv[0] == 1)) {
                                                                            ^
compose/src/logic/canvas.c:357:99: style: Condition 'm->csv[13]==22' is always true [knownConditionTrueFalse]
                if ((m->csv[31] == 67) && (m->csv[15] == 65) && (m->csv[14] == 24) && (m->csv[13] == 22) && (m->csv[0] == 1)) {
                                                                                                  ^
compose/src/logic/canvas.c:355:95: note: Assuming that condition 'm->csv[13]==22' is not redundant
            if ((m->csv[31] == 67) && (m->csv[15] == 65) && (m->csv[14] == 24) && (m->csv[13] == 22) && (m->csv[0] == 1)) {
                                                                                              ^
compose/src/logic/canvas.c:357:99: note: Condition 'm->csv[13]==22' is always true
                if ((m->csv[31] == 67) && (m->csv[15] == 65) && (m->csv[14] == 24) && (m->csv[13] == 22) && (m->csv[0] == 1)) {
                                                                                                  ^
compose/src/logic/canvas.c:357:120: style: Condition 'm->csv[0]==1' is always true [knownConditionTrueFalse]
                if ((m->csv[31] == 67) && (m->csv[15] == 65) && (m->csv[14] == 24) && (m->csv[13] == 22) && (m->csv[0] == 1)) {
                                                                                                                       ^
compose/src/logic/canvas.c:355:116: note: Assuming that condition 'm->csv[0]==1' is not redundant
            if ((m->csv[31] == 67) && (m->csv[15] == 65) && (m->csv[14] == 24) && (m->csv[13] == 22) && (m->csv[0] == 1)) {
                                                                                                                   ^
compose/src/logic/canvas.c:357:120: note: Condition 'm->csv[0]==1' is always true
                if ((m->csv[31] == 67) && (m->csv[15] == 65) && (m->csv[14] == 24) && (m->csv[13] == 22) && (m->csv[0] == 1)) {
                                                                                                                       ^
compose/src/logic/canvas.c:389:83: style: Condition 'm->csv[13]==90' is always true [knownConditionTrueFalse]
                    if ((m->csv[48] == 122) && (m->csv[38] == 112) && (m->csv[13] == 90) && (m->csv[0] == 1)) {
                                                                                  ^
compose/src/logic/canvas.c:386:29: note: Assuming that condition 'm->csv[13]==90' is not redundant
            if ((m->csv[13] == 90) && (m->csv[0] == 1)) {
                            ^
compose/src/logic/canvas.c:389:83: note: Condition 'm->csv[13]==90' is always true
                    if ((m->csv[48] == 122) && (m->csv[38] == 112) && (m->csv[13] == 90) && (m->csv[0] == 1)) {
                                                                                  ^
compose/src/logic/canvas.c:389:104: style: Condition 'm->csv[0]==1' is always true [knownConditionTrueFalse]
                    if ((m->csv[48] == 122) && (m->csv[38] == 112) && (m->csv[13] == 90) && (m->csv[0] == 1)) {
                                                                                                       ^
compose/src/logic/canvas.c:386:50: note: Assuming that condition 'm->csv[0]==1' is not redundant
            if ((m->csv[13] == 90) && (m->csv[0] == 1)) {
                                                 ^
compose/src/logic/canvas.c:389:104: note: Condition 'm->csv[0]==1' is always true
                    if ((m->csv[48] == 122) && (m->csv[38] == 112) && (m->csv[13] == 90) && (m->csv[0] == 1)) {
                                                                                                       ^
compose/src/logic/canvas.c:434:37: style: Condition 'm->wsv[13]==22' is always true [knownConditionTrueFalse]
                    if ((m->wsv[13] == 22)) {
                                    ^
compose/src/logic/canvas.c:433:34: note: Assignment 'm->wsv[13]=22', assigned value is 22
                    m->wsv[13] = 22; // Main = Tool Mode
                                 ^
compose/src/logic/canvas.c:434:37: note: Condition 'm->wsv[13]==22' is always true
                    if ((m->wsv[13] == 22)) {
                                    ^
compose/src/logic/canvas.c:511:56: style: Condition 'm->csv[13]==90' is always true [knownConditionTrueFalse]
                if ((m->csv[38] == 127) && (m->csv[13] == 90) && (m->csv[0] == 1)) {
                                                       ^
compose/src/logic/canvas.c:510:29: note: Assuming that condition 'm->csv[13]==90' is not redundant
            if ((m->csv[13] == 90) && (m->csv[0] == 1)) {
                            ^
compose/src/logic/canvas.c:511:56: note: Condition 'm->csv[13]==90' is always true
                if ((m->csv[38] == 127) && (m->csv[13] == 90) && (m->csv[0] == 1)) {
                                                       ^
compose/src/logic/canvas.c:511:77: style: Condition 'm->csv[0]==1' is always true [knownConditionTrueFalse]
                if ((m->csv[38] == 127) && (m->csv[13] == 90) && (m->csv[0] == 1)) {
                                                                            ^
compose/src/logic/canvas.c:510:50: note: Assuming that condition 'm->csv[0]==1' is not redundant
            if ((m->csv[13] == 90) && (m->csv[0] == 1)) {
                                                 ^
compose/src/logic/canvas.c:511:77: note: Condition 'm->csv[0]==1' is always true
                if ((m->csv[38] == 127) && (m->csv[13] == 90) && (m->csv[0] == 1)) {
                                                                            ^
compose/src/logic/canvas.c:513:60: style: Condition 'm->csv[38]==112' is always false [knownConditionTrueFalse]
                    if ((m->csv[48] == 122) && (m->csv[38] == 112) && (m->csv[13] == 90) && (m->csv[0] == 1)) {
                                                           ^
compose/src/logic/canvas.c:511:33: note: Assuming that condition 'm->csv[38]==127' is not redundant
                if ((m->csv[38] == 127) && (m->csv[13] == 90) && (m->csv[0] == 1)) {
                                ^
compose/src/logic/canvas.c:513:60: note: Condition 'm->csv[38]==112' is always false
                    if ((m->csv[48] == 122) && (m->csv[38] == 112) && (m->csv[13] == 90) && (m->csv[0] == 1)) {
                                                           ^
compose/src/logic/canvas.c:513:83: style: Condition 'm->csv[13]==90' is always true [knownConditionTrueFalse]
                    if ((m->csv[48] == 122) && (m->csv[38] == 112) && (m->csv[13] == 90) && (m->csv[0] == 1)) {
                                                                                  ^
compose/src/logic/canvas.c:510:29: note: Assuming that condition 'm->csv[13]==90' is not redundant
            if ((m->csv[13] == 90) && (m->csv[0] == 1)) {
                            ^
compose/src/logic/canvas.c:513:83: note: Condition 'm->csv[13]==90' is always true
                    if ((m->csv[48] == 122) && (m->csv[38] == 112) && (m->csv[13] == 90) && (m->csv[0] == 1)) {
                                                                                  ^
compose/src/logic/canvas.c:513:104: style: Condition 'm->csv[0]==1' is always true [knownConditionTrueFalse]
                    if ((m->csv[48] == 122) && (m->csv[38] == 112) && (m->csv[13] == 90) && (m->csv[0] == 1)) {
                                                                                                       ^
compose/src/logic/canvas.c:510:50: note: Assuming that condition 'm->csv[0]==1' is not redundant
            if ((m->csv[13] == 90) && (m->csv[0] == 1)) {
                                                 ^
compose/src/logic/canvas.c:513:104: note: Condition 'm->csv[0]==1' is always true
                    if ((m->csv[48] == 122) && (m->csv[38] == 112) && (m->csv[13] == 90) && (m->csv[0] == 1)) {
                                                                                                       ^
compose/src/logic/canvas.c:516:60: style: Condition 'm->csv[38]==112' is always false [knownConditionTrueFalse]
                    if ((m->csv[48] == 120) && (m->csv[38] == 112) && (m->csv[13] == 90) && (m->csv[0] == 1)) {
                                                           ^
compose/src/logic/canvas.c:511:33: note: Assuming that condition 'm->csv[38]==127' is not redundant
                if ((m->csv[38] == 127) && (m->csv[13] == 90) && (m->csv[0] == 1)) {
                                ^
compose/src/logic/canvas.c:516:60: note: Condition 'm->csv[38]==112' is always false
                    if ((m->csv[48] == 120) && (m->csv[38] == 112) && (m->csv[13] == 90) && (m->csv[0] == 1)) {
                                                           ^
compose/src/logic/canvas.c:519:60: style: Condition 'm->csv[38]==112' is always false [knownConditionTrueFalse]
                    if ((m->csv[48] == 118) && (m->csv[38] == 112) && (m->csv[13] == 90) && (m->csv[0] == 1)) {
                                                           ^
compose/src/logic/canvas.c:511:33: note: Assuming that condition 'm->csv[38]==127' is not redundant
                if ((m->csv[38] == 127) && (m->csv[13] == 90) && (m->csv[0] == 1)) {
                                ^
compose/src/logic/canvas.c:519:60: note: Condition 'm->csv[38]==112' is always false
                    if ((m->csv[48] == 118) && (m->csv[38] == 112) && (m->csv[13] == 90) && (m->csv[0] == 1)) {
                                                           ^
compose/src/logic/canvas.c:522:60: style: Condition 'm->csv[38]==112' is always false [knownConditionTrueFalse]
                    if ((m->csv[48] == 113) && (m->csv[38] == 112) && (m->csv[13] == 90) && (m->csv[0] == 1)) {
                                                           ^
compose/src/logic/canvas.c:511:33: note: Assuming that condition 'm->csv[38]==127' is not redundant
                if ((m->csv[38] == 127) && (m->csv[13] == 90) && (m->csv[0] == 1)) {
                                ^
compose/src/logic/canvas.c:522:60: note: Condition 'm->csv[38]==112' is always false
                    if ((m->csv[48] == 113) && (m->csv[38] == 112) && (m->csv[13] == 90) && (m->csv[0] == 1)) {
                                                           ^
compose/src/logic/canvas.c:525:60: style: Condition 'm->csv[38]==106' is always false [knownConditionTrueFalse]
                    if ((m->csv[45] == 110) && (m->csv[38] == 106) && (m->csv[13] == 90) && (m->csv[0] == 1)) {
                                                           ^
compose/src/logic/canvas.c:511:33: note: Assuming that condition 'm->csv[38]==127' is not redundant
                if ((m->csv[38] == 127) && (m->csv[13] == 90) && (m->csv[0] == 1)) {
                                ^
compose/src/logic/canvas.c:525:60: note: Condition 'm->csv[38]==106' is always false
                    if ((m->csv[45] == 110) && (m->csv[38] == 106) && (m->csv[13] == 90) && (m->csv[0] == 1)) {
                                                           ^
compose/src/logic/canvas.c:528:60: style: Condition 'm->csv[38]==106' is always false [knownConditionTrueFalse]
                    if ((m->csv[45] == 107) && (m->csv[38] == 106) && (m->csv[13] == 90) && (m->csv[0] == 1)) {
                                                           ^
compose/src/logic/canvas.c:511:33: note: Assuming that condition 'm->csv[38]==127' is not redundant
                if ((m->csv[38] == 127) && (m->csv[13] == 90) && (m->csv[0] == 1)) {
                                ^
compose/src/logic/canvas.c:528:60: note: Condition 'm->csv[38]==106' is always false
                    if ((m->csv[45] == 107) && (m->csv[38] == 106) && (m->csv[13] == 90) && (m->csv[0] == 1)) {
                                                           ^
compose/src/logic/canvas.c:531:60: style: Condition 'm->csv[38]==91' is always false [knownConditionTrueFalse]
                    if ((m->csv[39] == 104) && (m->csv[38] == 91) && (m->csv[13] == 90) && (m->csv[0] == 1)) {
                                                           ^
compose/src/logic/canvas.c:511:33: note: Assuming that condition 'm->csv[38]==127' is not redundant
                if ((m->csv[38] == 127) && (m->csv[13] == 90) && (m->csv[0] == 1)) {
                                ^
compose/src/logic/canvas.c:531:60: note: Condition 'm->csv[38]==91' is always false
                    if ((m->csv[39] == 104) && (m->csv[38] == 91) && (m->csv[13] == 90) && (m->csv[0] == 1)) {
                                                           ^
compose/src/logic/canvas.c:534:60: style: Condition 'm->csv[38]==91' is always false [knownConditionTrueFalse]
                    if ((m->csv[39] == 102) && (m->csv[38] == 91) && (m->csv[13] == 90) && (m->csv[0] == 1)) {
                                                           ^
compose/src/logic/canvas.c:511:33: note: Assuming that condition 'm->csv[38]==127' is not redundant
                if ((m->csv[38] == 127) && (m->csv[13] == 90) && (m->csv[0] == 1)) {
                                ^
compose/src/logic/canvas.c:534:60: note: Condition 'm->csv[38]==91' is always false
                    if ((m->csv[39] == 102) && (m->csv[38] == 91) && (m->csv[13] == 90) && (m->csv[0] == 1)) {
                                                           ^
compose/src/logic/canvas.c:537:60: style: Condition 'm->csv[38]==91' is always false [knownConditionTrueFalse]
                    if ((m->csv[39] == 100) && (m->csv[38] == 91) && (m->csv[13] == 90) && (m->csv[0] == 1)) {
                                                           ^
compose/src/logic/canvas.c:511:33: note: Assuming that condition 'm->csv[38]==127' is not redundant
                if ((m->csv[38] == 127) && (m->csv[13] == 90) && (m->csv[0] == 1)) {
                                ^
compose/src/logic/canvas.c:537:60: note: Condition 'm->csv[38]==91' is always false
                    if ((m->csv[39] == 100) && (m->csv[38] == 91) && (m->csv[13] == 90) && (m->csv[0] == 1)) {
                                                           ^
compose/src/logic/canvas.c:540:59: style: Condition 'm->csv[38]==91' is always false [knownConditionTrueFalse]
                    if ((m->csv[39] == 98) && (m->csv[38] == 91) && (m->csv[13] == 90) && (m->csv[0] == 1)) {
                                                          ^
compose/src/logic/canvas.c:511:33: note: Assuming that condition 'm->csv[38]==127' is not redundant
                if ((m->csv[38] == 127) && (m->csv[13] == 90) && (m->csv[0] == 1)) {
                                ^
compose/src/logic/canvas.c:540:59: note: Condition 'm->csv[38]==91' is always false
                    if ((m->csv[39] == 98) && (m->csv[38] == 91) && (m->csv[13] == 90) && (m->csv[0] == 1)) {
                                                          ^
compose/src/logic/canvas.c:543:59: style: Condition 'm->csv[38]==91' is always false [knownConditionTrueFalse]
                    if ((m->csv[39] == 96) && (m->csv[38] == 91) && (m->csv[13] == 90) && (m->csv[0] == 1)) {
                                                          ^
compose/src/logic/canvas.c:511:33: note: Assuming that condition 'm->csv[38]==127' is not redundant
                if ((m->csv[38] == 127) && (m->csv[13] == 90) && (m->csv[0] == 1)) {
                                ^
compose/src/logic/canvas.c:543:59: note: Condition 'm->csv[38]==91' is always false
                    if ((m->csv[39] == 96) && (m->csv[38] == 91) && (m->csv[13] == 90) && (m->csv[0] == 1)) {
                                                          ^
compose/src/logic/canvas.c:546:37: style: Condition 'm->csv[38]==130' is always false [knownConditionTrueFalse]
                    if ((m->csv[38] == 130) && (m->csv[13] == 90) && (m->csv[0] == 1)) {
                                    ^
compose/src/logic/canvas.c:511:33: note: Assuming that condition 'm->csv[38]==127' is not redundant
                if ((m->csv[38] == 127) && (m->csv[13] == 90) && (m->csv[0] == 1)) {
                                ^
compose/src/logic/canvas.c:546:37: note: Condition 'm->csv[38]==130' is always false
                    if ((m->csv[38] == 130) && (m->csv[13] == 90) && (m->csv[0] == 1)) {
                                    ^
compose/src/logic/canvas.c:549:37: style: Condition 'm->csv[38]==128' is always false [knownConditionTrueFalse]
                    if ((m->csv[38] == 128) && (m->csv[13] == 90) && (m->csv[0] == 1)) {
                                    ^
compose/src/logic/canvas.c:511:33: note: Assuming that condition 'm->csv[38]==127' is not redundant
                if ((m->csv[38] == 127) && (m->csv[13] == 90) && (m->csv[0] == 1)) {
                                ^
compose/src/logic/canvas.c:549:37: note: Condition 'm->csv[38]==128' is always false
                    if ((m->csv[38] == 128) && (m->csv[13] == 90) && (m->csv[0] == 1)) {
                                    ^
compose/src/logic/canvas.c:552:37: style: Condition 'm->csv[13]==90' is always true [knownConditionTrueFalse]
                    if ((m->csv[13] == 90) && (m->csv[0] == 1)) {
                                    ^
compose/src/logic/canvas.c:510:29: note: Assuming that condition 'm->csv[13]==90' is not redundant
            if ((m->csv[13] == 90) && (m->csv[0] == 1)) {
                            ^
compose/src/logic/canvas.c:552:37: note: Condition 'm->csv[13]==90' is always true
                    if ((m->csv[13] == 90) && (m->csv[0] == 1)) {
                                    ^
compose/src/logic/canvas.c:552:58: style: Condition 'm->csv[0]==1' is always true [knownConditionTrueFalse]
                    if ((m->csv[13] == 90) && (m->csv[0] == 1)) {
                                                         ^
compose/src/logic/canvas.c:510:50: note: Assuming that condition 'm->csv[0]==1' is not redundant
            if ((m->csv[13] == 90) && (m->csv[0] == 1)) {
                                                 ^
compose/src/logic/canvas.c:552:58: note: Condition 'm->csv[0]==1' is always true
                    if ((m->csv[13] == 90) && (m->csv[0] == 1)) {
                                                         ^
compose/src/logic/canvas.c:559:37: style: Condition 'm->wsv[13]==22' is always true [knownConditionTrueFalse]
                    if ((m->wsv[13] == 22)) {
                                    ^
compose/src/logic/canvas.c:558:34: note: Assignment 'm->wsv[13]=22', assigned value is 22
                    m->wsv[13] = 22; // Main = Tool Mode
                                 ^
compose/src/logic/canvas.c:559:37: note: Condition 'm->wsv[13]==22' is always true
                    if ((m->wsv[13] == 22)) {
                                    ^
compose/src/logic/canvas.c:652:33: style: Condition 'm->csv[11]==20' is always true [knownConditionTrueFalse]
                if ((m->csv[11] == 20) && (m->csv[9] == 16) && (m->csv[0] == 1)) {
                                ^
compose/src/logic/canvas.c:650:51: note: Assuming that condition 'm->csv[11]==20' is not redundant
            if ((m->csv[12] == 21) && (m->csv[11] == 20) && (m->csv[9] == 16) && (m->csv[0] == 1)) {
                                                  ^
compose/src/logic/canvas.c:652:33: note: Condition 'm->csv[11]==20' is always true
                if ((m->csv[11] == 20) && (m->csv[9] == 16) && (m->csv[0] == 1)) {
                                ^
compose/src/logic/canvas.c:652:54: style: Condition 'm->csv[9]==16' is always true [knownConditionTrueFalse]
                if ((m->csv[11] == 20) && (m->csv[9] == 16) && (m->csv[0] == 1)) {
                                                     ^
compose/src/logic/canvas.c:650:72: note: Assuming that condition 'm->csv[9]==16' is not redundant
            if ((m->csv[12] == 21) && (m->csv[11] == 20) && (m->csv[9] == 16) && (m->csv[0] == 1)) {
                                                                       ^
compose/src/logic/canvas.c:652:54: note: Condition 'm->csv[9]==16' is always true
                if ((m->csv[11] == 20) && (m->csv[9] == 16) && (m->csv[0] == 1)) {
                                                     ^
compose/src/logic/canvas.c:652:75: style: Condition 'm->csv[0]==1' is always true [knownConditionTrueFalse]
                if ((m->csv[11] == 20) && (m->csv[9] == 16) && (m->csv[0] == 1)) {
                                                                          ^
compose/src/logic/canvas.c:650:93: note: Assuming that condition 'm->csv[0]==1' is not redundant
            if ((m->csv[12] == 21) && (m->csv[11] == 20) && (m->csv[9] == 16) && (m->csv[0] == 1)) {
                                                                                            ^
compose/src/logic/canvas.c:652:75: note: Condition 'm->csv[0]==1' is always true
                if ((m->csv[11] == 20) && (m->csv[9] == 16) && (m->csv[0] == 1)) {
                                                                          ^
compose/src/logic/canvas.c:1033:74: style: Condition 'm->csv[0]==1' is always true [knownConditionTrueFalse]
                if ((m->csv[8] == 15) && (m->csv[6] == 11) && (m->csv[0] == 1)) {
                                                                         ^
compose/src/logic/canvas.c:1032:72: note: Assuming that condition 'm->csv[0]==1' is not redundant
            if ((m->csv[14] == 23) && (m->csv[13] == 22) && (m->csv[0] == 1)) {
                                                                       ^
compose/src/logic/canvas.c:1033:74: note: Condition 'm->csv[0]==1' is always true
                if ((m->csv[8] == 15) && (m->csv[6] == 11) && (m->csv[0] == 1)) {
                                                                         ^
compose/src/logic/canvas.c:1035:37: style: Condition 'm->csv[14]==23' is always true [knownConditionTrueFalse]
                    if ((m->csv[14] == 23) && (m->csv[13] == 22) && (m->csv[0] == 1)) {
                                    ^
compose/src/logic/canvas.c:1032:29: note: Assuming that condition 'm->csv[14]==23' is not redundant
            if ((m->csv[14] == 23) && (m->csv[13] == 22) && (m->csv[0] == 1)) {
                            ^
compose/src/logic/canvas.c:1035:37: note: Condition 'm->csv[14]==23' is always true
                    if ((m->csv[14] == 23) && (m->csv[13] == 22) && (m->csv[0] == 1)) {
                                    ^
compose/src/logic/canvas.c:1035:59: style: Condition 'm->csv[13]==22' is always true [knownConditionTrueFalse]
                    if ((m->csv[14] == 23) && (m->csv[13] == 22) && (m->csv[0] == 1)) {
                                                          ^
compose/src/logic/canvas.c:1032:51: note: Assuming that condition 'm->csv[13]==22' is not redundant
            if ((m->csv[14] == 23) && (m->csv[13] == 22) && (m->csv[0] == 1)) {
                                                  ^
compose/src/logic/canvas.c:1035:59: note: Condition 'm->csv[13]==22' is always true
                    if ((m->csv[14] == 23) && (m->csv[13] == 22) && (m->csv[0] == 1)) {
                                                          ^
compose/src/logic/canvas.c:1035:80: style: Condition 'm->csv[0]==1' is always true [knownConditionTrueFalse]
                    if ((m->csv[14] == 23) && (m->csv[13] == 22) && (m->csv[0] == 1)) {
                                                                               ^
compose/src/logic/canvas.c:1032:72: note: Assuming that condition 'm->csv[0]==1' is not redundant
            if ((m->csv[14] == 23) && (m->csv[13] == 22) && (m->csv[0] == 1)) {
                                                                       ^
compose/src/logic/canvas.c:1035:80: note: Condition 'm->csv[0]==1' is always true
                    if ((m->csv[14] == 23) && (m->csv[13] == 22) && (m->csv[0] == 1)) {
                                                                               ^
compose/src/logic/canvas.c:1116:32: style: Condition 'm->csv[2]==5' is always true [knownConditionTrueFalse]
                if ((m->csv[2] == 5) && (m->csv[1] == 3) && (m->csv[0] == 1)) {
                               ^
compose/src/logic/canvas.c:1114:28: note: Assuming that condition 'm->csv[2]==5' is not redundant
            if ((m->csv[2] == 5) && (m->csv[1] == 3) && (m->csv[0] == 1)) {
                           ^
compose/src/logic/canvas.c:1116:32: note: Condition 'm->csv[2]==5' is always true
                if ((m->csv[2] == 5) && (m->csv[1] == 3) && (m->csv[0] == 1)) {
                               ^
compose/src/logic/canvas.c:1116:52: style: Condition 'm->csv[1]==3' is always true [knownConditionTrueFalse]
                if ((m->csv[2] == 5) && (m->csv[1] == 3) && (m->csv[0] == 1)) {
                                                   ^
compose/src/logic/canvas.c:1114:48: note: Assuming that condition 'm->csv[1]==3' is not redundant
            if ((m->csv[2] == 5) && (m->csv[1] == 3) && (m->csv[0] == 1)) {
                                               ^
compose/src/logic/canvas.c:1116:52: note: Condition 'm->csv[1]==3' is always true
                if ((m->csv[2] == 5) && (m->csv[1] == 3) && (m->csv[0] == 1)) {
                                                   ^
compose/src/logic/canvas.c:1116:72: style: Condition 'm->csv[0]==1' is always true [knownConditionTrueFalse]
                if ((m->csv[2] == 5) && (m->csv[1] == 3) && (m->csv[0] == 1)) {
                                                                       ^
compose/src/logic/canvas.c:1114:68: note: Assuming that condition 'm->csv[0]==1' is not redundant
            if ((m->csv[2] == 5) && (m->csv[1] == 3) && (m->csv[0] == 1)) {
                                                                   ^
compose/src/logic/canvas.c:1116:72: note: Condition 'm->csv[0]==1' is always true
                if ((m->csv[2] == 5) && (m->csv[1] == 3) && (m->csv[0] == 1)) {
                                                                       ^
compose/src/logic/canvas.c:1127:32: style: Condition 'm->csv[4]==9' is always true [knownConditionTrueFalse]
                if ((m->csv[4] == 9) && (m->csv[1] == 7) && (m->csv[0] == 1)) {
                               ^
compose/src/logic/canvas.c:1125:28: note: Assuming that condition 'm->csv[4]==9' is not redundant
            if ((m->csv[4] == 9) && (m->csv[1] == 7) && (m->csv[0] == 1)) {
                           ^
compose/src/logic/canvas.c:1127:32: note: Condition 'm->csv[4]==9' is always true
                if ((m->csv[4] == 9) && (m->csv[1] == 7) && (m->csv[0] == 1)) {
                               ^
compose/src/logic/canvas.c:1127:52: style: Condition 'm->csv[1]==7' is always true [knownConditionTrueFalse]
                if ((m->csv[4] == 9) && (m->csv[1] == 7) && (m->csv[0] == 1)) {
                                                   ^
compose/src/logic/canvas.c:1125:48: note: Assuming that condition 'm->csv[1]==7' is not redundant
            if ((m->csv[4] == 9) && (m->csv[1] == 7) && (m->csv[0] == 1)) {
                                               ^
compose/src/logic/canvas.c:1127:52: note: Condition 'm->csv[1]==7' is always true
                if ((m->csv[4] == 9) && (m->csv[1] == 7) && (m->csv[0] == 1)) {
                                                   ^
compose/src/logic/canvas.c:1127:72: style: Condition 'm->csv[0]==1' is always true [knownConditionTrueFalse]
                if ((m->csv[4] == 9) && (m->csv[1] == 7) && (m->csv[0] == 1)) {
                                                                       ^
compose/src/logic/canvas.c:1125:68: note: Assuming that condition 'm->csv[0]==1' is not redundant
            if ((m->csv[4] == 9) && (m->csv[1] == 7) && (m->csv[0] == 1)) {
                                                                   ^
compose/src/logic/canvas.c:1127:72: note: Condition 'm->csv[0]==1' is always true
                if ((m->csv[4] == 9) && (m->csv[1] == 7) && (m->csv[0] == 1)) {
                                                                       ^
compose/src/logic/canvas.c:1138:99: style: Condition 'm->csv[13]==22' is always true [knownConditionTrueFalse]
                if ((m->csv[31] == 67) && (m->csv[15] == 65) && (m->csv[14] == 24) && (m->csv[13] == 22) && (m->csv[0] == 1)) {
                                                                                                  ^
compose/src/logic/canvas.c:1136:29: note: Assuming that condition 'm->csv[13]==22' is not redundant
            if ((m->csv[13] == 22) && (m->csv[0] == 1)) {
                            ^
compose/src/logic/canvas.c:1138:99: note: Condition 'm->csv[13]==22' is always true
                if ((m->csv[31] == 67) && (m->csv[15] == 65) && (m->csv[14] == 24) && (m->csv[13] == 22) && (m->csv[0] == 1)) {
                                                                                                  ^
compose/src/logic/canvas.c:1138:120: style: Condition 'm->csv[0]==1' is always true [knownConditionTrueFalse]
                if ((m->csv[31] == 67) && (m->csv[15] == 65) && (m->csv[14] == 24) && (m->csv[13] == 22) && (m->csv[0] == 1)) {
                                                                                                                       ^
compose/src/logic/canvas.c:1136:50: note: Assuming that condition 'm->csv[0]==1' is not redundant
            if ((m->csv[13] == 22) && (m->csv[0] == 1)) {
                                                 ^
compose/src/logic/canvas.c:1138:120: note: Condition 'm->csv[0]==1' is always true
                if ((m->csv[31] == 67) && (m->csv[15] == 65) && (m->csv[14] == 24) && (m->csv[13] == 22) && (m->csv[0] == 1)) {
                                                                                                                       ^
compose/src/logic/canvas.c:1193:33: style: Condition 'm->wsv[13]==22' is always true [knownConditionTrueFalse]
                if ((m->wsv[13] == 22)) {
                                ^
compose/src/logic/canvas.c:1192:30: note: Assignment 'm->wsv[13]=22', assigned value is 22
                m->wsv[13] = 22; // Main = Tool Mode
                             ^
compose/src/logic/canvas.c:1193:33: note: Condition 'm->wsv[13]==22' is always true
                if ((m->wsv[13] == 22)) {
                                ^
compose/src/logic/canvas.c:1270:33: style: Condition 'm->csv[31]==67' is always true [knownConditionTrueFalse]
                if ((m->csv[31] == 67) && (m->csv[15] == 65) && (m->csv[14] == 24) && (m->csv[13] == 22) && (m->csv[0] == 1)) {
                                ^
compose/src/logic/canvas.c:1268:29: note: Assuming that condition 'm->csv[31]==67' is not redundant
            if ((m->csv[31] == 67) && (m->csv[15] == 65) && (m->csv[14] == 24) && (m->csv[13] == 22) && (m->csv[0] == 1)) {
                            ^
compose/src/logic/canvas.c:1270:33: note: Condition 'm->csv[31]==67' is always true
                if ((m->csv[31] == 67) && (m->csv[15] == 65) && (m->csv[14] == 24) && (m->csv[13] == 22) && (m->csv[0] == 1)) {
                                ^
compose/src/logic/canvas.c:1270:55: style: Condition 'm->csv[15]==65' is always true [knownConditionTrueFalse]
                if ((m->csv[31] == 67) && (m->csv[15] == 65) && (m->csv[14] == 24) && (m->csv[13] == 22) && (m->csv[0] == 1)) {
                                                      ^
compose/src/logic/canvas.c:1268:51: note: Assuming that condition 'm->csv[15]==65' is not redundant
            if ((m->csv[31] == 67) && (m->csv[15] == 65) && (m->csv[14] == 24) && (m->csv[13] == 22) && (m->csv[0] == 1)) {
                                                  ^
compose/src/logic/canvas.c:1270:55: note: Condition 'm->csv[15]==65' is always true
                if ((m->csv[31] == 67) && (m->csv[15] == 65) && (m->csv[14] == 24) && (m->csv[13] == 22) && (m->csv[0] == 1)) {
                                                      ^
compose/src/logic/canvas.c:1270:77: style: Condition 'm->csv[14]==24' is always true [knownConditionTrueFalse]
                if ((m->csv[31] == 67) && (m->csv[15] == 65) && (m->csv[14] == 24) && (m->csv[13] == 22) && (m->csv[0] == 1)) {
                                                                            ^
compose/src/logic/canvas.c:1268:73: note: Assuming that condition 'm->csv[14]==24' is not redundant
            if ((m->csv[31] == 67) && (m->csv[15] == 65) && (m->csv[14] == 24) && (m->csv[13] == 22) && (m->csv[0] == 1)) {
                                                                        ^
compose/src/logic/canvas.c:1270:77: note: Condition 'm->csv[14]==24' is always true
                if ((m->csv[31] == 67) && (m->csv[15] == 65) && (m->csv[14] == 24) && (m->csv[13] == 22) && (m->csv[0] == 1)) {
                                                                            ^
compose/src/logic/canvas.c:1270:99: style: Condition 'm->csv[13]==22' is always true [knownConditionTrueFalse]
                if ((m->csv[31] == 67) && (m->csv[15] == 65) && (m->csv[14] == 24) && (m->csv[13] == 22) && (m->csv[0] == 1)) {
                                                                                                  ^
compose/src/logic/canvas.c:1268:95: note: Assuming that condition 'm->csv[13]==22' is not redundant
            if ((m->csv[31] == 67) && (m->csv[15] == 65) && (m->csv[14] == 24) && (m->csv[13] == 22) && (m->csv[0] == 1)) {
                                                                                              ^
compose/src/logic/canvas.c:1270:99: note: Condition 'm->csv[13]==22' is always true
                if ((m->csv[31] == 67) && (m->csv[15] == 65) && (m->csv[14] == 24) && (m->csv[13] == 22) && (m->csv[0] == 1)) {
                                                                                                  ^
compose/src/logic/canvas.c:1270:120: style: Condition 'm->csv[0]==1' is always true [knownConditionTrueFalse]
                if ((m->csv[31] == 67) && (m->csv[15] == 65) && (m->csv[14] == 24) && (m->csv[13] == 22) && (m->csv[0] == 1)) {
                                                                                                                       ^
compose/src/logic/canvas.c:1268:116: note: Assuming that condition 'm->csv[0]==1' is not redundant
            if ((m->csv[31] == 67) && (m->csv[15] == 65) && (m->csv[14] == 24) && (m->csv[13] == 22) && (m->csv[0] == 1)) {
                                                                                                                   ^
compose/src/logic/canvas.c:1270:120: note: Condition 'm->csv[0]==1' is always true
                if ((m->csv[31] == 67) && (m->csv[15] == 65) && (m->csv[14] == 24) && (m->csv[13] == 22) && (m->csv[0] == 1)) {
                                                                                                                       ^
compose/src/logic/canvas.c:1285:33: style: Condition 'm->csv[14]==23' is always true [knownConditionTrueFalse]
                if ((m->csv[14] == 23) && (m->csv[13] == 22) && (m->csv[0] == 1)) {
                                ^
compose/src/logic/canvas.c:1283:29: note: Assuming that condition 'm->csv[14]==23' is not redundant
            if ((m->csv[14] == 23) && (m->csv[13] == 22) && (m->csv[0] == 1)) {
                            ^
compose/src/logic/canvas.c:1285:33: note: Condition 'm->csv[14]==23' is always true
                if ((m->csv[14] == 23) && (m->csv[13] == 22) && (m->csv[0] == 1)) {
                                ^
compose/src/logic/canvas.c:1285:55: style: Condition 'm->csv[13]==22' is always true [knownConditionTrueFalse]
                if ((m->csv[14] == 23) && (m->csv[13] == 22) && (m->csv[0] == 1)) {
                                                      ^
compose/src/logic/canvas.c:1283:51: note: Assuming that condition 'm->csv[13]==22' is not redundant
            if ((m->csv[14] == 23) && (m->csv[13] == 22) && (m->csv[0] == 1)) {
                                                  ^
compose/src/logic/canvas.c:1285:55: note: Condition 'm->csv[13]==22' is always true
                if ((m->csv[14] == 23) && (m->csv[13] == 22) && (m->csv[0] == 1)) {
                                                      ^
compose/src/logic/canvas.c:1285:76: style: Condition 'm->csv[0]==1' is always true [knownConditionTrueFalse]
                if ((m->csv[14] == 23) && (m->csv[13] == 22) && (m->csv[0] == 1)) {
                                                                           ^
compose/src/logic/canvas.c:1283:72: note: Assuming that condition 'm->csv[0]==1' is not redundant
            if ((m->csv[14] == 23) && (m->csv[13] == 22) && (m->csv[0] == 1)) {
                                                                       ^
compose/src/logic/canvas.c:1285:76: note: Condition 'm->csv[0]==1' is always true
                if ((m->csv[14] == 23) && (m->csv[13] == 22) && (m->csv[0] == 1)) {
                                                                           ^
compose/src/logic/canvas.c:1314:74: style: Condition 'm->csv[0]==1' is always true [knownConditionTrueFalse]
                if ((m->csv[8] == 15) && (m->csv[6] == 11) && (m->csv[0] == 1)) {
                                                                         ^
compose/src/logic/canvas.c:1313:48: note: Assuming that condition 'm->csv[0]==1' is not redundant
            if ((m->csv[1] == 2) && (m->csv[0] == 1)) {
                                               ^
compose/src/logic/canvas.c:1314:74: note: Condition 'm->csv[0]==1' is always true
                if ((m->csv[8] == 15) && (m->csv[6] == 11) && (m->csv[0] == 1)) {
                                                                         ^
compose/src/logic/canvas.c:1315:80: style: Condition 'm->csv[0]==1' is always true [knownConditionTrueFalse]
                    if ((m->csv[14] == 23) && (m->csv[13] == 22) && (m->csv[0] == 1)) {
                                                                               ^
compose/src/logic/canvas.c:1313:48: note: Assuming that condition 'm->csv[0]==1' is not redundant
            if ((m->csv[1] == 2) && (m->csv[0] == 1)) {
                                               ^
compose/src/logic/canvas.c:1315:80: note: Condition 'm->csv[0]==1' is always true
                    if ((m->csv[14] == 23) && (m->csv[13] == 22) && (m->csv[0] == 1)) {
                                                                               ^
compose/src/logic/canvas.c:1335:74: style: Condition 'm->csv[0]==1' is always true [knownConditionTrueFalse]
                if ((m->csv[8] == 15) && (m->csv[6] == 11) && (m->csv[0] == 1)) {
                                                                         ^
compose/src/logic/canvas.c:1334:48: note: Assuming that condition 'm->csv[0]==1' is not redundant
            if ((m->csv[1] == 3) && (m->csv[0] == 1)) {
                                               ^
compose/src/logic/canvas.c:1335:74: note: Condition 'm->csv[0]==1' is always true
                if ((m->csv[8] == 15) && (m->csv[6] == 11) && (m->csv[0] == 1)) {
                                                                         ^
compose/src/logic/canvas.c:1336:80: style: Condition 'm->csv[0]==1' is always true [knownConditionTrueFalse]
                    if ((m->csv[14] == 23) && (m->csv[13] == 22) && (m->csv[0] == 1)) {
                                                                               ^
compose/src/logic/canvas.c:1334:48: note: Assuming that condition 'm->csv[0]==1' is not redundant
            if ((m->csv[1] == 3) && (m->csv[0] == 1)) {
                                               ^
compose/src/logic/canvas.c:1336:80: note: Condition 'm->csv[0]==1' is always true
                    if ((m->csv[14] == 23) && (m->csv[13] == 22) && (m->csv[0] == 1)) {
                                                                               ^
compose/src/logic/canvas.c:1362:74: style: Condition 'm->csv[0]==1' is always true [knownConditionTrueFalse]
                if ((m->csv[8] == 15) && (m->csv[6] == 11) && (m->csv[0] == 1)) {
                                                                         ^
compose/src/logic/canvas.c:1361:48: note: Assuming that condition 'm->csv[0]==1' is not redundant
            if ((m->csv[1] == 7) && (m->csv[0] == 1)) {
                                               ^
compose/src/logic/canvas.c:1362:74: note: Condition 'm->csv[0]==1' is always true
                if ((m->csv[8] == 15) && (m->csv[6] == 11) && (m->csv[0] == 1)) {
                                                                         ^
compose/src/logic/canvas.c:1363:80: style: Condition 'm->csv[0]==1' is always true [knownConditionTrueFalse]
                    if ((m->csv[14] == 23) && (m->csv[13] == 22) && (m->csv[0] == 1)) {
                                                                               ^
compose/src/logic/canvas.c:1361:48: note: Assuming that condition 'm->csv[0]==1' is not redundant
            if ((m->csv[1] == 7) && (m->csv[0] == 1)) {
                                               ^
compose/src/logic/canvas.c:1363:80: note: Condition 'm->csv[0]==1' is always true
                    if ((m->csv[14] == 23) && (m->csv[13] == 22) && (m->csv[0] == 1)) {
                                                                               ^
compose/src/logic/canvas.c:1403:74: style: Condition 'm->csv[0]==1' is always true [knownConditionTrueFalse]
                if ((m->csv[8] == 14) && (m->csv[6] == 11) && (m->csv[0] == 1)) {
                                                                         ^
compose/src/logic/canvas.c:1402:72: note: Assuming that condition 'm->csv[0]==1' is not redundant
            if ((m->csv[14] == 23) && (m->csv[13] == 22) && (m->csv[0] == 1)) {
                                                                       ^
compose/src/logic/canvas.c:1403:74: note: Condition 'm->csv[0]==1' is always true
                if ((m->csv[8] == 14) && (m->csv[6] == 11) && (m->csv[0] == 1)) {
                                                                         ^
compose/src/logic/canvas.c:1405:37: style: Condition 'm->csv[14]==23' is always true [knownConditionTrueFalse]
                    if ((m->csv[14] == 23) && (m->csv[13] == 22) && (m->csv[0] == 1)) {
                                    ^
compose/src/logic/canvas.c:1402:29: note: Assuming that condition 'm->csv[14]==23' is not redundant
            if ((m->csv[14] == 23) && (m->csv[13] == 22) && (m->csv[0] == 1)) {
                            ^
compose/src/logic/canvas.c:1405:37: note: Condition 'm->csv[14]==23' is always true
                    if ((m->csv[14] == 23) && (m->csv[13] == 22) && (m->csv[0] == 1)) {
                                    ^
compose/src/logic/canvas.c:1405:59: style: Condition 'm->csv[13]==22' is always true [knownConditionTrueFalse]
                    if ((m->csv[14] == 23) && (m->csv[13] == 22) && (m->csv[0] == 1)) {
                                                          ^
compose/src/logic/canvas.c:1402:51: note: Assuming that condition 'm->csv[13]==22' is not redundant
            if ((m->csv[14] == 23) && (m->csv[13] == 22) && (m->csv[0] == 1)) {
                                                  ^
compose/src/logic/canvas.c:1405:59: note: Condition 'm->csv[13]==22' is always true
                    if ((m->csv[14] == 23) && (m->csv[13] == 22) && (m->csv[0] == 1)) {
                                                          ^
compose/src/logic/canvas.c:1405:80: style: Condition 'm->csv[0]==1' is always true [knownConditionTrueFalse]
                    if ((m->csv[14] == 23) && (m->csv[13] == 22) && (m->csv[0] == 1)) {
                                                                               ^
compose/src/logic/canvas.c:1402:72: note: Assuming that condition 'm->csv[0]==1' is not redundant
            if ((m->csv[14] == 23) && (m->csv[13] == 22) && (m->csv[0] == 1)) {
                                                                       ^
compose/src/logic/canvas.c:1405:80: note: Condition 'm->csv[0]==1' is always true
                    if ((m->csv[14] == 23) && (m->csv[13] == 22) && (m->csv[0] == 1)) {
                                                                               ^
compose/src/logic/canvas.c:1469:74: style: Condition 'm->csv[0]==1' is always true [knownConditionTrueFalse]
                if ((m->csv[8] == 15) && (m->csv[6] == 11) && (m->csv[0] == 1)) {
                                                                         ^
compose/src/logic/canvas.c:1468:72: note: Assuming that condition 'm->csv[0]==1' is not redundant
            if ((m->csv[14] == 23) && (m->csv[13] == 22) && (m->csv[0] == 1)) {
                                                                       ^
compose/src/logic/canvas.c:1469:74: note: Condition 'm->csv[0]==1' is always true
                if ((m->csv[8] == 15) && (m->csv[6] == 11) && (m->csv[0] == 1)) {
                                                                         ^
compose/src/logic/canvas.c:1471:37: style: Condition 'm->csv[14]==23' is always true [knownConditionTrueFalse]
                    if ((m->csv[14] == 23) && (m->csv[13] == 22) && (m->csv[0] == 1)) {
                                    ^
compose/src/logic/canvas.c:1468:29: note: Assuming that condition 'm->csv[14]==23' is not redundant
            if ((m->csv[14] == 23) && (m->csv[13] == 22) && (m->csv[0] == 1)) {
                            ^
compose/src/logic/canvas.c:1471:37: note: Condition 'm->csv[14]==23' is always true
                    if ((m->csv[14] == 23) && (m->csv[13] == 22) && (m->csv[0] == 1)) {
                                    ^
compose/src/logic/canvas.c:1471:59: style: Condition 'm->csv[13]==22' is always true [knownConditionTrueFalse]
                    if ((m->csv[14] == 23) && (m->csv[13] == 22) && (m->csv[0] == 1)) {
                                                          ^
compose/src/logic/canvas.c:1468:51: note: Assuming that condition 'm->csv[13]==22' is not redundant
            if ((m->csv[14] == 23) && (m->csv[13] == 22) && (m->csv[0] == 1)) {
                                                  ^
compose/src/logic/canvas.c:1471:59: note: Condition 'm->csv[13]==22' is always true
                    if ((m->csv[14] == 23) && (m->csv[13] == 22) && (m->csv[0] == 1)) {
                                                          ^
compose/src/logic/canvas.c:1471:80: style: Condition 'm->csv[0]==1' is always true [knownConditionTrueFalse]
                    if ((m->csv[14] == 23) && (m->csv[13] == 22) && (m->csv[0] == 1)) {
                                                                               ^
compose/src/logic/canvas.c:1468:72: note: Assuming that condition 'm->csv[0]==1' is not redundant
            if ((m->csv[14] == 23) && (m->csv[13] == 22) && (m->csv[0] == 1)) {
                                                                       ^
compose/src/logic/canvas.c:1471:80: note: Condition 'm->csv[0]==1' is always true
                    if ((m->csv[14] == 23) && (m->csv[13] == 22) && (m->csv[0] == 1)) {
                                                                               ^
compose/src/logic/canvas.c:1521:33: style: Condition 'm->csv[14]==23' is always true [knownConditionTrueFalse]
                if ((m->csv[14] == 23) && (m->csv[13] == 22) && (m->csv[0] == 1)) {
                                ^
compose/src/logic/canvas.c:1519:29: note: Assuming that condition 'm->csv[14]==23' is not redundant
            if ((m->csv[14] == 23) && (m->csv[13] == 22) && (m->csv[0] == 1)) {
                            ^
compose/src/logic/canvas.c:1521:33: note: Condition 'm->csv[14]==23' is always true
                if ((m->csv[14] == 23) && (m->csv[13] == 22) && (m->csv[0] == 1)) {
                                ^
compose/src/logic/canvas.c:1521:55: style: Condition 'm->csv[13]==22' is always true [knownConditionTrueFalse]
                if ((m->csv[14] == 23) && (m->csv[13] == 22) && (m->csv[0] == 1)) {
                                                      ^
compose/src/logic/canvas.c:1519:51: note: Assuming that condition 'm->csv[13]==22' is not redundant
            if ((m->csv[14] == 23) && (m->csv[13] == 22) && (m->csv[0] == 1)) {
                                                  ^
compose/src/logic/canvas.c:1521:55: note: Condition 'm->csv[13]==22' is always true
                if ((m->csv[14] == 23) && (m->csv[13] == 22) && (m->csv[0] == 1)) {
                                                      ^
compose/src/logic/canvas.c:1521:76: style: Condition 'm->csv[0]==1' is always true [knownConditionTrueFalse]
                if ((m->csv[14] == 23) && (m->csv[13] == 22) && (m->csv[0] == 1)) {
                                                                           ^
compose/src/logic/canvas.c:1519:72: note: Assuming that condition 'm->csv[0]==1' is not redundant
            if ((m->csv[14] == 23) && (m->csv[13] == 22) && (m->csv[0] == 1)) {
                                                                       ^
compose/src/logic/canvas.c:1521:76: note: Condition 'm->csv[0]==1' is always true
                if ((m->csv[14] == 23) && (m->csv[13] == 22) && (m->csv[0] == 1)) {
                                                                           ^
compose/src/logic/canvas.c:1551:33: style: Condition 'm->csv[14]==23' is always true [knownConditionTrueFalse]
                if ((m->csv[14] == 23) && (m->csv[13] == 22) && (m->csv[0] == 1)) {
                                ^
compose/src/logic/canvas.c:1549:29: note: Assuming that condition 'm->csv[14]==23' is not redundant
            if ((m->csv[14] == 23) && (m->csv[13] == 22) && (m->csv[0] == 1)) {
                            ^
compose/src/logic/canvas.c:1551:33: note: Condition 'm->csv[14]==23' is always true
                if ((m->csv[14] == 23) && (m->csv[13] == 22) && (m->csv[0] == 1)) {
                                ^
compose/src/logic/canvas.c:1551:55: style: Condition 'm->csv[13]==22' is always true [knownConditionTrueFalse]
                if ((m->csv[14] == 23) && (m->csv[13] == 22) && (m->csv[0] == 1)) {
                                                      ^
compose/src/logic/canvas.c:1549:51: note: Assuming that condition 'm->csv[13]==22' is not redundant
            if ((m->csv[14] == 23) && (m->csv[13] == 22) && (m->csv[0] == 1)) {
                                                  ^
compose/src/logic/canvas.c:1551:55: note: Condition 'm->csv[13]==22' is always true
                if ((m->csv[14] == 23) && (m->csv[13] == 22) && (m->csv[0] == 1)) {
                                                      ^
compose/src/logic/canvas.c:1551:76: style: Condition 'm->csv[0]==1' is always true [knownConditionTrueFalse]
                if ((m->csv[14] == 23) && (m->csv[13] == 22) && (m->csv[0] == 1)) {
                                                                           ^
compose/src/logic/canvas.c:1549:72: note: Assuming that condition 'm->csv[0]==1' is not redundant
            if ((m->csv[14] == 23) && (m->csv[13] == 22) && (m->csv[0] == 1)) {
                                                                       ^
compose/src/logic/canvas.c:1551:76: note: Condition 'm->csv[0]==1' is always true
                if ((m->csv[14] == 23) && (m->csv[13] == 22) && (m->csv[0] == 1)) {
                                                                           ^
compose/src/logic/canvas.c:1589:33: style: Condition 'm->csv[14]==23' is always true [knownConditionTrueFalse]
                if ((m->csv[14] == 23) && (m->csv[13] == 22) && (m->csv[0] == 1)) {
                                ^
compose/src/logic/canvas.c:1587:29: note: Assuming that condition 'm->csv[14]==23' is not redundant
            if ((m->csv[14] == 23) && (m->csv[13] == 22) && (m->csv[0] == 1)) {
                            ^
compose/src/logic/canvas.c:1589:33: note: Condition 'm->csv[14]==23' is always true
                if ((m->csv[14] == 23) && (m->csv[13] == 22) && (m->csv[0] == 1)) {
                                ^
compose/src/logic/canvas.c:1589:55: style: Condition 'm->csv[13]==22' is always true [knownConditionTrueFalse]
                if ((m->csv[14] == 23) && (m->csv[13] == 22) && (m->csv[0] == 1)) {
                                                      ^
compose/src/logic/canvas.c:1587:51: note: Assuming that condition 'm->csv[13]==22' is not redundant
            if ((m->csv[14] == 23) && (m->csv[13] == 22) && (m->csv[0] == 1)) {
                                                  ^
compose/src/logic/canvas.c:1589:55: note: Condition 'm->csv[13]==22' is always true
                if ((m->csv[14] == 23) && (m->csv[13] == 22) && (m->csv[0] == 1)) {
                                                      ^
compose/src/logic/canvas.c:1589:76: style: Condition 'm->csv[0]==1' is always true [knownConditionTrueFalse]
                if ((m->csv[14] == 23) && (m->csv[13] == 22) && (m->csv[0] == 1)) {
                                                                           ^
compose/src/logic/canvas.c:1587:72: note: Assuming that condition 'm->csv[0]==1' is not redundant
            if ((m->csv[14] == 23) && (m->csv[13] == 22) && (m->csv[0] == 1)) {
                                                                       ^
compose/src/logic/canvas.c:1589:76: note: Condition 'm->csv[0]==1' is always true
                if ((m->csv[14] == 23) && (m->csv[13] == 22) && (m->csv[0] == 1)) {
                                                                           ^
compose/src/logic/canvas.c:1721:99: style: Condition 'm->csv[13]==22' is always true [knownConditionTrueFalse]
                if ((m->csv[31] == 67) && (m->csv[15] == 65) && (m->csv[14] == 24) && (m->csv[13] == 22) && (m->csv[0] == 1)) {
                                                                                                  ^
compose/src/logic/canvas.c:1719:29: note: Assuming that condition 'm->csv[13]==22' is not redundant
            if ((m->csv[13] == 22) && (m->csv[0] == 1)) {
                            ^
compose/src/logic/canvas.c:1721:99: note: Condition 'm->csv[13]==22' is always true
                if ((m->csv[31] == 67) && (m->csv[15] == 65) && (m->csv[14] == 24) && (m->csv[13] == 22) && (m->csv[0] == 1)) {
                                                                                                  ^
compose/src/logic/canvas.c:1721:120: style: Condition 'm->csv[0]==1' is always true [knownConditionTrueFalse]
                if ((m->csv[31] == 67) && (m->csv[15] == 65) && (m->csv[14] == 24) && (m->csv[13] == 22) && (m->csv[0] == 1)) {
                                                                                                                       ^
compose/src/logic/canvas.c:1719:50: note: Assuming that condition 'm->csv[0]==1' is not redundant
            if ((m->csv[13] == 22) && (m->csv[0] == 1)) {
                                                 ^
compose/src/logic/canvas.c:1721:120: note: Condition 'm->csv[0]==1' is always true
                if ((m->csv[31] == 67) && (m->csv[15] == 65) && (m->csv[14] == 24) && (m->csv[13] == 22) && (m->csv[0] == 1)) {
                                                                                                                       ^
compose/src/logic/canvas.c:1776:33: style: Condition 'm->wsv[13]==22' is always true [knownConditionTrueFalse]
                if ((m->wsv[13] == 22)) {
                                ^
compose/src/logic/canvas.c:1775:30: note: Assignment 'm->wsv[13]=22', assigned value is 22
                m->wsv[13] = 22; // Main = Tool Mode
                             ^
compose/src/logic/canvas.c:1776:33: note: Condition 'm->wsv[13]==22' is always true
                if ((m->wsv[13] == 22)) {
                                ^
compose/src/logic/canvas.c:1889:33: style: Condition 'm->csv[14]==23' is always true [knownConditionTrueFalse]
                if ((m->csv[14] == 23) && (m->csv[13] == 22) && (m->csv[0] == 1)) {
                                ^
compose/src/logic/canvas.c:1887:29: note: Assuming that condition 'm->csv[14]==23' is not redundant
            if ((m->csv[14] == 23) && (m->csv[13] == 22) && (m->csv[0] == 1)) {
                            ^
compose/src/logic/canvas.c:1889:33: note: Condition 'm->csv[14]==23' is always true
                if ((m->csv[14] == 23) && (m->csv[13] == 22) && (m->csv[0] == 1)) {
                                ^
compose/src/logic/canvas.c:1889:55: style: Condition 'm->csv[13]==22' is always true [knownConditionTrueFalse]
                if ((m->csv[14] == 23) && (m->csv[13] == 22) && (m->csv[0] == 1)) {
                                                      ^
compose/src/logic/canvas.c:1887:51: note: Assuming that condition 'm->csv[13]==22' is not redundant
            if ((m->csv[14] == 23) && (m->csv[13] == 22) && (m->csv[0] == 1)) {
                                                  ^
compose/src/logic/canvas.c:1889:55: note: Condition 'm->csv[13]==22' is always true
                if ((m->csv[14] == 23) && (m->csv[13] == 22) && (m->csv[0] == 1)) {
                                                      ^
compose/src/logic/canvas.c:1889:76: style: Condition 'm->csv[0]==1' is always true [knownConditionTrueFalse]
                if ((m->csv[14] == 23) && (m->csv[13] == 22) && (m->csv[0] == 1)) {
                                                                           ^
compose/src/logic/canvas.c:1887:72: note: Assuming that condition 'm->csv[0]==1' is not redundant
            if ((m->csv[14] == 23) && (m->csv[13] == 22) && (m->csv[0] == 1)) {
                                                                       ^
compose/src/logic/canvas.c:1889:76: note: Condition 'm->csv[0]==1' is always true
                if ((m->csv[14] == 23) && (m->csv[13] == 22) && (m->csv[0] == 1)) {
                                                                           ^
compose/src/logic/canvas.c:1983:74: style: Condition 'm->csv[0]==1' is always true [knownConditionTrueFalse]
                if ((m->csv[8] == 15) && (m->csv[6] == 11) && (m->csv[0] == 1)) {
                                                                         ^
compose/src/logic/canvas.c:1982:68: note: Assuming that condition 'm->csv[0]==1' is not redundant
            if ((m->csv[2] == 4) && (m->csv[1] == 3) && (m->csv[0] == 1)) {
                                                                   ^
compose/src/logic/canvas.c:1983:74: note: Condition 'm->csv[0]==1' is always true
                if ((m->csv[8] == 15) && (m->csv[6] == 11) && (m->csv[0] == 1)) {
                                                                         ^
compose/src/logic/canvas.c:1984:80: style: Condition 'm->csv[0]==1' is always true [knownConditionTrueFalse]
                    if ((m->csv[14] == 23) && (m->csv[13] == 22) && (m->csv[0] == 1)) {
                                                                               ^
compose/src/logic/canvas.c:1982:68: note: Assuming that condition 'm->csv[0]==1' is not redundant
            if ((m->csv[2] == 4) && (m->csv[1] == 3) && (m->csv[0] == 1)) {
                                                                   ^
compose/src/logic/canvas.c:1984:80: note: Condition 'm->csv[0]==1' is always true
                    if ((m->csv[14] == 23) && (m->csv[13] == 22) && (m->csv[0] == 1)) {
                                                                               ^
compose/src/logic/canvas.c:2001:74: style: Condition 'm->csv[0]==1' is always true [knownConditionTrueFalse]
                if ((m->csv[8] == 15) && (m->csv[6] == 11) && (m->csv[0] == 1)) {
                                                                         ^
compose/src/logic/canvas.c:2000:68: note: Assuming that condition 'm->csv[0]==1' is not redundant
            if ((m->csv[4] == 8) && (m->csv[1] == 7) && (m->csv[0] == 1)) {
                                                                   ^
compose/src/logic/canvas.c:2001:74: note: Condition 'm->csv[0]==1' is always true
                if ((m->csv[8] == 15) && (m->csv[6] == 11) && (m->csv[0] == 1)) {
                                                                         ^
compose/src/logic/canvas.c:2002:80: style: Condition 'm->csv[0]==1' is always true [knownConditionTrueFalse]
                    if ((m->csv[14] == 23) && (m->csv[13] == 22) && (m->csv[0] == 1)) {
                                                                               ^
compose/src/logic/canvas.c:2000:68: note: Assuming that condition 'm->csv[0]==1' is not redundant
            if ((m->csv[4] == 8) && (m->csv[1] == 7) && (m->csv[0] == 1)) {
                                                                   ^
compose/src/logic/canvas.c:2002:80: note: Condition 'm->csv[0]==1' is always true
                    if ((m->csv[14] == 23) && (m->csv[13] == 22) && (m->csv[0] == 1)) {
                                                                               ^
compose/src/logic/canvas.c:2068:74: style: Condition 'm->csv[0]==1' is always true [knownConditionTrueFalse]
                if ((m->csv[8] == 15) && (m->csv[6] == 11) && (m->csv[0] == 1)) {
                                                                         ^
compose/src/logic/canvas.c:2067:48: note: Assuming that condition 'm->csv[0]==1' is not redundant
            if ((m->csv[1] == 2) && (m->csv[0] == 1)) {
                                               ^
compose/src/logic/canvas.c:2068:74: note: Condition 'm->csv[0]==1' is always true
                if ((m->csv[8] == 15) && (m->csv[6] == 11) && (m->csv[0] == 1)) {
                                                                         ^
compose/src/logic/canvas.c:2069:80: style: Condition 'm->csv[0]==1' is always true [knownConditionTrueFalse]
                    if ((m->csv[14] == 23) && (m->csv[13] == 22) && (m->csv[0] == 1)) {
                                                                               ^
compose/src/logic/canvas.c:2067:48: note: Assuming that condition 'm->csv[0]==1' is not redundant
            if ((m->csv[1] == 2) && (m->csv[0] == 1)) {
                                               ^
compose/src/logic/canvas.c:2069:80: note: Condition 'm->csv[0]==1' is always true
                    if ((m->csv[14] == 23) && (m->csv[13] == 22) && (m->csv[0] == 1)) {
                                                                               ^
compose/src/logic/canvas.c:2089:74: style: Condition 'm->csv[0]==1' is always true [knownConditionTrueFalse]
                if ((m->csv[8] == 15) && (m->csv[6] == 11) && (m->csv[0] == 1)) {
                                                                         ^
compose/src/logic/canvas.c:2088:48: note: Assuming that condition 'm->csv[0]==1' is not redundant
            if ((m->csv[1] == 3) && (m->csv[0] == 1)) {
                                               ^
compose/src/logic/canvas.c:2089:74: note: Condition 'm->csv[0]==1' is always true
                if ((m->csv[8] == 15) && (m->csv[6] == 11) && (m->csv[0] == 1)) {
                                                                         ^
compose/src/logic/canvas.c:2090:80: style: Condition 'm->csv[0]==1' is always true [knownConditionTrueFalse]
                    if ((m->csv[14] == 23) && (m->csv[13] == 22) && (m->csv[0] == 1)) {
                                                                               ^
compose/src/logic/canvas.c:2088:48: note: Assuming that condition 'm->csv[0]==1' is not redundant
            if ((m->csv[1] == 3) && (m->csv[0] == 1)) {
                                               ^
compose/src/logic/canvas.c:2090:80: note: Condition 'm->csv[0]==1' is always true
                    if ((m->csv[14] == 23) && (m->csv[13] == 22) && (m->csv[0] == 1)) {
                                                                               ^
compose/src/logic/canvas.c:2116:74: style: Condition 'm->csv[0]==1' is always true [knownConditionTrueFalse]
                if ((m->csv[8] == 15) && (m->csv[6] == 11) && (m->csv[0] == 1)) {
                                                                         ^
compose/src/logic/canvas.c:2115:48: note: Assuming that condition 'm->csv[0]==1' is not redundant
            if ((m->csv[1] == 7) && (m->csv[0] == 1)) {
                                               ^
compose/src/logic/canvas.c:2116:74: note: Condition 'm->csv[0]==1' is always true
                if ((m->csv[8] == 15) && (m->csv[6] == 11) && (m->csv[0] == 1)) {
                                                                         ^
compose/src/logic/canvas.c:2117:80: style: Condition 'm->csv[0]==1' is always true [knownConditionTrueFalse]
                    if ((m->csv[14] == 23) && (m->csv[13] == 22) && (m->csv[0] == 1)) {
                                                                               ^
compose/src/logic/canvas.c:2115:48: note: Assuming that condition 'm->csv[0]==1' is not redundant
            if ((m->csv[1] == 7) && (m->csv[0] == 1)) {
                                               ^
compose/src/logic/canvas.c:2117:80: note: Condition 'm->csv[0]==1' is always true
                    if ((m->csv[14] == 23) && (m->csv[13] == 22) && (m->csv[0] == 1)) {
                                                                               ^
compose/src/logic/canvas.c:2146:33: style: Condition 'm->csv[14]==23' is always true [knownConditionTrueFalse]
                if ((m->csv[14] == 23) && (m->csv[13] == 22) && (m->csv[0] == 1)) {
                                ^
compose/src/logic/canvas.c:2144:29: note: Assuming that condition 'm->csv[14]==23' is not redundant
            if ((m->csv[14] == 23) && (m->csv[13] == 22) && (m->csv[0] == 1)) {
                            ^
compose/src/logic/canvas.c:2146:33: note: Condition 'm->csv[14]==23' is always true
                if ((m->csv[14] == 23) && (m->csv[13] == 22) && (m->csv[0] == 1)) {
                                ^
compose/src/logic/canvas.c:2146:55: style: Condition 'm->csv[13]==22' is always true [knownConditionTrueFalse]
                if ((m->csv[14] == 23) && (m->csv[13] == 22) && (m->csv[0] == 1)) {
                                                      ^
compose/src/logic/canvas.c:2144:51: note: Assuming that condition 'm->csv[13]==22' is not redundant
            if ((m->csv[14] == 23) && (m->csv[13] == 22) && (m->csv[0] == 1)) {
                                                  ^
compose/src/logic/canvas.c:2146:55: note: Condition 'm->csv[13]==22' is always true
                if ((m->csv[14] == 23) && (m->csv[13] == 22) && (m->csv[0] == 1)) {
                                                      ^
compose/src/logic/canvas.c:2146:76: style: Condition 'm->csv[0]==1' is always true [knownConditionTrueFalse]
                if ((m->csv[14] == 23) && (m->csv[13] == 22) && (m->csv[0] == 1)) {
                                                                           ^
compose/src/logic/canvas.c:2144:72: note: Assuming that condition 'm->csv[0]==1' is not redundant
            if ((m->csv[14] == 23) && (m->csv[13] == 22) && (m->csv[0] == 1)) {
                                                                       ^
compose/src/logic/canvas.c:2146:76: note: Condition 'm->csv[0]==1' is always true
                if ((m->csv[14] == 23) && (m->csv[13] == 22) && (m->csv[0] == 1)) {
                                                                           ^
compose/src/logic/canvas.c:2159:74: style: Condition 'm->csv[0]==1' is always true [knownConditionTrueFalse]
                if ((m->csv[8] == 15) && (m->csv[6] == 11) && (m->csv[0] == 1)) {
                                                                         ^
compose/src/logic/canvas.c:2158:72: note: Assuming that condition 'm->csv[0]==1' is not redundant
            if ((m->csv[14] == 23) && (m->csv[13] == 22) && (m->csv[0] == 1)) {
                                                                       ^
compose/src/logic/canvas.c:2159:74: note: Condition 'm->csv[0]==1' is always true
                if ((m->csv[8] == 15) && (m->csv[6] == 11) && (m->csv[0] == 1)) {
                                                                         ^
compose/src/logic/canvas.c:2161:37: style: Condition 'm->csv[14]==23' is always true [knownConditionTrueFalse]
                    if ((m->csv[14] == 23) && (m->csv[13] == 22) && (m->csv[0] == 1)) {
                                    ^
compose/src/logic/canvas.c:2158:29: note: Assuming that condition 'm->csv[14]==23' is not redundant
            if ((m->csv[14] == 23) && (m->csv[13] == 22) && (m->csv[0] == 1)) {
                            ^
compose/src/logic/canvas.c:2161:37: note: Condition 'm->csv[14]==23' is always true
                    if ((m->csv[14] == 23) && (m->csv[13] == 22) && (m->csv[0] == 1)) {
                                    ^
compose/src/logic/canvas.c:2161:59: style: Condition 'm->csv[13]==22' is always true [knownConditionTrueFalse]
                    if ((m->csv[14] == 23) && (m->csv[13] == 22) && (m->csv[0] == 1)) {
                                                          ^
compose/src/logic/canvas.c:2158:51: note: Assuming that condition 'm->csv[13]==22' is not redundant
            if ((m->csv[14] == 23) && (m->csv[13] == 22) && (m->csv[0] == 1)) {
                                                  ^
compose/src/logic/canvas.c:2161:59: note: Condition 'm->csv[13]==22' is always true
                    if ((m->csv[14] == 23) && (m->csv[13] == 22) && (m->csv[0] == 1)) {
                                                          ^
compose/src/logic/canvas.c:2161:80: style: Condition 'm->csv[0]==1' is always true [knownConditionTrueFalse]
                    if ((m->csv[14] == 23) && (m->csv[13] == 22) && (m->csv[0] == 1)) {
                                                                               ^
compose/src/logic/canvas.c:2158:72: note: Assuming that condition 'm->csv[0]==1' is not redundant
            if ((m->csv[14] == 23) && (m->csv[13] == 22) && (m->csv[0] == 1)) {
                                                                       ^
compose/src/logic/canvas.c:2161:80: note: Condition 'm->csv[0]==1' is always true
                    if ((m->csv[14] == 23) && (m->csv[13] == 22) && (m->csv[0] == 1)) {
                                                                               ^
compose/src/logic/canvas.c:2173:74: style: Condition 'm->csv[0]==1' is always true [knownConditionTrueFalse]
                if ((m->csv[8] == 14) && (m->csv[6] == 11) && (m->csv[0] == 1)) {
                                                                         ^
compose/src/logic/canvas.c:2172:72: note: Assuming that condition 'm->csv[0]==1' is not redundant
            if ((m->csv[14] == 23) && (m->csv[13] == 22) && (m->csv[0] == 1)) {
                                                                       ^
compose/src/logic/canvas.c:2173:74: note: Condition 'm->csv[0]==1' is always true
                if ((m->csv[8] == 14) && (m->csv[6] == 11) && (m->csv[0] == 1)) {
                                                                         ^
compose/src/logic/canvas.c:2175:37: style: Condition 'm->csv[14]==23' is always true [knownConditionTrueFalse]
                    if ((m->csv[14] == 23) && (m->csv[13] == 22) && (m->csv[0] == 1)) {
                                    ^
compose/src/logic/canvas.c:2172:29: note: Assuming that condition 'm->csv[14]==23' is not redundant
            if ((m->csv[14] == 23) && (m->csv[13] == 22) && (m->csv[0] == 1)) {
                            ^
compose/src/logic/canvas.c:2175:37: note: Condition 'm->csv[14]==23' is always true
                    if ((m->csv[14] == 23) && (m->csv[13] == 22) && (m->csv[0] == 1)) {
                                    ^
compose/src/logic/canvas.c:2175:59: style: Condition 'm->csv[13]==22' is always true [knownConditionTrueFalse]
                    if ((m->csv[14] == 23) && (m->csv[13] == 22) && (m->csv[0] == 1)) {
                                                          ^
compose/src/logic/canvas.c:2172:51: note: Assuming that condition 'm->csv[13]==22' is not redundant
            if ((m->csv[14] == 23) && (m->csv[13] == 22) && (m->csv[0] == 1)) {
                                                  ^
compose/src/logic/canvas.c:2175:59: note: Condition 'm->csv[13]==22' is always true
                    if ((m->csv[14] == 23) && (m->csv[13] == 22) && (m->csv[0] == 1)) {
                                                          ^
compose/src/logic/canvas.c:2175:80: style: Condition 'm->csv[0]==1' is always true [knownConditionTrueFalse]
                    if ((m->csv[14] == 23) && (m->csv[13] == 22) && (m->csv[0] == 1)) {
                                                                               ^
compose/src/logic/canvas.c:2172:72: note: Assuming that condition 'm->csv[0]==1' is not redundant
            if ((m->csv[14] == 23) && (m->csv[13] == 22) && (m->csv[0] == 1)) {
                                                                       ^
compose/src/logic/canvas.c:2175:80: note: Condition 'm->csv[0]==1' is always true
                    if ((m->csv[14] == 23) && (m->csv[13] == 22) && (m->csv[0] == 1)) {
                                                                               ^
compose/src/logic/canvas.c:2192:33: style: Condition 'm->csv[14]==23' is always true [knownConditionTrueFalse]
                if ((m->csv[14] == 23) && (m->csv[13] == 22) && (m->csv[0] == 1)) {
                                ^
compose/src/logic/canvas.c:2190:29: note: Assuming that condition 'm->csv[14]==23' is not redundant
            if ((m->csv[14] == 23) && (m->csv[13] == 22) && (m->csv[0] == 1)) {
                            ^
compose/src/logic/canvas.c:2192:33: note: Condition 'm->csv[14]==23' is always true
                if ((m->csv[14] == 23) && (m->csv[13] == 22) && (m->csv[0] == 1)) {
                                ^
compose/src/logic/canvas.c:2192:55: style: Condition 'm->csv[13]==22' is always true [knownConditionTrueFalse]
                if ((m->csv[14] == 23) && (m->csv[13] == 22) && (m->csv[0] == 1)) {
                                                      ^
compose/src/logic/canvas.c:2190:51: note: Assuming that condition 'm->csv[13]==22' is not redundant
            if ((m->csv[14] == 23) && (m->csv[13] == 22) && (m->csv[0] == 1)) {
                                                  ^
compose/src/logic/canvas.c:2192:55: note: Condition 'm->csv[13]==22' is always true
                if ((m->csv[14] == 23) && (m->csv[13] == 22) && (m->csv[0] == 1)) {
                                                      ^
compose/src/logic/canvas.c:2192:76: style: Condition 'm->csv[0]==1' is always true [knownConditionTrueFalse]
                if ((m->csv[14] == 23) && (m->csv[13] == 22) && (m->csv[0] == 1)) {
                                                                           ^
compose/src/logic/canvas.c:2190:72: note: Assuming that condition 'm->csv[0]==1' is not redundant
            if ((m->csv[14] == 23) && (m->csv[13] == 22) && (m->csv[0] == 1)) {
                                                                       ^
compose/src/logic/canvas.c:2192:76: note: Condition 'm->csv[0]==1' is always true
                if ((m->csv[14] == 23) && (m->csv[13] == 22) && (m->csv[0] == 1)) {
                                                                           ^
compose/src/logic/canvas.c:2206:33: style: Condition 'm->csv[14]==23' is always true [knownConditionTrueFalse]
                if ((m->csv[14] == 23) && (m->csv[13] == 22) && (m->csv[0] == 1)) {
                                ^
compose/src/logic/canvas.c:2204:29: note: Assuming that condition 'm->csv[14]==23' is not redundant
            if ((m->csv[14] == 23) && (m->csv[13] == 22) && (m->csv[0] == 1)) {
                            ^
compose/src/logic/canvas.c:2206:33: note: Condition 'm->csv[14]==23' is always true
                if ((m->csv[14] == 23) && (m->csv[13] == 22) && (m->csv[0] == 1)) {
                                ^
compose/src/logic/canvas.c:2206:55: style: Condition 'm->csv[13]==22' is always true [knownConditionTrueFalse]
                if ((m->csv[14] == 23) && (m->csv[13] == 22) && (m->csv[0] == 1)) {
                                                      ^
compose/src/logic/canvas.c:2204:51: note: Assuming that condition 'm->csv[13]==22' is not redundant
            if ((m->csv[14] == 23) && (m->csv[13] == 22) && (m->csv[0] == 1)) {
                                                  ^
compose/src/logic/canvas.c:2206:55: note: Condition 'm->csv[13]==22' is always true
                if ((m->csv[14] == 23) && (m->csv[13] == 22) && (m->csv[0] == 1)) {
                                                      ^
compose/src/logic/canvas.c:2206:76: style: Condition 'm->csv[0]==1' is always true [knownConditionTrueFalse]
                if ((m->csv[14] == 23) && (m->csv[13] == 22) && (m->csv[0] == 1)) {
                                                                           ^
compose/src/logic/canvas.c:2204:72: note: Assuming that condition 'm->csv[0]==1' is not redundant
            if ((m->csv[14] == 23) && (m->csv[13] == 22) && (m->csv[0] == 1)) {
                                                                       ^
compose/src/logic/canvas.c:2206:76: note: Condition 'm->csv[0]==1' is always true
                if ((m->csv[14] == 23) && (m->csv[13] == 22) && (m->csv[0] == 1)) {
                                                                           ^
compose/src/logic/canvas.c:2501:37: style: Condition 'm->wsv[38]==112' is always true [knownConditionTrueFalse]
                    if ((m->wsv[38] == 112)) {
                                    ^
compose/src/logic/canvas.c:2500:34: note: Assignment 'm->wsv[38]=112', assigned value is 112
                    m->wsv[38] = 112; // Object Selection = State Selection
                                 ^
compose/src/logic/canvas.c:2501:37: note: Condition 'm->wsv[38]==112' is always true
                    if ((m->wsv[38] == 112)) {
                                    ^
compose/src/logic/canvas.c:2518:37: style: Condition 'm->wsv[38]==106' is always true [knownConditionTrueFalse]
                    if ((m->wsv[38] == 106)) {
                                    ^
compose/src/logic/canvas.c:2517:34: note: Assignment 'm->wsv[38]=106', assigned value is 106
                    m->wsv[38] = 106; // Object Selection = Region Selection
                                 ^
compose/src/logic/canvas.c:2518:37: note: Condition 'm->wsv[38]==106' is always true
                    if ((m->wsv[38] == 106)) {
                                    ^
compose/src/logic/canvas.c:2532:37: style: Condition 'm->wsv[38]==91' is always true [knownConditionTrueFalse]
                    if ((m->wsv[38] == 91)) {
                                    ^
compose/src/logic/canvas.c:2531:34: note: Assignment 'm->wsv[38]=91', assigned value is 91
                    m->wsv[38] = 91; // Object Selection = Transition Selection
                                 ^
compose/src/logic/canvas.c:2532:37: note: Condition 'm->wsv[38]==91' is always true
                    if ((m->wsv[38] == 91)) {
                                    ^
compose/src/logic/canvas.c:2542:74: style: Condition 'm->csv[0]==1' is always true [knownConditionTrueFalse]
                if ((m->csv[7] == 12) && (m->csv[6] == 11) && (m->csv[0] == 1)) {
                                                                         ^
compose/src/logic/canvas.c:2541:73: note: Assuming that condition 'm->csv[0]==1' is not redundant
            if ((m->csv[38] == 125) && (m->csv[13] == 90) && (m->csv[0] == 1)) {
                                                                        ^
compose/src/logic/canvas.c:2542:74: note: Condition 'm->csv[0]==1' is always true
                if ((m->csv[7] == 12) && (m->csv[6] == 11) && (m->csv[0] == 1)) {
                                                                         ^
compose/src/logic/canvas.c:2559:74: style: Condition 'm->csv[0]==1' is always true [knownConditionTrueFalse]
                if ((m->csv[7] == 12) && (m->csv[6] == 11) && (m->csv[0] == 1)) {
                                                                         ^
compose/src/logic/canvas.c:2558:73: note: Assuming that condition 'm->csv[0]==1' is not redundant
            if ((m->csv[38] == 125) && (m->csv[13] == 90) && (m->csv[0] == 1)) {
                                                                        ^
compose/src/logic/canvas.c:2559:74: note: Condition 'm->csv[0]==1' is always true
                if ((m->csv[7] == 12) && (m->csv[6] == 11) && (m->csv[0] == 1)) {
                                                                         ^
compose/src/logic/canvas.c:2571:74: style: Condition 'm->csv[0]==1' is always true [knownConditionTrueFalse]
                if ((m->csv[7] == 13) && (m->csv[6] == 11) && (m->csv[0] == 1)) {
                                                                         ^
compose/src/logic/canvas.c:2570:73: note: Assuming that condition 'm->csv[0]==1' is not redundant
            if ((m->csv[38] == 125) && (m->csv[13] == 90) && (m->csv[0] == 1)) {
                                                                        ^
compose/src/logic/canvas.c:2571:74: note: Condition 'm->csv[0]==1' is always true
                if ((m->csv[7] == 13) && (m->csv[6] == 11) && (m->csv[0] == 1)) {
                                                                         ^
compose/src/logic/canvas.c:2582:74: style: Condition 'm->csv[0]==1' is always true [knownConditionTrueFalse]
                if ((m->csv[7] == 12) && (m->csv[6] == 11) && (m->csv[0] == 1)) {
                                                                         ^
compose/src/logic/canvas.c:2581:73: note: Assuming that condition 'm->csv[0]==1' is not redundant
            if ((m->csv[38] == 125) && (m->csv[13] == 90) && (m->csv[0] == 1)) {
                                                                        ^
compose/src/logic/canvas.c:2582:74: note: Condition 'm->csv[0]==1' is always true
                if ((m->csv[7] == 12) && (m->csv[6] == 11) && (m->csv[0] == 1)) {
                                                                         ^
compose/src/logic/canvas.c:2619:81: style: Condition 'm->csv[14]==24' is always true [knownConditionTrueFalse]
                    if ((m->csv[31] == 67) && (m->csv[15] == 65) && (m->csv[14] == 24) && (m->csv[13] == 22) && (m->csv[0] == 1)) {
                                                                                ^
compose/src/logic/canvas.c:2617:33: note: Assuming that condition 'm->csv[14]==24' is not redundant
                if ((m->csv[14] == 24) && (m->csv[13] == 22) && (m->csv[0] == 1)) {
                                ^
compose/src/logic/canvas.c:2619:81: note: Condition 'm->csv[14]==24' is always true
                    if ((m->csv[31] == 67) && (m->csv[15] == 65) && (m->csv[14] == 24) && (m->csv[13] == 22) && (m->csv[0] == 1)) {
                                                                                ^
compose/src/logic/canvas.c:2619:103: style: Condition 'm->csv[13]==22' is always true [knownConditionTrueFalse]
                    if ((m->csv[31] == 67) && (m->csv[15] == 65) && (m->csv[14] == 24) && (m->csv[13] == 22) && (m->csv[0] == 1)) {
                                                                                                      ^
compose/src/logic/canvas.c:2617:55: note: Assuming that condition 'm->csv[13]==22' is not redundant
                if ((m->csv[14] == 24) && (m->csv[13] == 22) && (m->csv[0] == 1)) {
                                                      ^
compose/src/logic/canvas.c:2619:103: note: Condition 'm->csv[13]==22' is always true
                    if ((m->csv[31] == 67) && (m->csv[15] == 65) && (m->csv[14] == 24) && (m->csv[13] == 22) && (m->csv[0] == 1)) {
                                                                                                      ^
compose/src/logic/canvas.c:2619:124: style: Condition 'm->csv[0]==1' is always true [knownConditionTrueFalse]
                    if ((m->csv[31] == 67) && (m->csv[15] == 65) && (m->csv[14] == 24) && (m->csv[13] == 22) && (m->csv[0] == 1)) {
                                                                                                                           ^
compose/src/logic/canvas.c:2617:76: note: Assuming that condition 'm->csv[0]==1' is not redundant
                if ((m->csv[14] == 24) && (m->csv[13] == 22) && (m->csv[0] == 1)) {
                                                                           ^
compose/src/logic/canvas.c:2619:124: note: Condition 'm->csv[0]==1' is always true
                    if ((m->csv[31] == 67) && (m->csv[15] == 65) && (m->csv[14] == 24) && (m->csv[13] == 22) && (m->csv[0] == 1)) {
                                                                                                                           ^
compose/src/logic/canvas.c:2680:37: style: Condition 'm->csv[14]==78' is always true [knownConditionTrueFalse]
                    if ((m->csv[14] == 78) && (m->csv[13] == 22) && (m->csv[0] == 1)) {
                                    ^
compose/src/logic/canvas.c:2678:33: note: Assuming that condition 'm->csv[14]==78' is not redundant
                if ((m->csv[14] == 78) && (m->csv[13] == 22) && (m->csv[0] == 1)) {
                                ^
compose/src/logic/canvas.c:2680:37: note: Condition 'm->csv[14]==78' is always true
                    if ((m->csv[14] == 78) && (m->csv[13] == 22) && (m->csv[0] == 1)) {
                                    ^
compose/src/logic/canvas.c:2680:59: style: Condition 'm->csv[13]==22' is always true [knownConditionTrueFalse]
                    if ((m->csv[14] == 78) && (m->csv[13] == 22) && (m->csv[0] == 1)) {
                                                          ^
compose/src/logic/canvas.c:2678:55: note: Assuming that condition 'm->csv[13]==22' is not redundant
                if ((m->csv[14] == 78) && (m->csv[13] == 22) && (m->csv[0] == 1)) {
                                                      ^
compose/src/logic/canvas.c:2680:59: note: Condition 'm->csv[13]==22' is always true
                    if ((m->csv[14] == 78) && (m->csv[13] == 22) && (m->csv[0] == 1)) {
                                                          ^
compose/src/logic/canvas.c:2680:80: style: Condition 'm->csv[0]==1' is always true [knownConditionTrueFalse]
                    if ((m->csv[14] == 78) && (m->csv[13] == 22) && (m->csv[0] == 1)) {
                                                                               ^
compose/src/logic/canvas.c:2678:76: note: Assuming that condition 'm->csv[0]==1' is not redundant
                if ((m->csv[14] == 78) && (m->csv[13] == 22) && (m->csv[0] == 1)) {
                                                                           ^
compose/src/logic/canvas.c:2680:80: note: Condition 'm->csv[0]==1' is always true
                    if ((m->csv[14] == 78) && (m->csv[13] == 22) && (m->csv[0] == 1)) {
                                                                               ^
compose/src/logic/canvas.c:2696:33: style: Condition 'process_auto_transition==1' is always false [knownConditionTrueFalse]
    if (process_auto_transition == 1) {
                                ^
compose/src/logic/canvas.c:2605:33: note: Assuming condition 'process_auto_transition==1' is false
    if (process_auto_transition == 1) {
                                ^
compose/src/logic/canvas.c:2696:33: note: Condition 'process_auto_transition==1' is always false
    if (process_auto_transition == 1) {
                                ^
compose/src/logic/canvas.c:168:49: style: Variable 'process_auto_transition' is reassigned a value before the old one has been used. [redundantAssignment]
                        process_auto_transition = 1;
                                                ^
compose/src/logic/canvas.c:167:49: note: process_auto_transition is assigned
                        process_auto_transition = 1;
                                                ^
compose/src/logic/canvas.c:168:49: note: process_auto_transition is overwritten
                        process_auto_transition = 1;
                                                ^
compose/src/logic/canvas.c:169:49: style: Variable 'process_auto_transition' is reassigned a value before the old one has been used. [redundantAssignment]
                        process_auto_transition = 1;
                                                ^
compose/src/logic/canvas.c:168:49: note: process_auto_transition is assigned
                        process_auto_transition = 1;
                                                ^
compose/src/logic/canvas.c:169:49: note: process_auto_transition is overwritten
                        process_auto_transition = 1;
                                                ^
compose/src/logic/canvas.c:170:49: style: Variable 'process_auto_transition' is reassigned a value before the old one has been used. [redundantAssignment]
                        process_auto_transition = 1;
                                                ^
compose/src/logic/canvas.c:169:49: note: process_auto_transition is assigned
                        process_auto_transition = 1;
                                                ^
compose/src/logic/canvas.c:170:49: note: process_auto_transition is overwritten
                        process_auto_transition = 1;
                                                ^
compose/src/logic/canvas.c:175:49: style: Variable 'process_auto_transition' is reassigned a value before the old one has been used. [redundantAssignment]
                        process_auto_transition = 1;
                                                ^
compose/src/logic/canvas.c:174:49: note: process_auto_transition is assigned
                        process_auto_transition = 1;
                                                ^
compose/src/logic/canvas.c:175:49: note: process_auto_transition is overwritten
                        process_auto_transition = 1;
                                                ^
compose/src/logic/canvas.c:176:49: style: Variable 'process_auto_transition' is reassigned a value before the old one has been used. [redundantAssignment]
                        process_auto_transition = 1;
                                                ^
compose/src/logic/canvas.c:175:49: note: process_auto_transition is assigned
                        process_auto_transition = 1;
                                                ^
compose/src/logic/canvas.c:176:49: note: process_auto_transition is overwritten
                        process_auto_transition = 1;
                                                ^
compose/src/logic/canvas.c:188:49: style: Variable 'process_auto_transition' is reassigned a value before the old one has been used. [redundantAssignment]
                        process_auto_transition = 1;
                                                ^
compose/src/logic/canvas.c:187:49: note: process_auto_transition is assigned
                        process_auto_transition = 1;
                                                ^
compose/src/logic/canvas.c:188:49: note: process_auto_transition is overwritten
                        process_auto_transition = 1;
                                                ^
compose/src/logic/canvas.c:447:49: style: Variable 'process_auto_transition' is reassigned a value before the old one has been used. [redundantAssignment]
                        process_auto_transition = 1;
                                                ^
compose/src/logic/canvas.c:446:49: note: process_auto_transition is assigned
                        process_auto_transition = 1;
                                                ^
compose/src/logic/canvas.c:447:49: note: process_auto_transition is overwritten
                        process_auto_transition = 1;
                                                ^
compose/src/logic/canvas.c:452:49: style: Variable 'process_auto_transition' is reassigned a value before the old one has been used. [redundantAssignment]
                        process_auto_transition = 1;
                                                ^
compose/src/logic/canvas.c:451:49: note: process_auto_transition is assigned
                        process_auto_transition = 1;
                                                ^
compose/src/logic/canvas.c:452:49: note: process_auto_transition is overwritten
                        process_auto_transition = 1;
                                                ^
compose/src/logic/canvas.c:572:49: style: Variable 'process_auto_transition' is reassigned a value before the old one has been used. [redundantAssignment]
                        process_auto_transition = 1;
                                                ^
compose/src/logic/canvas.c:571:49: note: process_auto_transition is assigned
                        process_auto_transition = 1;
                                                ^
compose/src/logic/canvas.c:572:49: note: process_auto_transition is overwritten
                        process_auto_transition = 1;
                                                ^
compose/src/logic/canvas.c:577:49: style: Variable 'process_auto_transition' is reassigned a value before the old one has been used. [redundantAssignment]
                        process_auto_transition = 1;
                                                ^
compose/src/logic/canvas.c:576:49: note: process_auto_transition is assigned
                        process_auto_transition = 1;
                                                ^
compose/src/logic/canvas.c:577:49: note: process_auto_transition is overwritten
                        process_auto_transition = 1;
                                                ^
compose/src/logic/canvas.c:1206:45: style: Variable 'process_auto_transition' is reassigned a value before the old one has been used. [redundantAssignment]
                    process_auto_transition = 1;
                                            ^
compose/src/logic/canvas.c:1205:45: note: process_auto_transition is assigned
                    process_auto_transition = 1;
                                            ^
compose/src/logic/canvas.c:1206:45: note: process_auto_transition is overwritten
                    process_auto_transition = 1;
                                            ^
compose/src/logic/canvas.c:1211:45: style: Variable 'process_auto_transition' is reassigned a value before the old one has been used. [redundantAssignment]
                    process_auto_transition = 1;
                                            ^
compose/src/logic/canvas.c:1210:45: note: process_auto_transition is assigned
                    process_auto_transition = 1;
                                            ^
compose/src/logic/canvas.c:1211:45: note: process_auto_transition is overwritten
                    process_auto_transition = 1;
                                            ^
compose/src/logic/canvas.c:1295:45: style: Variable 'process_auto_transition' is reassigned a value before the old one has been used. [redundantAssignment]
                    process_auto_transition = 1;
                                            ^
compose/src/logic/canvas.c:1294:45: note: process_auto_transition is assigned
                    process_auto_transition = 1;
                                            ^
compose/src/logic/canvas.c:1295:45: note: process_auto_transition is overwritten
                    process_auto_transition = 1;
                                            ^
compose/src/logic/canvas.c:1599:45: style: Variable 'process_auto_transition' is reassigned a value before the old one has been used. [redundantAssignment]
                    process_auto_transition = 1;
                                            ^
compose/src/logic/canvas.c:1598:45: note: process_auto_transition is assigned
                    process_auto_transition = 1;
                                            ^
compose/src/logic/canvas.c:1599:45: note: process_auto_transition is overwritten
                    process_auto_transition = 1;
                                            ^
compose/src/logic/canvas.c:1789:45: style: Variable 'process_auto_transition' is reassigned a value before the old one has been used. [redundantAssignment]
                    process_auto_transition = 1;
                                            ^
compose/src/logic/canvas.c:1788:45: note: process_auto_transition is assigned
                    process_auto_transition = 1;
                                            ^
compose/src/logic/canvas.c:1789:45: note: process_auto_transition is overwritten
                    process_auto_transition = 1;
                                            ^
compose/src/logic/canvas.c:1794:45: style: Variable 'process_auto_transition' is reassigned a value before the old one has been used. [redundantAssignment]
                    process_auto_transition = 1;
                                            ^
compose/src/logic/canvas.c:1793:45: note: process_auto_transition is assigned
                    process_auto_transition = 1;
                                            ^
compose/src/logic/canvas.c:1794:45: note: process_auto_transition is overwritten
                    process_auto_transition = 1;
                                            ^
compose/src/logic/canvas.c:2365:45: style: Variable 'process_auto_transition' is reassigned a value before the old one has been used. [redundantAssignment]
                    process_auto_transition = 1;
                                            ^
compose/src/logic/canvas.c:2364:45: note: process_auto_transition is assigned
                    process_auto_transition = 1;
                                            ^
compose/src/logic/canvas.c:2365:45: note: process_auto_transition is overwritten
                    process_auto_transition = 1;
                                            ^
compose/src/logic/canvas.c:2366:45: style: Variable 'process_auto_transition' is reassigned a value before the old one has been used. [redundantAssignment]
                    process_auto_transition = 1;
                                            ^
compose/src/logic/canvas.c:2365:45: note: process_auto_transition is assigned
                    process_auto_transition = 1;
                                            ^
compose/src/logic/canvas.c:2366:45: note: process_auto_transition is overwritten
                    process_auto_transition = 1;
                                            ^
compose/src/logic/canvas.c:2367:45: style: Variable 'process_auto_transition' is reassigned a value before the old one has been used. [redundantAssignment]
                    process_auto_transition = 1;
                                            ^
compose/src/logic/canvas.c:2366:45: note: process_auto_transition is assigned
                    process_auto_transition = 1;
                                            ^
compose/src/logic/canvas.c:2367:45: note: process_auto_transition is overwritten
                    process_auto_transition = 1;
                                            ^
compose/src/logic/canvas.c:2368:45: style: Variable 'process_auto_transition' is reassigned a value before the old one has been used. [redundantAssignment]
                    process_auto_transition = 1;
                                            ^
compose/src/logic/canvas.c:2367:45: note: process_auto_transition is assigned
                    process_auto_transition = 1;
                                            ^
compose/src/logic/canvas.c:2368:45: note: process_auto_transition is overwritten
                    process_auto_transition = 1;
                                            ^
compose/src/logic/canvas.c:2369:45: style: Variable 'process_auto_transition' is reassigned a value before the old one has been used. [redundantAssignment]
                    process_auto_transition = 1;
                                            ^
compose/src/logic/canvas.c:2368:45: note: process_auto_transition is assigned
                    process_auto_transition = 1;
                                            ^
compose/src/logic/canvas.c:2369:45: note: process_auto_transition is overwritten
                    process_auto_transition = 1;
                                            ^
compose/src/logic/canvas.c:2370:45: style: Variable 'process_auto_transition' is reassigned a value before the old one has been used. [redundantAssignment]
                    process_auto_transition = 1;
                                            ^
compose/src/logic/canvas.c:2369:45: note: process_auto_transition is assigned
                    process_auto_transition = 1;
                                            ^
compose/src/logic/canvas.c:2370:45: note: process_auto_transition is overwritten
                    process_auto_transition = 1;
                                            ^
compose/src/logic/canvas.c:2371:45: style: Variable 'process_auto_transition' is reassigned a value before the old one has been used. [redundantAssignment]
                    process_auto_transition = 1;
                                            ^
compose/src/logic/canvas.c:2370:45: note: process_auto_transition is assigned
                    process_auto_transition = 1;
                                            ^
compose/src/logic/canvas.c:2371:45: note: process_auto_transition is overwritten
                    process_auto_transition = 1;
                                            ^
compose/src/logic/canvas.c:2385:45: style: Variable 'process_auto_transition' is reassigned a value before the old one has been used. [redundantAssignment]
                    process_auto_transition = 1;
                                            ^
compose/src/logic/canvas.c:2384:45: note: process_auto_transition is assigned
                    process_auto_transition = 1;
                                            ^
compose/src/logic/canvas.c:2385:45: note: process_auto_transition is overwritten
                    process_auto_transition = 1;
                                            ^
compose/src/logic/canvas.c:2409:45: style: Variable 'process_auto_transition' is reassigned a value before the old one has been used. [redundantAssignment]
                    process_auto_transition = 1;
                                            ^
compose/src/logic/canvas.c:2408:45: note: process_auto_transition is assigned
                    process_auto_transition = 1;
                                            ^
compose/src/logic/canvas.c:2409:45: note: process_auto_transition is overwritten
                    process_auto_transition = 1;
                                            ^
compose/src/logic/canvas.c:2410:45: style: Variable 'process_auto_transition' is reassigned a value before the old one has been used. [redundantAssignment]
                    process_auto_transition = 1;
                                            ^
compose/src/logic/canvas.c:2409:45: note: process_auto_transition is assigned
                    process_auto_transition = 1;
                                            ^
compose/src/logic/canvas.c:2410:45: note: process_auto_transition is overwritten
                    process_auto_transition = 1;
                                            ^
compose/src/logic/canvas.c:2504:49: style: Variable 'process_auto_transition' is reassigned a value before the old one has been used. [redundantAssignment]
                        process_auto_transition = 1;
                                                ^
compose/src/logic/canvas.c:2503:49: note: process_auto_transition is assigned
                        process_auto_transition = 1;
                                                ^
compose/src/logic/canvas.c:2504:49: note: process_auto_transition is overwritten
                        process_auto_transition = 1;
                                                ^
compose/src/logic/canvas.c:2505:49: style: Variable 'process_auto_transition' is reassigned a value before the old one has been used. [redundantAssignment]
                        process_auto_transition = 1;
                                                ^
compose/src/logic/canvas.c:2504:49: note: process_auto_transition is assigned
                        process_auto_transition = 1;
                                                ^
compose/src/logic/canvas.c:2505:49: note: process_auto_transition is overwritten
                        process_auto_transition = 1;
                                                ^
compose/src/logic/canvas.c:2535:49: style: Variable 'process_auto_transition' is reassigned a value before the old one has been used. [redundantAssignment]
                        process_auto_transition = 1;
                                                ^
compose/src/logic/canvas.c:2534:49: note: process_auto_transition is assigned
                        process_auto_transition = 1;
                                                ^
compose/src/logic/canvas.c:2535:49: note: process_auto_transition is overwritten
                        process_auto_transition = 1;
                                                ^
compose/src/logic/canvas.c:2549:49: style: Variable 'process_auto_transition' is reassigned a value before the old one has been used. [redundantAssignment]
                        process_auto_transition = 1;
                                                ^
compose/src/logic/canvas.c:2548:49: note: process_auto_transition is assigned
                        process_auto_transition = 1;
                                                ^
compose/src/logic/canvas.c:2549:49: note: process_auto_transition is overwritten
                        process_auto_transition = 1;
                                                ^
compose/src/logic/canvas.c:2550:49: style: Variable 'process_auto_transition' is reassigned a value before the old one has been used. [redundantAssignment]
                        process_auto_transition = 1;
                                                ^
compose/src/logic/canvas.c:2549:49: note: process_auto_transition is assigned
                        process_auto_transition = 1;
                                                ^
compose/src/logic/canvas.c:2550:49: note: process_auto_transition is overwritten
                        process_auto_transition = 1;
                                                ^
compose/src/logic/canvas.c:2589:49: style: Variable 'process_auto_transition' is reassigned a value before the old one has been used. [redundantAssignment]
                        process_auto_transition = 1;
                                                ^
compose/src/logic/canvas.c:2588:49: note: process_auto_transition is assigned
                        process_auto_transition = 1;
                                                ^
compose/src/logic/canvas.c:2589:49: note: process_auto_transition is overwritten
                        process_auto_transition = 1;
                                                ^
compose/src/logic/canvas.c:2590:49: style: Variable 'process_auto_transition' is reassigned a value before the old one has been used. [redundantAssignment]
                        process_auto_transition = 1;
                                                ^
compose/src/logic/canvas.c:2589:49: note: process_auto_transition is assigned
                        process_auto_transition = 1;
                                                ^
compose/src/logic/canvas.c:2590:49: note: process_auto_transition is overwritten
                        process_auto_transition = 1;
                                                ^
compose/src/main.c:25:9: style: Variable 'rc' is not assigned a value. [unassignedVariable]
    int rc;
        ^
compose/src/model/model.c:539:8: style: Redundant initialization for 'rc'. The initialized value is overwritten before it is read. [redundantInitialization]
    rc = ufsmm_model_parse(model);
       ^
compose/src/model/model.c:464:12: note: rc is initialized
    int rc = -UFSMM_ERROR;
           ^
compose/src/model/model.c:539:8: note: rc is overwritten
    rc = ufsmm_model_parse(model);
       ^
compose/src/model/model.c:469:11: style: Redundant initialization for 'model'. The initialized value is overwritten before it is read. [redundantInitialization]
    model = malloc(sizeof(struct ufsmm_model));
          ^
compose/src/model/model.c:465:31: note: model is initialized
    struct ufsmm_model *model = (*model_pp);
                              ^
compose/src/model/model.c:469:11: note: model is overwritten
    model = malloc(sizeof(struct ufsmm_model));
          ^
compose/src/model/model.c:67:18: style: The scope of the variable 'j_action' can be reduced. [variableScope]
    json_object *j_action;
                 ^
compose/src/model/model.c:114:18: style: The scope of the variable 'j_trigger' can be reduced. [variableScope]
    json_object *j_trigger;
                 ^
compose/src/model/model.c:163:18: style: The scope of the variable 'j_signal' can be reduced. [variableScope]
    json_object *j_signal;
                 ^
compose/src/model/model.c:579:18: style: The scope of the variable 'action' can be reduced. [variableScope]
    json_object *action;
                 ^
compose/src/model/model.c:580:18: style: The scope of the variable 'name' can be reduced. [variableScope]
    json_object *name;
                 ^
compose/src/model/model.c:581:18: style: The scope of the variable 'id' can be reduced. [variableScope]
    json_object *id;
                 ^
compose/src/model/model.c:604:18: style: The scope of the variable 'trigger' can be reduced. [variableScope]
    json_object *trigger;
                 ^
compose/src/model/model.c:605:18: style: The scope of the variable 'name' can be reduced. [variableScope]
    json_object *name;
                 ^
compose/src/model/model.c:606:18: style: The scope of the variable 'id' can be reduced. [variableScope]
    json_object *id;
                 ^
compose/src/model/model.c:630:18: style: The scope of the variable 'signal' can be reduced. [variableScope]
    json_object *signal;
                 ^
compose/src/model/model.c:631:18: style: The scope of the variable 'name' can be reduced. [variableScope]
    json_object *name;
                 ^
compose/src/model/model.c:632:18: style: The scope of the variable 'id' can be reduced. [variableScope]
    json_object *id;
                 ^
compose/src/model/model.c:910:30: style: The scope of the variable 'r2' can be reduced. [variableScope]
    struct ufsmm_region *r, *r2;
                             ^
compose/src/model/model.c:462:65: style:inconclusive: Function 'ufsmm_model_load' argument 2 names different: declaration 'model' definition 'model_pp'. [funcArgNamesDifferent]
int ufsmm_model_load(const char *filename, struct ufsmm_model **model_pp)
                                                                ^
compose/src/model/model.h:307:65: note: Function 'ufsmm_model_load' argument 2 names different: declaration 'model' definition 'model_pp'.
int ufsmm_model_load(const char *filename, struct ufsmm_model **model);
                                                                ^
compose/src/model/model.c:462:65: note: Function 'ufsmm_model_load' argument 2 names different: declaration 'model' definition 'model_pp'.
int ufsmm_model_load(const char *filename, struct ufsmm_model **model_pp)
                                                                ^
compose/src/model/model.c:649:45: style:inconclusive: Function 'ufsmm_model_create' argument 1 names different: declaration 'model' definition 'model_pp'. [funcArgNamesDifferent]
int ufsmm_model_create(struct ufsmm_model **model_pp, const char *name)
                                            ^
compose/src/model/model.h:308:45: note: Function 'ufsmm_model_create' argument 1 names different: declaration 'model' definition 'model_pp'.
int ufsmm_model_create(struct ufsmm_model **model, const char *name);
                                            ^
compose/src/model/model.c:649:45: note: Function 'ufsmm_model_create' argument 1 names different: declaration 'model' definition 'model_pp'.
int ufsmm_model_create(struct ufsmm_model **model_pp, const char *name)
                                            ^
compose/src/model/state.c:86:18: style: The scope of the variable 'action' can be reduced. [variableScope]
    json_object *action;
                 ^
compose/src/model/state.c:544:56: style:inconclusive: Function 'ufsmm_state_add_transition' argument 3 names different: declaration 'transition' definition 't'. [funcArgNamesDifferent]
                              struct ufsmm_transition *t)
                                                       ^
compose/src/model/model.h:411:56: note: Function 'ufsmm_state_add_transition' argument 3 names different: declaration 'transition' definition 't'.
                              struct ufsmm_transition *transition);
                                                       ^
compose/src/model/state.c:544:56: note: Function 'ufsmm_state_add_transition' argument 3 names different: declaration 'transition' definition 't'.
                              struct ufsmm_transition *t)
                                                       ^
compose/src/model/transition.c:11:18: style: The scope of the variable 'j_vertice' can be reduced. [variableScope]
    json_object *j_vertice;
                 ^
compose/src/model/transition.c:13:12: style: The scope of the variable 'x' can be reduced. [variableScope]
    double x,y;
           ^
compose/src/model/transition.c:13:14: style: The scope of the variable 'y' can be reduced. [variableScope]
    double x,y;
             ^
compose/src/model/transition.c:352:18: style: The scope of the variable 'action' can be reduced. [variableScope]
    json_object *action;
                 ^
compose/src/model/transition.c:377:18: style: The scope of the variable 'guard' can be reduced. [variableScope]
    json_object *guard;
                 ^
compose/src/model/transition.c:640:9: style: The scope of the variable 'rc' can be reduced. [variableScope]
    int rc;
        ^
compose/src/model/transition.c:112:46: style:inconclusive: Function 'ufsmm_transition_deserialize' argument 3 names different: declaration 'j_object' definition 'j_transitions_list'. [funcArgNamesDifferent]
                                json_object *j_transitions_list)
                                             ^
compose/src/model/model.h:445:46: note: Function 'ufsmm_transition_deserialize' argument 3 names different: declaration 'j_object' definition 'j_transitions_list'.
                                json_object *j_object);
                                             ^
compose/src/model/transition.c:112:46: note: Function 'ufsmm_transition_deserialize' argument 3 names different: declaration 'j_object' definition 'j_transitions_list'.
                                json_object *j_transitions_list)
                                             ^
compose/src/nav.c:36:26: style: The scope of the variable 'r' can be reduced. [variableScope]
    struct ufsmm_region *r;
                         ^
compose/src/nav.c:100:25: style: The scope of the variable 's' can be reduced. [variableScope]
    struct ufsmm_state *s;
                        ^
compose/src/nav.c:313:56: style:inconclusive: Function 'ufsmm_nav_render' argument 2 names different: declaration 'widht' definition 'width'. [funcArgNamesDifferent]
void ufsmm_nav_render(struct ufsmm_canvas *canvas, int width, int height)
                                                       ^
compose/src/nav.h:7:56: note: Function 'ufsmm_nav_render' argument 2 names different: declaration 'widht' definition 'width'.
void ufsmm_nav_render(struct ufsmm_canvas *canvas, int widht, int height);
                                                       ^
compose/src/nav.c:313:56: note: Function 'ufsmm_nav_render' argument 2 names different: declaration 'widht' definition 'width'.
void ufsmm_nav_render(struct ufsmm_canvas *canvas, int width, int height)
                                                       ^
compose/src/pan_and_scale.c:6:33: style:inconclusive: Function 'canvas_update_offset' argument 1 names different: declaration 'user' definition 'context'. [funcArgNamesDifferent]
void canvas_update_offset(void *context)
                                ^
compose/src/logic/canvas.h:73:33: note: Function 'canvas_update_offset' argument 1 names different: declaration 'user' definition 'context'.
void canvas_update_offset(void *user);
                                ^
compose/src/pan_and_scale.c:6:33: note: Function 'canvas_update_offset' argument 1 names different: declaration 'user' definition 'context'.
void canvas_update_offset(void *context)
                                ^
compose/src/pan_and_scale.c:14:32: style:inconclusive: Function 'canvas_store_offset' argument 1 names different: declaration 'user' definition 'context'. [funcArgNamesDifferent]
void canvas_store_offset(void *context)
                               ^
compose/src/logic/canvas.h:100:32: note: Function 'canvas_store_offset' argument 1 names different: declaration 'user' definition 'context'.
void canvas_store_offset(void *user);
                               ^
compose/src/pan_and_scale.c:14:32: note: Function 'canvas_store_offset' argument 1 names different: declaration 'user' definition 'context'.
void canvas_store_offset(void *context)
                               ^
compose/src/pan_and_scale.c:21:29: style:inconclusive: Function 'canvas_inc_scale' argument 1 names different: declaration 'user' definition 'context'. [funcArgNamesDifferent]
void canvas_inc_scale(void *context)
                            ^
compose/src/logic/canvas.h:99:29: note: Function 'canvas_inc_scale' argument 1 names different: declaration 'user' definition 'context'.
void canvas_inc_scale(void *user);
                            ^
compose/src/pan_and_scale.c:21:29: note: Function 'canvas_inc_scale' argument 1 names different: declaration 'user' definition 'context'.
void canvas_inc_scale(void *context)
                            ^
compose/src/pan_and_scale.c:36:29: style:inconclusive: Function 'canvas_dec_scale' argument 1 names different: declaration 'user' definition 'context'. [funcArgNamesDifferent]
void canvas_dec_scale(void *context)
                            ^
compose/src/logic/canvas.h:101:29: note: Function 'canvas_dec_scale' argument 1 names different: declaration 'user' definition 'context'.
void canvas_dec_scale(void *user);
                            ^
compose/src/pan_and_scale.c:36:29: note: Function 'canvas_dec_scale' argument 1 names different: declaration 'user' definition 'context'.
void canvas_dec_scale(void *context)
                            ^
compose/src/render.c:195:12: style: The scope of the variable 'dashes' can be reduced. [variableScope]
    double dashes[] = {10.0,  /* ink */
           ^
compose/src/render.c:1158:61: style:inconclusive: Function 'ufsmm_canvas_render_transition' argument 2 names different: declaration 't' definition 'transitions'. [funcArgNamesDifferent]
                                  struct ufsmm_transitions *transitions)
                                                            ^
compose/src/render.h:32:62: note: Function 'ufsmm_canvas_render_transition' argument 2 names different: declaration 't' definition 'transitions'.
                                   struct ufsmm_transitions *t);
                                                             ^
compose/src/render.c:1158:61: note: Function 'ufsmm_canvas_render_transition' argument 2 names different: declaration 't' definition 'transitions'.
                                  struct ufsmm_transitions *transitions)
                                                            ^
compose/src/stack.c:8:43: style:inconclusive: Function 'ufsmm_stack_init' argument 1 names different: declaration 'stack' definition 'stack_pp'. [funcArgNamesDifferent]
int ufsmm_stack_init(struct ufsmm_stack **stack_pp)
                                          ^
compose/src/model/model.h:499:43: note: Function 'ufsmm_stack_init' argument 1 names different: declaration 'stack' definition 'stack_pp'.
int ufsmm_stack_init(struct ufsmm_stack **stack);
                                          ^
compose/src/stack.c:8:43: note: Function 'ufsmm_stack_init' argument 1 names different: declaration 'stack' definition 'stack_pp'.
int ufsmm_stack_init(struct ufsmm_stack **stack_pp)
                                          ^
compose/src/status.c:69:7: style: Variable 'x' is reassigned a value before the old one has been used. [redundantAssignment]
    x = width;
      ^
compose/src/status.c:62:11: note: x is assigned
        x += extents.width + 15;
          ^
compose/src/status.c:69:7: note: x is overwritten
    x = width;
      ^
compose/src/status.c:68:11: style: Variable 'first' is reassigned a value before the old one has been used. [redundantAssignment]
    first = true;
          ^
compose/src/status.c:63:15: note: first is assigned
        first = false;
              ^
compose/src/status.c:68:11: note: first is overwritten
    first = true;
          ^
compose/src/status.c:171:59: style:inconclusive: Function 'uc_status_insert2' argument 2 names different: declaration 'bg' definition 'color'. [funcArgNamesDifferent]
void uc_status_insert2(const char *text, enum ufsmm_color color)
                                                          ^
compose/src/status.h:25:59: note: Function 'uc_status_insert2' argument 2 names different: declaration 'bg' definition 'color'.
void uc_status_insert2(const char *text, enum ufsmm_color bg);
                                                          ^
compose/src/status.c:171:59: note: Function 'uc_status_insert2' argument 2 names different: declaration 'bg' definition 'color'.
void uc_status_insert2(const char *text, enum ufsmm_color color)
                                                          ^
compose/src/undo.c:866:50: style:inconclusive: Function 'ufsmm_undo_rename_region' argument 2 names different: declaration 'state' definition 'region'. [funcArgNamesDifferent]
                            struct ufsmm_region *region,
                                                 ^
compose/src/undo.h:70:50: note: Function 'ufsmm_undo_rename_region' argument 2 names different: declaration 'state' definition 'region'.
                            struct ufsmm_region *state,
                                                 ^
compose/src/undo.c:866:50: note: Function 'ufsmm_undo_rename_region' argument 2 names different: declaration 'state' definition 'region'.
                            struct ufsmm_region *region,
                                                 ^
compose/src/utils.c:48:20: style: The comparison 'pr == r' is always true because 'pr' and 'r' represent the same value. [knownConditionTrueFalse]
            if (pr == r)
                   ^
compose/src/utils.c:22:31: note: 'pr' is assigned value 'r' here.
    struct ufsmm_region *pr = r;
                              ^
compose/src/utils.c:48:20: note: The comparison 'pr == r' is always true because 'pr' and 'r' represent the same value.
            if (pr == r)
                   ^
compose/src/utils.c:181:11: style: Variable 'd' is assigned a value that is never used. [unreadVariable]
        d = d2;
          ^
compose/tests/nala.c:674:13: style: Condition 'res==0' is always true [knownConditionTrueFalse]
    if (res == 0) {
            ^
compose/tests/nala.c:672:16: note: Assignment 'res=setup()', assigned value is 0
    res = setup();
               ^
compose/tests/nala.c:674:13: note: Condition 'res==0' is always true
    if (res == 0) {
            ^
compose/tests/nala.c:678:17: style: Condition 'res==0' is always true [knownConditionTrueFalse]
        if (res == 0) {
                ^
compose/tests/nala.c:676:23: note: Assignment 'res=teardown()', assigned value is 0
        res = teardown();
                      ^
compose/tests/nala.c:678:17: note: Condition 'res==0' is always true
        if (res == 0) {
                ^
compose/tests/nala.c:529:13: portability: %ld in format string (no. 1) requires 'long' but the argument type is 'size_t {aka unsigned long}'. [invalidPrintfArgType_sint]
            snprintf(line_prefix,
            ^
compose/tests/nala.c:783:13: portability: %ld in format string (no. 1) requires 'long' but the argument type is 'size_t {aka unsigned long}'. [invalidPrintfArgType_sint]
            snprintf(line_prefix,
            ^
compose/tests/nala.c:789:13: portability: %ld in format string (no. 1) requires 'long' but the argument type is 'size_t {aka unsigned long}'. [invalidPrintfArgType_sint]
            snprintf(line_prefix,
            ^
compose/tests/nala.c:907:17: portability: %ld in format string (no. 1) requires 'long' but the argument type is 'size_t {aka unsigned long}'. [invalidPrintfArgType_sint]
                snprintf(line_prefix,
                ^
compose/tests/nala.c:924:17: portability: %ld in format string (no. 1) requires 'long' but the argument type is 'size_t {aka unsigned long}'. [invalidPrintfArgType_sint]
                snprintf(line_prefix,
                ^
compose/tests/nala.c:1149:5: portability: %ld in format string (no. 2) requires 'long' but the argument type is 'size_t {aka unsigned long}'. [invalidPrintfArgType_sint]
    printf("%s (length: %ld):\n", name_p, self_p->length);
    ^
compose/tests/nala.c:2002:9: portability: %lX in format string (no. 1) requires 'unsigned long' but the argument type is 'size_t {aka unsigned long}'. [invalidPrintfArgType_uint]
        fprintf(stream, "%06lX  ", offset);
        ^
compose/tests/nala.c:1840:13: error: Common realloc mistake: 'backtrack' nulled but not freed upon failure [memleakOnRealloc]
            backtrack = realloc(backtrack, capacity * sizeof(NalaDiffChunk));
            ^
compose/tests/nala.c:441:12: style: The scope of the variable 'nmembers' can be reduced. [variableScope]
    size_t nmembers;
           ^
compose/tests/nala.c:1121:13: style: The scope of the variable 'res' can be reduced. [variableScope]
    ssize_t res;
            ^
compose/tests/nala.c:1419:9: style: The scope of the variable 'res' can be reduced. [variableScope]
    int res;
        ^
compose/tests/nala.c:1608:24: style: The scope of the variable 'count' can be reduced. [variableScope]
    unsigned long long count;
                       ^
compose/tests/nala.c:1017:39: style:inconclusive: Function 'nala_capture_output_start' argument 1 names different: declaration 'stdout_pp' definition 'output_pp'. [funcArgNamesDifferent]
void nala_capture_output_start(char **output_pp, char **errput_pp)
                                      ^
compose/tests/nala.h:284:39: note: Function 'nala_capture_output_start' argument 1 names different: declaration 'stdout_pp' definition 'output_pp'.
void nala_capture_output_start(char **stdout_pp, char **stderr_pp);
                                      ^
compose/tests/nala.c:1017:39: note: Function 'nala_capture_output_start' argument 1 names different: declaration 'stdout_pp' definition 'output_pp'.
void nala_capture_output_start(char **output_pp, char **errput_pp)
                                      ^
compose/tests/nala.c:1017:57: style:inconclusive: Function 'nala_capture_output_start' argument 2 names different: declaration 'stderr_pp' definition 'errput_pp'. [funcArgNamesDifferent]
void nala_capture_output_start(char **output_pp, char **errput_pp)
                                                        ^
compose/tests/nala.h:284:57: note: Function 'nala_capture_output_start' argument 2 names different: declaration 'stderr_pp' definition 'errput_pp'.
void nala_capture_output_start(char **stdout_pp, char **stderr_pp);
                                                        ^
compose/tests/nala.c:1017:57: note: Function 'nala_capture_output_start' argument 2 names different: declaration 'stderr_pp' definition 'errput_pp'.
void nala_capture_output_start(char **output_pp, char **errput_pp)
                                                        ^
compose/tests/nala.c:1740:64: style:inconclusive: Function 'nala_new_diff_matrix_from_lengths' argument 2 names different: declaration 'modified_lengths' definition 'modified_length'. [funcArgNamesDifferent]
                                                        size_t modified_length)
                                                               ^
compose/tests/nala.c:194:64: note: Function 'nala_new_diff_matrix_from_lengths' argument 2 names different: declaration 'modified_lengths' definition 'modified_length'.
                                                        size_t modified_lengths);
                                                               ^
compose/tests/nala.c:1740:64: note: Function 'nala_new_diff_matrix_from_lengths' argument 2 names different: declaration 'modified_lengths' definition 'modified_length'.
                                                        size_t modified_length)
                                                               ^
compose/tests/test_actions.c:12:29: style: Unused variable: b [unusedVariable]
    struct ufsmm_state *a, *b, *c;
                            ^
compose/tests/test_actions.c:12:33: style: Unused variable: c [unusedVariable]
    struct ufsmm_state *a, *b, *c;
                                ^
compose/tests/test_actions.c:13:35: style: Unused variable: action2 [unusedVariable]
    struct ufsmm_action *action, *action2;
                                  ^
compose/tests/test_actions.c:71:29: style: Unused variable: b [unusedVariable]
    struct ufsmm_state *a, *b, *c;
                            ^
compose/tests/test_actions.c:71:33: style: Unused variable: c [unusedVariable]
    struct ufsmm_state *a, *b, *c;
                                ^
compose/tests/test_actions.c:72:35: style: Unused variable: action2 [unusedVariable]
    struct ufsmm_action *action, *action2;
                                  ^
compose/tests/test_actions.c:191:40: style: Variable 'entries_list' is assigned a value that is never used. [unreadVariable]
    struct ufsmm_actions *entries_list = &model->actions;//ufsmm_model_get_actions(model);
                                       ^
compose/tests/test_actions.c:149:29: style: Unused variable: b [unusedVariable]
    struct ufsmm_state *a, *b, *c;
                            ^
compose/tests/test_actions.c:149:33: style: Unused variable: c [unusedVariable]
    struct ufsmm_state *a, *b, *c;
                                ^
compose/tests/test_actions.c:150:35: style: Unused variable: action2 [unusedVariable]
    struct ufsmm_action *action, *action2;
                                  ^
compose/tests/test_actions.c:153:10: style: Unused variable: uuid_str2 [unusedVariable]
    char uuid_str2[37];
         ^
compose/tests/test_triggers.c:12:37: style: Unused variable: trigger2 [unusedVariable]
    struct ufsmm_trigger *trigger, *trigger2;
                                    ^
compose/tests/test_triggers.c:70:37: style: Unused variable: trigger2 [unusedVariable]
    struct ufsmm_trigger *trigger, *trigger2;
                                    ^
compose/tests/test_triggers.c:72:10: style: Unused variable: uuid_str2 [unusedVariable]
    char uuid_str2[37];
         ^
examples/dhcpclient/src/dhcpclient.c:51:5: warning: %i in format string (no. 1) requires 'int' but the argument type is 'unsigned int'. [invalidPrintfArgType_sint]
    printf (" %-3i|            |\n",ev);
    ^
examples/dhcpclient/src/dhcpclient.c:183:18: style: Variable 'err' is assigned a value that is never used. [unreadVariable]
    uint32_t err = UFSM_OK;
                 ^
examples/dhcpclient/src/dhcpclient.c:226:15: style: Unused variable: t [unusedVariable]
    pthread_t t;
              ^
tests/C/test_helper.c:60:17: warning: %i in format string (no. 1) requires 'int' but the argument type is 'unsigned int'. [invalidPrintfArgType_sint]
                printf("%4i %10s %10s !!\n", i, act, exp);
                ^
tests/C/test_helper.c:62:17: warning: %i in format string (no. 1) requires 'int' but the argument type is 'unsigned int'. [invalidPrintfArgType_sint]
                printf("%4i %10s %10s\n", i, act, exp);
                ^
tests/test_nested_composits.c:41:32: style: Condition 'm->csv[1]==2' is always true [knownConditionTrueFalse]
                if ((m->csv[1] == 2) && (m->csv[0] == 1)) {
                               ^
tests/test_nested_composits.c:39:28: note: Assuming that condition 'm->csv[1]==2' is not redundant
            if ((m->csv[1] == 2) && (m->csv[0] == 1)) {
                           ^
tests/test_nested_composits.c:41:32: note: Condition 'm->csv[1]==2' is always true
                if ((m->csv[1] == 2) && (m->csv[0] == 1)) {
                               ^
tests/test_nested_composits.c:41:52: style: Condition 'm->csv[0]==1' is always true [knownConditionTrueFalse]
                if ((m->csv[1] == 2) && (m->csv[0] == 1)) {
                                                   ^
tests/test_nested_composits.c:39:48: note: Assuming that condition 'm->csv[0]==1' is not redundant
            if ((m->csv[1] == 2) && (m->csv[0] == 1)) {
                                               ^
tests/test_nested_composits.c:41:52: note: Condition 'm->csv[0]==1' is always true
                if ((m->csv[1] == 2) && (m->csv[0] == 1)) {
                                                   ^
tests/test_nested_composits.c:52:32: style: Condition 'm->csv[1]==3' is always true [knownConditionTrueFalse]
                if ((m->csv[1] == 3) && (m->csv[0] == 1)) {
                               ^
tests/test_nested_composits.c:50:28: note: Assuming that condition 'm->csv[1]==3' is not redundant
            if ((m->csv[1] == 3) && (m->csv[0] == 1)) {
                           ^
tests/test_nested_composits.c:52:32: note: Condition 'm->csv[1]==3' is always true
                if ((m->csv[1] == 3) && (m->csv[0] == 1)) {
                               ^
tests/test_nested_composits.c:52:52: style: Condition 'm->csv[0]==1' is always true [knownConditionTrueFalse]
                if ((m->csv[1] == 3) && (m->csv[0] == 1)) {
                                                   ^
tests/test_nested_composits.c:50:48: note: Assuming that condition 'm->csv[0]==1' is not redundant
            if ((m->csv[1] == 3) && (m->csv[0] == 1)) {
                                               ^
tests/test_nested_composits.c:52:52: note: Condition 'm->csv[0]==1' is always true
                if ((m->csv[1] == 3) && (m->csv[0] == 1)) {
                                                   ^
tests/test_nested_composits.c:65:32: style: Condition 'm->csv[2]==10' is always true [knownConditionTrueFalse]
                if ((m->csv[2] == 10) && (m->csv[0] == 1)) {
                               ^
tests/test_nested_composits.c:63:28: note: Assuming that condition 'm->csv[2]==10' is not redundant
            if ((m->csv[2] == 10) && (m->csv[0] == 1)) {
                           ^
tests/test_nested_composits.c:65:32: note: Condition 'm->csv[2]==10' is always true
                if ((m->csv[2] == 10) && (m->csv[0] == 1)) {
                               ^
tests/test_nested_composits.c:65:53: style: Condition 'm->csv[0]==1' is always true [knownConditionTrueFalse]
                if ((m->csv[2] == 10) && (m->csv[0] == 1)) {
                                                    ^
tests/test_nested_composits.c:63:49: note: Assuming that condition 'm->csv[0]==1' is not redundant
            if ((m->csv[2] == 10) && (m->csv[0] == 1)) {
                                                ^
tests/test_nested_composits.c:65:53: note: Condition 'm->csv[0]==1' is always true
                if ((m->csv[2] == 10) && (m->csv[0] == 1)) {
                                                    ^
tests/test_nested_composits.c:71:32: style: Condition 'm->wsv[2]==5' is always true [knownConditionTrueFalse]
                if ((m->wsv[2] == 5)) {
                               ^
tests/test_nested_composits.c:70:29: note: Assignment 'm->wsv[2]=5', assigned value is 5
                m->wsv[2] = 5; // Ar1 = A1
                            ^
tests/test_nested_composits.c:71:32: note: Condition 'm->wsv[2]==5' is always true
                if ((m->wsv[2] == 5)) {
                               ^
tests/test_nested_composits.c:90:32: style: Condition 'm->csv[4]==7' is always true [knownConditionTrueFalse]
                if ((m->csv[4] == 7) && (m->csv[2] == 5) && (m->csv[0] == 1)) {
                               ^
tests/test_nested_composits.c:88:28: note: Assuming that condition 'm->csv[4]==7' is not redundant
            if ((m->csv[4] == 7) && (m->csv[2] == 5) && (m->csv[0] == 1)) {
                           ^
tests/test_nested_composits.c:90:32: note: Condition 'm->csv[4]==7' is always true
                if ((m->csv[4] == 7) && (m->csv[2] == 5) && (m->csv[0] == 1)) {
                               ^
tests/test_nested_composits.c:90:52: style: Condition 'm->csv[2]==5' is always true [knownConditionTrueFalse]
                if ((m->csv[4] == 7) && (m->csv[2] == 5) && (m->csv[0] == 1)) {
                                                   ^
tests/test_nested_composits.c:88:48: note: Assuming that condition 'm->csv[2]==5' is not redundant
            if ((m->csv[4] == 7) && (m->csv[2] == 5) && (m->csv[0] == 1)) {
                                               ^
tests/test_nested_composits.c:90:52: note: Condition 'm->csv[2]==5' is always true
                if ((m->csv[4] == 7) && (m->csv[2] == 5) && (m->csv[0] == 1)) {
                                                   ^
tests/test_nested_composits.c:90:72: style: Condition 'm->csv[0]==1' is always true [knownConditionTrueFalse]
                if ((m->csv[4] == 7) && (m->csv[2] == 5) && (m->csv[0] == 1)) {
                                                                       ^
tests/test_nested_composits.c:88:68: note: Assuming that condition 'm->csv[0]==1' is not redundant
            if ((m->csv[4] == 7) && (m->csv[2] == 5) && (m->csv[0] == 1)) {
                                                                   ^
tests/test_nested_composits.c:90:72: note: Condition 'm->csv[0]==1' is always true
                if ((m->csv[4] == 7) && (m->csv[2] == 5) && (m->csv[0] == 1)) {
                                                                       ^
tests/test_nested_composits.c:104:72: style: Condition 'm->csv[0]==1' is always true [knownConditionTrueFalse]
                if ((m->csv[3] == 6) && (m->csv[2] == 5) && (m->csv[0] == 1)) {
                                                                       ^
tests/test_nested_composits.c:102:28: note: Assuming that condition 'm->csv[0]==1' is not redundant
            if ((m->csv[0] == 1)) {
                           ^
tests/test_nested_composits.c:104:72: note: Condition 'm->csv[0]==1' is always true
                if ((m->csv[3] == 6) && (m->csv[2] == 5) && (m->csv[0] == 1)) {
                                                                       ^
tests/test_nested_composits.c:135:52: style: Condition 'm->csv[2]==5' is always true [knownConditionTrueFalse]
                if ((m->csv[4] == 8) && (m->csv[2] == 5) && (m->csv[0] == 1)) {
                                                   ^
tests/test_nested_composits.c:134:48: note: Assuming that condition 'm->csv[2]==5' is not redundant
            if ((m->csv[3] == 6) && (m->csv[2] == 5) && (m->csv[0] == 1)) {
                                               ^
tests/test_nested_composits.c:135:52: note: Condition 'm->csv[2]==5' is always true
                if ((m->csv[4] == 8) && (m->csv[2] == 5) && (m->csv[0] == 1)) {
                                                   ^
tests/test_nested_composits.c:135:72: style: Condition 'm->csv[0]==1' is always true [knownConditionTrueFalse]
                if ((m->csv[4] == 8) && (m->csv[2] == 5) && (m->csv[0] == 1)) {
                                                                       ^
tests/test_nested_composits.c:134:68: note: Assuming that condition 'm->csv[0]==1' is not redundant
            if ((m->csv[3] == 6) && (m->csv[2] == 5) && (m->csv[0] == 1)) {
                                                                   ^
tests/test_nested_composits.c:135:72: note: Condition 'm->csv[0]==1' is always true
                if ((m->csv[4] == 8) && (m->csv[2] == 5) && (m->csv[0] == 1)) {
                                                                       ^
tests/test_nested_composits.c:136:56: style: Condition 'm->csv[2]==5' is always true [knownConditionTrueFalse]
                    if ((m->csv[5] == 9) && (m->csv[2] == 5) && (m->csv[0] == 1)) {
                                                       ^
tests/test_nested_composits.c:134:48: note: Assuming that condition 'm->csv[2]==5' is not redundant
            if ((m->csv[3] == 6) && (m->csv[2] == 5) && (m->csv[0] == 1)) {
                                               ^
tests/test_nested_composits.c:136:56: note: Condition 'm->csv[2]==5' is always true
                    if ((m->csv[5] == 9) && (m->csv[2] == 5) && (m->csv[0] == 1)) {
                                                       ^
tests/test_nested_composits.c:136:76: style: Condition 'm->csv[0]==1' is always true [knownConditionTrueFalse]
                    if ((m->csv[5] == 9) && (m->csv[2] == 5) && (m->csv[0] == 1)) {
                                                                           ^
tests/test_nested_composits.c:134:68: note: Assuming that condition 'm->csv[0]==1' is not redundant
            if ((m->csv[3] == 6) && (m->csv[2] == 5) && (m->csv[0] == 1)) {
                                                                   ^
tests/test_nested_composits.c:136:76: note: Condition 'm->csv[0]==1' is always true
                    if ((m->csv[5] == 9) && (m->csv[2] == 5) && (m->csv[0] == 1)) {
                                                                           ^
tests/test_nested_composits.c:138:40: style: Condition 'm->csv[3]==6' is always true [knownConditionTrueFalse]
                        if ((m->csv[3] == 6) && (m->csv[2] == 5) && (m->csv[0] == 1)) {
                                       ^
tests/test_nested_composits.c:134:28: note: Assuming that condition 'm->csv[3]==6' is not redundant
            if ((m->csv[3] == 6) && (m->csv[2] == 5) && (m->csv[0] == 1)) {
                           ^
tests/test_nested_composits.c:138:40: note: Condition 'm->csv[3]==6' is always true
                        if ((m->csv[3] == 6) && (m->csv[2] == 5) && (m->csv[0] == 1)) {
                                       ^
tests/test_nested_composits.c:138:60: style: Condition 'm->csv[2]==5' is always true [knownConditionTrueFalse]
                        if ((m->csv[3] == 6) && (m->csv[2] == 5) && (m->csv[0] == 1)) {
                                                           ^
tests/test_nested_composits.c:134:48: note: Assuming that condition 'm->csv[2]==5' is not redundant
            if ((m->csv[3] == 6) && (m->csv[2] == 5) && (m->csv[0] == 1)) {
                                               ^
tests/test_nested_composits.c:138:60: note: Condition 'm->csv[2]==5' is always true
                        if ((m->csv[3] == 6) && (m->csv[2] == 5) && (m->csv[0] == 1)) {
                                                           ^
tests/test_nested_composits.c:138:80: style: Condition 'm->csv[0]==1' is always true [knownConditionTrueFalse]
                        if ((m->csv[3] == 6) && (m->csv[2] == 5) && (m->csv[0] == 1)) {
                                                                               ^
tests/test_nested_composits.c:134:68: note: Assuming that condition 'm->csv[0]==1' is not redundant
            if ((m->csv[3] == 6) && (m->csv[2] == 5) && (m->csv[0] == 1)) {
                                                                   ^
tests/test_nested_composits.c:138:80: note: Condition 'm->csv[0]==1' is always true
                        if ((m->csv[3] == 6) && (m->csv[2] == 5) && (m->csv[0] == 1)) {
                                                                               ^
tests/C/test_nested_states.c:20:0: style: The function 'BInit' is never used. [unusedFunction]

^
tests/C/test_nested_states.c:22:0: style: The function 'CInit' is never used. [unusedFunction]

^
tests/C/test_nested_states.c:23:0: style: The function 'DInit' is never used. [unusedFunction]

^
tests/C/test_nested_states.c:24:0: style: The function 'FInit' is never used. [unusedFunction]

^
tests/C/test_nested_states.c:25:0: style: The function 'GInit' is never used. [unusedFunction]

^
tests/C/test_nested_states.c:26:0: style: The function 'HInit' is never used. [unusedFunction]

^
tests/C/test_nested_states.c:27:0: style: The function 'StartInit' is never used. [unusedFunction]

^
compose/src/menu.c:430:0: style: The function 'a_add_deep_history' is never used. [unusedFunction]

^
compose/src/menu.c:378:0: style: The function 'a_add_terminate' is never used. [unusedFunction]

^
examples/linux/main.c:60:0: style: The function 'cancel_exit_timer' is never used. [unusedFunction]

^
examples/linux/main.c:74:0: style: The function 'cancel_init_delay_timer' is never used. [unusedFunction]

^
examples/dhcpclient/src/dhcpclient.c:110:0: style: The function 'dhcp_bcast_request' is never used. [unusedFunction]

^
examples/dhcpclient/src/dhcpclient.c:136:0: style: The function 'dhcp_check' is never used. [unusedFunction]

^
examples/dhcpclient/src/dhcpclient.c:149:0: style: The function 'dhcp_collect_reply' is never used. [unusedFunction]

^
examples/dhcpclient/src/dhcpclient.c:80:0: style: The function 'dhcp_disable_broadcast' is never used. [unusedFunction]

^
examples/dhcpclient/src/dhcpclient.c:99:0: style: The function 'dhcp_disable_socket' is never used. [unusedFunction]

^
examples/dhcpclient/src/dhcpclient.c:145:0: style: The function 'dhcp_discard_offer' is never used. [unusedFunction]

^
examples/dhcpclient/src/dhcpclient.c:95:0: style: The function 'dhcp_display_result' is never used. [unusedFunction]

^
examples/dhcpclient/src/dhcpclient.c:104:0: style: The function 'dhcp_enable_broadcast' is never used. [unusedFunction]

^
examples/dhcpclient/src/dhcpclient.c:85:0: style: The function 'dhcp_enable_socket' is never used. [unusedFunction]

^
examples/dhcpclient/src/dhcpclient.c:132:0: style: The function 'dhcp_halt_network' is never used. [unusedFunction]

^
examples/dhcpclient/src/dhcpclient.c:121:0: style: The function 'dhcp_reset' is never used. [unusedFunction]

^
examples/dhcpclient/src/dhcpclient.c:128:0: style: The function 'dhcp_select_offer' is never used. [unusedFunction]

^
examples/dhcpclient/src/dhcpclient.c:141:0: style: The function 'dhcp_send_decline' is never used. [unusedFunction]

^
examples/dhcpclient/src/dhcpclient.c:90:0: style: The function 'dhcp_send_request' is never used. [unusedFunction]

^
examples/dhcpclient/src/dhcpclient.c:116:0: style: The function 'dhcp_set_timers' is never used. [unusedFunction]

^
examples/dhcpclient/src/dhcpclient.c:76:0: style: The function 'dhcp_stop_timers' is never used. [unusedFunction]

^
examples/linux/main.c:31:0: style: The function 'do_cleanup' is never used. [unusedFunction]

^
examples/linux/main.c:36:0: style: The function 'do_work' is never used. [unusedFunction]

^
tests/C/test_final.c:8:0: style: The function 'eA1' is never used. [unusedFunction]

^
tests/C/test_nested_finals.c:12:0: style: The function 'eA121' is never used. [unusedFunction]

^
tests/C/test_final.c:10:0: style: The function 'eA2' is never used. [unusedFunction]

^
tests/C/test_fork_join.c:11:0: style: The function 'eB11' is never used. [unusedFunction]

^
tests/C/test_nested_states3.c:13:0: style: The function 'eB20' is never used. [unusedFunction]

^
tests/C/test_chained_signals.c:12:0: style: The function 'eC' is never used. [unusedFunction]

^
tests/C/test_model1.c:11:0: style: The function 'eC1' is never used. [unusedFunction]

^
tests/C/test_model1.c:13:0: style: The function 'eC11' is never used. [unusedFunction]

^
tests/C/test_model1.c:15:0: style: The function 'eC12' is never used. [unusedFunction]

^
tests/C/test_model1.c:19:0: style: The function 'eC2' is never used. [unusedFunction]

^
tests/C/test_chained_signals.c:15:0: style: The function 'eD' is never used. [unusedFunction]

^
tests/C/test_model1.c:23:0: style: The function 'eD1' is never used. [unusedFunction]

^
tests/C/test_model1.c:25:0: style: The function 'eD11' is never used. [unusedFunction]

^
tests/C/test_model1.c:27:0: style: The function 'eD12' is never used. [unusedFunction]

^
tests/C/test_model1.c:21:0: style: The function 'eD2' is never used. [unusedFunction]

^
tests/C/test_nested_states.c:18:0: style: The function 'eE' is never used. [unusedFunction]

^
tests/C/test_model1.c:29:0: style: The function 'eE1' is never used. [unusedFunction]

^
tests/C/test_model1.c:31:0: style: The function 'eE11' is never used. [unusedFunction]

^
tests/C/test_model1.c:33:0: style: The function 'eE12' is never used. [unusedFunction]

^
tests/C/test_fork_join.c:8:0: style: The function 'eEnd' is never used. [unusedFunction]

^
tests/C/test_nested_states.c:8:0: style: The function 'eF' is never used. [unusedFunction]

^
tests/C/test_nested_states.c:9:0: style: The function 'eG' is never used. [unusedFunction]

^
tests/C/test_nested_states.c:17:0: style: The function 'eH' is never used. [unusedFunction]

^
tests/C/test_state_conditions.c:6:0: style: The function 'eMode1' is never used. [unusedFunction]

^
tests/C/test_state_conditions.c:8:0: style: The function 'eMode2' is never used. [unusedFunction]

^
examples/linux/main.c:26:0: style: The function 'enter_active' is never used. [unusedFunction]

^
examples/linux/main.c:41:0: style: The function 'enter_idle' is never used. [unusedFunction]

^
examples/linux/main.c:21:0: style: The function 'enter_inactive' is never used. [unusedFunction]

^
examples/linux/main.c:46:0: style: The function 'exit_program' is never used. [unusedFunction]

^
tests/C/test_guard1.c:9:0: style: The function 'g1' is never used. [unusedFunction]

^
tests/C/test_guard1.c:10:0: style: The function 'g2' is never used. [unusedFunction]

^
examples/dimmer/main.c:19:0: style: The function 'lamp_100_percent' is never used. [unusedFunction]

^
examples/dimmer/main.c:4:0: style: The function 'lamp_10_percent' is never used. [unusedFunction]

^
examples/dimmer/main.c:9:0: style: The function 'lamp_30_percent' is never used. [unusedFunction]

^
examples/dimmer/main.c:14:0: style: The function 'lamp_50_percent' is never used. [unusedFunction]

^
examples/dimmer/main.c:24:0: style: The function 'lamp_off' is never used. [unusedFunction]

^
examples/simple/simple.c:9:0: style: The function 'led_off' is never used. [unusedFunction]

^
examples/simple/simple.c:4:0: style: The function 'led_on' is never used. [unusedFunction]

^
compose/tests/nala.c:1017:0: style: The function 'nala_capture_output_start' is never used. [unusedFunction]

^
compose/tests/nala.c:740:0: style: The function 'nala_check_string_equal' is never used. [unusedFunction]

^
compose/tests/nala.c:993:0: style: The function 'nala_check_substring' is never used. [unusedFunction]

^
compose/tests/nala.c:1955:0: style: The function 'nala_diff_strings' is never used. [unusedFunction]

^
compose/tests/nala.c:745:0: style: The function 'nala_format' is never used. [unusedFunction]

^
compose/tests/nala.c:970:0: style: The function 'nala_format_memory' is never used. [unusedFunction]

^
compose/tests/nala.c:944:0: style: The function 'nala_format_string' is never used. [unusedFunction]

^
compose/tests/nala.c:1029:0: style: The function 'nala_register_test' is never used. [unusedFunction]

^
compose/tests/nala.c:1351:0: style: The function 'nala_subprocess_completed_successfully' is never used. [unusedFunction]

^
compose/tests/nala.c:1339:0: style: The function 'nala_subprocess_exec' is never used. [unusedFunction]

^
compose/tests/nala.c:1345:0: style: The function 'nala_subprocess_exec_output' is never used. [unusedFunction]

^
compose/tests/nala.c:1356:0: style: The function 'nala_subprocess_result_print' is never used. [unusedFunction]

^
compose/tests/nala.c:1000:0: style: The function 'nala_test_failure' is never used. [unusedFunction]

^
tests/C/test_model1.c:36:0: style: The function 'o1' is never used. [unusedFunction]

^
tests/C/test_model1.c:35:0: style: The function 'o2' is never used. [unusedFunction]

^
examples/dhcpclient/src/dhcpclient.c:171:0: style: The function 'q_test' is never used. [unusedFunction]

^
compose/src/menu.c:410:0: style: The function 'r_add_deep_history' is never used. [unusedFunction]

^
compose/src/menu.c:358:0: style: The function 'r_add_terminate' is never used. [unusedFunction]

^
examples/linux/main.c:53:0: style: The function 'start_exit_timer' is never used. [unusedFunction]

^
examples/linux/main.c:67:0: style: The function 'start_init_delay_timer' is never used. [unusedFunction]

^
tests/test_init_to_nested.c:6:0: style: The function 'test_init_to_nested_init' is never used. [unusedFunction]

^
compose/src/status.c:16:0: style: The function 'uc_status_free' is never used. [unusedFunction]

^
compose/src/status.c:166:0: style: The function 'uc_status_insert' is never used. [unusedFunction]

^
compose/src/status.c:147:0: style: The function 'uc_status_push' is never used. [unusedFunction]

^
compose/src/dialogs/edit_state_dialog.c:4:0: style: The function 'ufsm_edit_state_dialog' is never used. [unusedFunction]

^
examples/linux/timer.c:48:0: style: The function 'ufsm_timer_set' is never used. [unusedFunction]

^
compose/src/model/model.c:1240:0: style: The function 'ufsmm_model_get_trigger' is never used. [unusedFunction]

^
compose/src/utils.c:5:0: style: The function 'ufsmm_region_is_root_or_offpage' is never used. [unusedFunction]

^
compose/src/model/state.c:536:0: style: The function 'ufsmm_state_delete_exit' is never used. [unusedFunction]

^
compose/src/model/state.c:69:0: style: The function 'ufsmm_state_get_size' is never used. [unusedFunction]

^
compose/src/model/state.c:76:0: style: The function 'ufsmm_state_get_xy' is never used. [unusedFunction]

^
compose/src/model/state.c:55:0: style: The function 'ufsmm_state_set_size' is never used. [unusedFunction]

^
compose/src/model/state.c:62:0: style: The function 'ufsmm_state_set_xy' is never used. [unusedFunction]

^
compose/src/model/transition.c:768:0: style: The function 'ufsmm_transition_delete_action' is never used. [unusedFunction]

^
compose/src/model/transition.c:692:0: style: The function 'ufsmm_transition_delete_guard' is never used. [unusedFunction]

^
tests/C/test_chained_signals.c:7:0: style: The function 'xA' is never used. [unusedFunction]

^
tests/C/test_final.c:9:0: style: The function 'xA1' is never used. [unusedFunction]

^
tests/C/test_nested_finals.c:13:0: style: The function 'xA121' is never used. [unusedFunction]

^
tests/C/test_final.c:11:0: style: The function 'xA2' is never used. [unusedFunction]

^
tests/C/test_chained_signals.c:10:0: style: The function 'xB' is never used. [unusedFunction]

^
tests/C/test_fork_join.c:10:0: style: The function 'xB1' is never used. [unusedFunction]

^
tests/C/test_fork_join.c:12:0: style: The function 'xB11' is never used. [unusedFunction]

^
tests/C/test_fork_join.c:14:0: style: The function 'xB2' is never used. [unusedFunction]

^
tests/C/test_chained_signals.c:13:0: style: The function 'xC' is never used. [unusedFunction]

^
tests/C/test_model1.c:12:0: style: The function 'xC1' is never used. [unusedFunction]

^
tests/C/test_model1.c:14:0: style: The function 'xC11' is never used. [unusedFunction]

^
tests/C/test_model1.c:16:0: style: The function 'xC12' is never used. [unusedFunction]

^
tests/C/test_model1.c:20:0: style: The function 'xC2' is never used. [unusedFunction]

^
tests/C/test_chained_signals.c:16:0: style: The function 'xD' is never used. [unusedFunction]

^
tests/C/test_model1.c:24:0: style: The function 'xD1' is never used. [unusedFunction]

^
tests/C/test_model1.c:26:0: style: The function 'xD11' is never used. [unusedFunction]

^
tests/C/test_model1.c:28:0: style: The function 'xD12' is never used. [unusedFunction]

^
tests/C/test_model1.c:22:0: style: The function 'xD2' is never used. [unusedFunction]

^
tests/C/test_nested_states2.c:17:0: style: The function 'xE' is never used. [unusedFunction]

^
tests/C/test_model1.c:30:0: style: The function 'xE1' is never used. [unusedFunction]

^
tests/C/test_model1.c:32:0: style: The function 'xE11' is never used. [unusedFunction]

^
tests/C/test_model1.c:34:0: style: The function 'xE12' is never used. [unusedFunction]

^
tests/C/test_nested_states2.c:19:0: style: The function 'xF' is never used. [unusedFunction]

^
tests/C/test_state_conditions.c:7:0: style: The function 'xMode1' is never used. [unusedFunction]

^
tests/C/test_state_conditions.c:9:0: style: The function 'xMode2' is never used. [unusedFunction]

^
tests/C/test_fork_join.c:16:0: style: The function 'xStart' is never used. [unusedFunction]

^
nofile:0:0: information: Cppcheck cannot find all the include files (use --check-config for details) [missingInclude]

